apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: NzBiMmI1NjktYTk5Yi00NzZiLWEwYjQtOTYzMmQ0MTMzYWUw
      agentVersion: azure-mdsd-1.29.7
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2024-05-02T06:59:52Z"
    generateName: ama-logs-
    labels:
      component: ama-logs-agent
      controller-revision-hash: 7694c5686d
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: ama-logs-4tdwc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-logs
      uid: 2bc7fa41-28f5-4bac-82a9-453a6d973c95
    resourceVersion: "1931"
    uid: 21769e22-e16f-4b55-9d1c-503b1aef7502
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-14687916-vmss000001
    containers:
    - args:
      - --secret-namespace=kube-system
      - --secret-name=aad-msi-auth-token
      - --token-server-listening-port=8888
      - --health-server-listening-port=9999
      - --restart-pod-waiting-minutes-on-broken-connection=240
      command:
      - /addon-token-adapter
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9999
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: addon-token-adapter
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 20m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bbfm9
        readOnly: true
    - env:
      - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
        value: "1"
      - name: AKS_REGION
        value: eastus
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: AKS_RESOURCE_ID
        value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
      - name: USING_AAD_MSI_AUTH
        value: "true"
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: CUSTOM_METRICS_DISABLED
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: FBIT_TAIL_BUFFER_MAX_SIZE
        value: "1"
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_web_server_db_dt_kubes_eastus
      - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
        value: koreacentral,norwayeast,eastus2
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
        value: "false"
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AKS_CLUSTER_NAME
        value: dt_kubes
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: FBIT_SERVICE_FLUSH_INTERVAL
        value: "15"
      - name: CONTROLLER_TYPE
        value: DaemonSet
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.19
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 28330
        hostPort: 28330
        name: syslog
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 750Mi
        requests:
          cpu: 75m
          memory: 325Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /hostfs
        mountPropagation: HostToContainer
        name: host-root
        readOnly: true
      - mountPath: /var/log
        name: host-log
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/lib/docker/containers
        name: containerlog-path
        readOnly: true
      - mountPath: /mnt/docker
        name: containerlog-path-2
        readOnly: true
      - mountPath: /mnt/containers
        name: containerlog-path-3
        readOnly: true
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bbfm9
        readOnly: true
    - env:
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs-prometheus
            divisor: "0"
            resource: limits.memory
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_web_server_db_dt_kubes_eastus
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: AKS_CLUSTER_NAME
        value: dt_kubes
      - name: AKS_RESOURCE_ID
        value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
      - name: AKS_REGION
        value: eastus
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CONTAINER_TYPE
        value: PrometheusSidecar
      - name: USING_AAD_MSI_AUTH
        value: "true"
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.19
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs-prometheus
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 225Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bbfm9
        readOnly: true
    dnsConfig:
      options:
      - name: ndots
        value: "3"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: PreferNoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - emptyDir: {}
      name: mdsd-prometheus-sock
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /var/run/mdsd-ci
        type: ""
      name: mdsd-sock
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: containerlog-path
    - hostPath:
        path: /mnt/docker
        type: ""
      name: containerlog-path-2
    - hostPath:
        path: /mnt/containers
        type: ""
      name: containerlog-path-3
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-bbfm9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6af9b4d94dca325caf84669e1c768be9564282d557c468d394e6d016c3e3b309
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
      imageID: mcr.microsoft.com/aks/msi/addon-token-adapter@sha256:14072dea6268e52c012ead45508c1ac4479f04852c90ff618d8e8a799c92bb19
      lastState: {}
      name: addon-token-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:53Z"
    - containerID: containerd://ae329b09a6fc3cccf2a3a8d51a4a164a6a1df58770cba793848c7a05b38532d1
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.19
      imageID: sha256:9f5cbe6c94d39f3354453dabbee88b5c9987256314532140bf4151714853c36f
      lastState: {}
      name: ama-logs
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:53Z"
    - containerID: containerd://0e5bba05a9ad18e837815d8941642963752895465ce98f2f3d805e218937771d
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.19
      imageID: sha256:9f5cbe6c94d39f3354453dabbee88b5c9987256314532140bf4151714853c36f
      lastState: {}
      name: ama-logs-prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:53Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.244.1.11
    podIPs:
    - ip: 10.244.1.11
    qosClass: Burstable
    startTime: "2024-05-02T06:59:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: NzBiMmI1NjktYTk5Yi00NzZiLWEwYjQtOTYzMmQ0MTMzYWUw
      agentVersion: azure-mdsd-1.29.7
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2024-05-02T06:59:52Z"
    generateName: ama-logs-rs-5fd7bf8d6c-
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 5fd7bf8d6c
      rsName: ama-logs-rs
    name: ama-logs-rs-5fd7bf8d6c-g86dx
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ama-logs-rs-5fd7bf8d6c
      uid: c66e4c9b-9513-4728-9ab4-414548c08574
    resourceVersion: "1933"
    uid: e7961a7d-e1cc-4efe-b644-4a1f57202f4a
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        - preference:
            matchExpressions:
            - key: storageprofile
              operator: NotIn
              values:
              - managed
          weight: 1
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
    containers:
    - args:
      - --secret-namespace=kube-system
      - --secret-name=aad-msi-auth-token
      - --token-server-listening-port=8888
      - --health-server-listening-port=9999
      - --restart-pod-waiting-minutes-on-broken-connection=240
      command:
      - /addon-token-adapter
      env:
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9999
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: addon-token-adapter
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zghhl
        readOnly: true
    - env:
      - name: NUM_OF_FLUENTD_WORKERS
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.cpu
      - name: SIDECAR_SCRAPING_ENABLED
        value: "true"
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: AKS_RESOURCE_ID
        value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: USING_AAD_MSI_AUTH
        value: "true"
      - name: AKS_REGION
        value: eastus
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: CONTROLLER_TYPE
        value: ReplicaSet
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: AZMON_WINDOWS_FLUENT_BIT_DISABLED
        value: "true"
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: AKS_CLUSTER_NAME
        value: dt_kubes
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_web_server_db_dt_kubes_eastus
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.19
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 25227
        name: in-rs-tcp
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1536Mi
        requests:
          cpu: 150m
          memory: 250Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: host-log
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config
        name: ama-logs-rs-config
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zghhl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: ama-logs-rs-config
      name: ama-logs-rs-config
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-zghhl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://54be7894ed3701ecaaf8638afaef14fc0e62670da5f156404cad816a7f9ebfa2
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
      imageID: mcr.microsoft.com/aks/msi/addon-token-adapter@sha256:14072dea6268e52c012ead45508c1ac4479f04852c90ff618d8e8a799c92bb19
      lastState: {}
      name: addon-token-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:53Z"
    - containerID: containerd://15b27213eda86af6ccac4aceefc6d3d564baa893962de4daf74b336e8a79dd8e
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.19
      imageID: sha256:9f5cbe6c94d39f3354453dabbee88b5c9987256314532140bf4151714853c36f
      lastState: {}
      name: ama-logs
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:53Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.244.1.10
    podIPs:
    - ip: 10.244.1.10
    qosClass: Burstable
    startTime: "2024-05-02T06:59:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: NzBiMmI1NjktYTk5Yi00NzZiLWEwYjQtOTYzMmQ0MTMzYWUw
      agentVersion: azure-mdsd-1.29.7
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2024-05-02T06:59:52Z"
    generateName: ama-logs-
    labels:
      component: ama-logs-agent
      controller-revision-hash: 7694c5686d
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: ama-logs-stx9q
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-logs
      uid: 2bc7fa41-28f5-4bac-82a9-453a6d973c95
    resourceVersion: "1927"
    uid: 8eac4304-32df-4f42-929e-f7e86ca02b8c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-14687916-vmss000000
    containers:
    - args:
      - --secret-namespace=kube-system
      - --secret-name=aad-msi-auth-token
      - --token-server-listening-port=8888
      - --health-server-listening-port=9999
      - --restart-pod-waiting-minutes-on-broken-connection=240
      command:
      - /addon-token-adapter
      env:
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: AZMON_COLLECT_ENV
        value: "false"
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9999
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: addon-token-adapter
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 20m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sm2q2
        readOnly: true
    - env:
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: CUSTOM_METRICS_DISABLED
        value: "false"
      - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
        value: "false"
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: FBIT_SERVICE_FLUSH_INTERVAL
        value: "15"
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: AKS_RESOURCE_ID
        value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
      - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
        value: koreacentral,norwayeast,eastus2
      - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
        value: "1"
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_web_server_db_dt_kubes_eastus
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: FBIT_TAIL_BUFFER_MAX_SIZE
        value: "1"
      - name: AKS_REGION
        value: eastus
      - name: AKS_CLUSTER_NAME
        value: dt_kubes
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: USING_AAD_MSI_AUTH
        value: "true"
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.19
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 28330
        hostPort: 28330
        name: syslog
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 750Mi
        requests:
          cpu: 75m
          memory: 325Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /hostfs
        mountPropagation: HostToContainer
        name: host-root
        readOnly: true
      - mountPath: /var/log
        name: host-log
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/lib/docker/containers
        name: containerlog-path
        readOnly: true
      - mountPath: /mnt/docker
        name: containerlog-path-2
        readOnly: true
      - mountPath: /mnt/containers
        name: containerlog-path-3
        readOnly: true
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sm2q2
        readOnly: true
    - env:
      - name: CONTAINER_TYPE
        value: PrometheusSidecar
      - name: USING_AAD_MSI_AUTH
        value: "true"
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs-prometheus
            divisor: "0"
            resource: limits.memory
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: AKS_RESOURCE_ID
        value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_web_server_db_dt_kubes_eastus
      - name: AKS_REGION
        value: eastus
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AKS_CLUSTER_NAME
        value: dt_kubes
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.19
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs-prometheus
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 225Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sm2q2
        readOnly: true
    dnsConfig:
      options:
      - name: ndots
        value: "3"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: PreferNoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - emptyDir: {}
      name: mdsd-prometheus-sock
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /var/run/mdsd-ci
        type: ""
      name: mdsd-sock
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: containerlog-path
    - hostPath:
        path: /mnt/docker
        type: ""
      name: containerlog-path-2
    - hostPath:
        path: /mnt/containers
        type: ""
      name: containerlog-path-3
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-sm2q2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d5461f05e82635be54ab4aa7149f6e722d5dd88890983d6dc2589ef5199b57af
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
      imageID: mcr.microsoft.com/aks/msi/addon-token-adapter@sha256:14072dea6268e52c012ead45508c1ac4479f04852c90ff618d8e8a799c92bb19
      lastState: {}
      name: addon-token-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:52Z"
    - containerID: containerd://f8794328d21895c51a7d7bee9e236108e7543946eaeb4cc08bc04df6d442ec1b
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.19
      imageID: sha256:9f5cbe6c94d39f3354453dabbee88b5c9987256314532140bf4151714853c36f
      lastState: {}
      name: ama-logs
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:53Z"
    - containerID: containerd://aec85bacee5379f423b313f392a55f8a3e632df89cd60446fe01220ad601bfff
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.19
      imageID: sha256:9f5cbe6c94d39f3354453dabbee88b5c9987256314532140bf4151714853c36f
      lastState: {}
      name: ama-logs-prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:53Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.244.0.6
    podIPs:
    - ip: 10.244.0.6
    qosClass: Burstable
    startTime: "2024-05-02T06:59:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      agentVersion: 0.0.0.1
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      schema-versions: v1
    creationTimestamp: "2024-05-02T06:59:47Z"
    generateName: ama-metrics-55b746ffcd-
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 55b746ffcd
      rsName: ama-metrics
    name: ama-metrics-55b746ffcd-hb6mn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ama-metrics-55b746ffcd
      uid: 28b41d2c-f01b-467b-9758-1d650e842cc9
    resourceVersion: "1850"
    uid: 3b0cbb6a-f218-40c4-b8b7-329832980c95
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        - preference:
            matchExpressions:
            - key: azuremonitor/metrics.replica.preferred
              operator: In
              values:
              - "true"
          weight: 50
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.azure.com/cluster
              operator: Exists
    containers:
    - env:
      - name: CLUSTER
        value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
      - name: OMS_TLD
        value: opinsights.azure.com
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: WINMODE
        value: advanced
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: MODE
        value: advanced
      - name: MAC
        value: "true"
      - name: AZMON_OPERATOR_ENABLED
        value: "true"
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CONTAINER_MEMORY_LIMIT
        valueFrom:
          resourceFieldRef:
            containerName: prometheus-collector
            divisor: 1Mi
            resource: limits.memory
      - name: AGENT_VERSION
        value: 6.8.7-main-04-09-2024-82adbf97
      - name: AKSREGION
        value: eastus
      - name: customEnvironment
        value: azurepubliccloud
      - name: KUBE_STATE_NAME
        value: ama-metrics-ksm
      - name: NODE_EXPORTER_NAME
      - name: NODE_EXPORTER_TARGETPORT
        value: "19100"
      - name: KUBE_STATE_VERSION
        value: v2.9.2
      - name: OPERATOR_TARGETS_TA_IMG_VERSION
        value: 6.8.7-main-04-09-2024-82adbf97-targetallocator
      - name: CONTROLLER_TYPE
        value: ReplicaSet
      - name: OPERATOR_TARGETS_CFG_READER_IMG_VERSION
        value: 6.8.7-main-04-09-2024-82adbf97-cfg
      - name: NODE_EXPORTER_VERSION
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: CONTAINER_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            containerName: prometheus-collector
            divisor: 1m
            resource: limits.cpu
      - name: MINIMAL_INGESTION_PROFILE
        value: "true"
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/microsoft/liveness/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      name: prometheus-collector
      resources:
        limits:
          cpu: "7"
          memory: 14Gi
        requests:
          cpu: 150m
          memory: 500Mi
      securityContext:
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/prometheus/certs
        name: ama-metrics-tls-secret-volume
        readOnly: true
      - mountPath: /etc/config/settings/prometheus
        name: prometheus-config-vol
        readOnly: true
      - mountPath: /var/log/containers
        name: host-log-containers
        readOnly: true
      - mountPath: /var/log/pods
        name: host-log-pods
        readOnly: true
      - mountPath: /anchors/mariner
        name: anchors-mariner
        readOnly: true
      - mountPath: /anchors/ubuntu
        name: anchors-ubuntu
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m8sxf
        readOnly: true
    - args:
      - --secret-namespace=kube-system
      - --secret-name=aad-msi-auth-token
      - --token-server-listening-port=7777
      - --health-server-listening-port=9999
      - --restart-pod-waiting-minutes-on-broken-connection=240
      command:
      - /addon-token-adapter
      env:
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9999
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: addon-token-adapter
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 20m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m8sxf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-metrics-serviceaccount
    serviceAccountName: ama-metrics-serviceaccount
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: ama-metrics-settings-configmap
        optional: true
      name: settings-vol-config
    - configMap:
        defaultMode: 420
        name: ama-metrics-prometheus-config
        optional: true
      name: prometheus-config-vol
    - hostPath:
        path: /var/log/containers
        type: ""
      name: host-log-containers
    - hostPath:
        path: /var/log/pods
        type: ""
      name: host-log-pods
    - hostPath:
        path: /etc/pki/ca-trust/anchors/
        type: DirectoryOrCreate
      name: anchors-mariner
    - name: ama-metrics-tls-secret-volume
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-metrics-mtls-secret
    - hostPath:
        path: /usr/local/share/ca-certificates/
        type: DirectoryOrCreate
      name: anchors-ubuntu
    - name: kube-api-access-m8sxf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1c7d2023f511edf514a56b90ecab49ea991df71d26bd7f5ebbcd1ef97b927097
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
      imageID: mcr.microsoft.com/aks/msi/addon-token-adapter@sha256:14072dea6268e52c012ead45508c1ac4479f04852c90ff618d8e8a799c92bb19
      lastState: {}
      name: addon-token-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:49Z"
    - containerID: containerd://47e1b3c835a30eb48d81a6396916008294521a33458f477e689687546f8ee42c
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97
      imageID: sha256:7a091923e8cfa754007d3e3ecb827b8fca6735297f38fadfd69a2f91d11808e8
      lastState: {}
      name: prometheus-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:49Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.244.1.9
    podIPs:
    - ip: 10.244.1.9
    qosClass: Burstable
    startTime: "2024-05-02T06:59:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    creationTimestamp: "2024-05-02T06:59:47Z"
    generateName: ama-metrics-ksm-d9c6f475b-
    labels:
      app.kubernetes.io/component: ama-metrics
      app.kubernetes.io/name: ama-metrics-ksm
      app.kubernetes.io/part-of: ama-metrics-ksm
      app.kubernetes.io/version: 2.9.2
      helm.sh/chart: azure-monitor-metrics-addon-0.1.0
      kubernetes.azure.com/managedby: aks
      pod-template-hash: d9c6f475b
    name: ama-metrics-ksm-d9c6f475b-8sksj
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ama-metrics-ksm-d9c6f475b
      uid: 8b67a831-76fa-4f1f-8337-701c38ec3bc4
    resourceVersion: "1952"
    uid: 27497e79-525a-401e-aee0-83e8145b878e
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.azure.com/cluster
              operator: Exists
    containers:
    - args:
      - --port=8080
      - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
      - --telemetry-port=8081
      env:
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-state-metrics:v2.9.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: ama-metrics-ksm
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: "1"
          memory: 5Gi
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6l6sj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsUser: 65534
    serviceAccount: ama-metrics-ksm
    serviceAccountName: ama-metrics-ksm
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-6l6sj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fb6185b52c6a3c1a83de0008bf5ac64378b33a81a3fc45f840a758a6673f5f71
      image: mcr.microsoft.com/oss/kubernetes/kube-state-metrics:v2.9.2
      imageID: sha256:415688a2a94d2164260d59d3d1973313e1daf7c245998a5742c0f117255403c3
      lastState: {}
      name: ama-metrics-ksm
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:48Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.244.0.4
    podIPs:
    - ip: 10.244.0.4
    qosClass: Burstable
    startTime: "2024-05-02T06:59:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      agentVersion: 0.0.0.1
      schema-versions: v1
    creationTimestamp: "2024-05-02T06:59:47Z"
    generateName: ama-metrics-node-
    labels:
      controller-revision-hash: 7858cb85b7
      dsName: ama-metrics-node
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: ama-metrics-node-2spbt
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-metrics-node
      uid: a1f99d55-b409-4302-aa1c-eeb7c370ae94
    resourceVersion: "1851"
    uid: 934725f4-0a35-4ca8-874c-c0ed763d4973
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-14687916-vmss000001
    containers:
    - env:
      - name: customEnvironment
        value: azurepubliccloud
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONTAINER_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            containerName: prometheus-collector
            divisor: 1m
            resource: limits.cpu
      - name: KUBE_STATE_NAME
        value: ama-metrics-ksm
      - name: NODE_EXPORTER_NAME
      - name: MODE
        value: advanced
      - name: WINMODE
        value: advanced
      - name: MAC
        value: "true"
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBE_STATE_VERSION
        value: mcr.microsoft.com/oss/kubernetes/kube-state-metrics:v2.9.2
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: CLUSTER
        value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CONTAINER_MEMORY_LIMIT
        valueFrom:
          resourceFieldRef:
            containerName: prometheus-collector
            divisor: 1Mi
            resource: limits.memory
      - name: AGENT_VERSION
        value: 6.8.7-main-04-09-2024-82adbf97
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: NODE_EXPORTER_VERSION
      - name: MINIMAL_INGESTION_PROFILE
        value: "true"
      - name: APPMONITORING_OPENTELEMETRYMETRICS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYMETRICS_PORT
        value: "28333"
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: AKSREGION
        value: eastus
      - name: NODE_EXPORTER_TARGETPORT
        value: "19100"
      - name: OMS_TLD
        value: opinsights.azure.com
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/microsoft/liveness/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      name: prometheus-collector
      resources:
        limits:
          cpu: 200m
          memory: 1Gi
        requests:
          cpu: 50m
          memory: 150Mi
      securityContext:
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/prometheus/certs
        name: ama-metrics-tls-secret-volume
        readOnly: true
      - mountPath: /etc/config/settings/prometheus
        name: prometheus-config-vol
        readOnly: true
      - mountPath: /var/log/containers
        name: host-log-containers
        readOnly: true
      - mountPath: /var/log/pods
        name: host-log-pods
        readOnly: true
      - mountPath: /anchors/mariner
        name: anchors-mariner
        readOnly: true
      - mountPath: /anchors/ubuntu
        name: anchors-ubuntu
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mhtkp
        readOnly: true
    - args:
      - --secret-namespace=kube-system
      - --secret-name=aad-msi-auth-token
      - --token-server-listening-port=7777
      - --health-server-listening-port=9999
      - --restart-pod-waiting-minutes-on-broken-connection=240
      command:
      - /addon-token-adapter
      env:
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9999
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: addon-token-adapter
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 20m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mhtkp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-metrics-serviceaccount
    serviceAccountName: ama-metrics-serviceaccount
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: ama-metrics-settings-configmap
        optional: true
      name: settings-vol-config
    - name: ama-metrics-tls-secret-volume
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-metrics-mtls-secret
    - configMap:
        defaultMode: 420
        name: ama-metrics-prometheus-config-node
        optional: true
      name: prometheus-config-vol
    - hostPath:
        path: /var/log/containers
        type: ""
      name: host-log-containers
    - hostPath:
        path: /var/log/pods
        type: ""
      name: host-log-pods
    - hostPath:
        path: /etc/pki/ca-trust/anchors/
        type: DirectoryOrCreate
      name: anchors-mariner
    - hostPath:
        path: /usr/local/share/ca-certificates/
        type: DirectoryOrCreate
      name: anchors-ubuntu
    - name: kube-api-access-mhtkp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://11783c19e05e7e246967b94e6959c36fb5dfa348b2094960a9da42159da8f648
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
      imageID: mcr.microsoft.com/aks/msi/addon-token-adapter@sha256:14072dea6268e52c012ead45508c1ac4479f04852c90ff618d8e8a799c92bb19
      lastState: {}
      name: addon-token-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:49Z"
    - containerID: containerd://b331021d9747d784d4c6877231f7a152c20e30c612fa0ac6c0605fa9a34acef2
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97
      imageID: sha256:7a091923e8cfa754007d3e3ecb827b8fca6735297f38fadfd69a2f91d11808e8
      lastState: {}
      name: prometheus-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:49Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.244.1.8
    podIPs:
    - ip: 10.244.1.8
    qosClass: Burstable
    startTime: "2024-05-02T06:59:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      agentVersion: 0.0.0.1
      schema-versions: v1
    creationTimestamp: "2024-05-02T06:59:47Z"
    generateName: ama-metrics-node-
    labels:
      controller-revision-hash: 7858cb85b7
      dsName: ama-metrics-node
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: ama-metrics-node-p25dk
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-metrics-node
      uid: a1f99d55-b409-4302-aa1c-eeb7c370ae94
    resourceVersion: "1837"
    uid: 9fa74aca-070b-49a2-9d59-99a34e8fd5f7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-14687916-vmss000000
    containers:
    - env:
      - name: OMS_TLD
        value: opinsights.azure.com
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CONTAINER_MEMORY_LIMIT
        valueFrom:
          resourceFieldRef:
            containerName: prometheus-collector
            divisor: 1Mi
            resource: limits.memory
      - name: NODE_EXPORTER_VERSION
      - name: WINMODE
        value: advanced
      - name: AKSREGION
        value: eastus
      - name: MINIMAL_INGESTION_PROFILE
        value: "true"
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: KUBE_STATE_NAME
        value: ama-metrics-ksm
      - name: APPMONITORING_OPENTELEMETRYMETRICS_PORT
        value: "28333"
      - name: CLUSTER
        value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: NODE_EXPORTER_NAME
      - name: NODE_EXPORTER_TARGETPORT
        value: "19100"
      - name: KUBE_STATE_VERSION
        value: mcr.microsoft.com/oss/kubernetes/kube-state-metrics:v2.9.2
      - name: customEnvironment
        value: azurepubliccloud
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: CONTAINER_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            containerName: prometheus-collector
            divisor: 1m
            resource: limits.cpu
      - name: AGENT_VERSION
        value: 6.8.7-main-04-09-2024-82adbf97
      - name: APPMONITORING_OPENTELEMETRYMETRICS_ENABLED
        value: "false"
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: MAC
        value: "true"
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: MODE
        value: advanced
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/microsoft/liveness/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      name: prometheus-collector
      resources:
        limits:
          cpu: 200m
          memory: 1Gi
        requests:
          cpu: 50m
          memory: 150Mi
      securityContext:
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/prometheus/certs
        name: ama-metrics-tls-secret-volume
        readOnly: true
      - mountPath: /etc/config/settings/prometheus
        name: prometheus-config-vol
        readOnly: true
      - mountPath: /var/log/containers
        name: host-log-containers
        readOnly: true
      - mountPath: /var/log/pods
        name: host-log-pods
        readOnly: true
      - mountPath: /anchors/mariner
        name: anchors-mariner
        readOnly: true
      - mountPath: /anchors/ubuntu
        name: anchors-ubuntu
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vgc4z
        readOnly: true
    - args:
      - --secret-namespace=kube-system
      - --secret-name=aad-msi-auth-token
      - --token-server-listening-port=7777
      - --health-server-listening-port=9999
      - --restart-pod-waiting-minutes-on-broken-connection=240
      command:
      - /addon-token-adapter
      env:
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9999
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: addon-token-adapter
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 20m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vgc4z
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-metrics-serviceaccount
    serviceAccountName: ama-metrics-serviceaccount
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: ama-metrics-settings-configmap
        optional: true
      name: settings-vol-config
    - name: ama-metrics-tls-secret-volume
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-metrics-mtls-secret
    - configMap:
        defaultMode: 420
        name: ama-metrics-prometheus-config-node
        optional: true
      name: prometheus-config-vol
    - hostPath:
        path: /var/log/containers
        type: ""
      name: host-log-containers
    - hostPath:
        path: /var/log/pods
        type: ""
      name: host-log-pods
    - hostPath:
        path: /etc/pki/ca-trust/anchors/
        type: DirectoryOrCreate
      name: anchors-mariner
    - hostPath:
        path: /usr/local/share/ca-certificates/
        type: DirectoryOrCreate
      name: anchors-ubuntu
    - name: kube-api-access-vgc4z
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://536b0bfc0bb20ebd05650aca2627c7ac8cea544a098d1afdb0320901496a66b5
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
      imageID: mcr.microsoft.com/aks/msi/addon-token-adapter@sha256:14072dea6268e52c012ead45508c1ac4479f04852c90ff618d8e8a799c92bb19
      lastState: {}
      name: addon-token-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:49Z"
    - containerID: containerd://2a80a9dca7536e3a4767b89b3502c42db1535ae7530aded766d3754381b43027
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97
      imageID: sha256:7a091923e8cfa754007d3e3ecb827b8fca6735297f38fadfd69a2f91d11808e8
      lastState: {}
      name: prometheus-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:48Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.244.0.3
    podIPs:
    - ip: 10.244.0.3
    qosClass: Burstable
    startTime: "2024-05-02T06:59:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-05-02T06:59:47Z"
    generateName: ama-metrics-operator-targets-59fbc96f46-
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 59fbc96f46
      rsName: ama-metrics-operator-targets
    name: ama-metrics-operator-targets-59fbc96f46-kthjm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ama-metrics-operator-targets-59fbc96f46
      uid: c85332c7-32ed-4934-b3bc-82a2289b0ace
    resourceVersion: "2080"
    uid: 8613f54a-15ed-403e-8c09-5ac49cd0e45f
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        - preference:
            matchExpressions:
            - key: azuremonitor/metrics.replica.preferred
              operator: In
              values:
              - "true"
          weight: 50
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.azure.com/cluster
              operator: Exists
    containers:
    - args:
      - --enable-prometheus-cr-watcher
      - --reload-config
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AGENT_VERSION
        value: 6.8.7-main-04-09-2024-82adbf97-targetallocator
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: OTELCOL_NAMESPACE
        value: kube-system
      - name: CLUSTER
        value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
      - name: PROMETHEUS_OPERATOR_V1_CUSTOM_GROUP
        value: azmonitoring.coreos.com
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97-targetallocator
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 3
        successThreshold: 1
        timeoutSeconds: 1
      name: targetallocator
      resources:
        limits:
          cpu: "5"
          memory: 8Gi
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: ta-config-shared
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fs5w7
        readOnly: true
    - env:
      - name: NODE_EXPORTER_TARGETPORT
        value: "19100"
      - name: AGENT_VERSION
        value: 6.8.7-main-04-09-2024-82adbf97-cfg
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: AKSREGION
        value: eastus
      - name: POD_NAMESPACE
        value: kube-system
      - name: CONTAINER_TYPE
        value: ConfigReaderSidecar
      - name: customEnvironment
        value: azurepubliccloud
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: MAC
        value: "true"
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: MODE
        value: advanced
      - name: WINMODE
      - name: MINIMAL_INGESTION_PROFILE
        value: "true"
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: CLUSTER
        value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
      - name: KUBE_STATE_NAME
        value: ama-metrics-ksm
      - name: NODE_EXPORTER_NAME
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97-cfg
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/microsoft/liveness/livenessprobe-configreader.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      name: config-reader
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 1m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/prometheus
        name: prometheus-config-vol
        readOnly: true
      - mountPath: /ta-configuration
        name: ta-config-shared
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fs5w7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-metrics-serviceaccount
    serviceAccountName: ama-metrics-serviceaccount
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: ama-metrics-settings-configmap
        optional: true
      name: settings-vol-config
    - configMap:
        defaultMode: 420
        name: ama-metrics-prometheus-config
        optional: true
      name: prometheus-config-vol
    - emptyDir: {}
      name: ta-config-shared
    - name: kube-api-access-fs5w7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:00:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:00:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:59:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e12441d63d571fe4111db58e9ec7821adcee5c8571ecbccb712a88f83a2c64bc
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97-cfg
      imageID: sha256:5b7419fc96761981ce7812f9835ccea43129cb2e03f209ed3f03b9bca1b3079e
      lastState: {}
      name: config-reader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:59:49Z"
    - containerID: containerd://71f8fc705b1df941f55eb8430dcad09c9d75f0ac2c19ccd7bc58f2791edb0f1d
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97-targetallocator
      imageID: sha256:6a2acdd2e8631dbd005d9f5116d85eccca6530e7462654f00c333abe1b080e5b
      lastState:
        terminated:
          containerID: containerd://f5f3606f01973a359ac81da5e4035f6d34d41223d4b734dd6232540d5c10ffda
          exitCode: 1
          finishedAt: "2024-05-02T07:00:00Z"
          reason: Error
          startedAt: "2024-05-02T07:00:00Z"
      name: targetallocator
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-05-02T07:00:18Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.244.0.5
    podIPs:
    - ip: 10.244.0.5
    qosClass: Burstable
    startTime: "2024-05-02T06:59:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-05-02T06:56:13Z"
    generateName: azure-ip-masq-agent-
    labels:
      controller-revision-hash: 8446b5d4d9
      k8s-app: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: azure-ip-masq-agent-n565k
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-ip-masq-agent
      uid: f45cf80a-1c3c-44d4-baf0-51be8a414766
    resourceVersion: "712"
    uid: 68937036-88f2-46c0-b211-84d1e2cb5c5e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-14687916-vmss000000
    automountServiceAccountToken: false
    containers:
    - args:
      - --v=2
      - --resync-interval=60
      env:
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.10
      imagePullPolicy: IfNotPresent
      name: azure-ip-masq-agent
      resources:
        limits:
          cpu: 500m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: azure-ip-masq-agent-config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: ip-masq-agent
              mode: 444
              path: ip-masq-agent
            name: azure-ip-masq-agent-config
            optional: true
        - configMap:
            items:
            - key: ip-masq-agent-reconciled
              mode: 444
              path: ip-masq-agent-reconciled
            name: azure-ip-masq-agent-config-reconciled
            optional: true
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d283c173e81193bf989524de82cfb38c4dba14f46469fbf487a1ecaa9176032c
      image: mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.10
      imageID: sha256:850a63505b129d45ffa088075b888badb281f1328487c02bbcf2b5bd2dd7f4ea
      lastState: {}
      name: azure-ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:15Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2024-05-02T06:56:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-05-02T06:56:14Z"
    generateName: azure-ip-masq-agent-
    labels:
      controller-revision-hash: 8446b5d4d9
      k8s-app: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: azure-ip-masq-agent-t2b48
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-ip-masq-agent
      uid: f45cf80a-1c3c-44d4-baf0-51be8a414766
    resourceVersion: "783"
    uid: 0d7e7a8c-3c03-4144-a47f-7bf1514332e0
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-14687916-vmss000001
    automountServiceAccountToken: false
    containers:
    - args:
      - --v=2
      - --resync-interval=60
      env:
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.10
      imagePullPolicy: IfNotPresent
      name: azure-ip-masq-agent
      resources:
        limits:
          cpu: 500m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: azure-ip-masq-agent-config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: ip-masq-agent
              mode: 444
              path: ip-masq-agent
            name: azure-ip-masq-agent-config
            optional: true
        - configMap:
            items:
            - key: ip-masq-agent-reconciled
              mode: 444
              path: ip-masq-agent-reconciled
            name: azure-ip-masq-agent-config-reconciled
            optional: true
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7229e968084930775fd512712493cd5aeb3e5b9c976e4c7c852e9292462524da
      image: mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.10
      imageID: sha256:850a63505b129d45ffa088075b888badb281f1328487c02bbcf2b5bd2dd7f4ea
      lastState: {}
      name: azure-ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:20Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2024-05-02T06:56:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2024-05-02T06:56:13Z"
    generateName: cloud-node-manager-
    labels:
      controller-revision-hash: 7cb5488976
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: cloud-node-manager-hnkxz
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: cloud-node-manager
      uid: cc938ef6-70eb-41d5-baf0-13756c7d4680
    resourceVersion: "710"
    uid: d44d97d3-5de8-4557-b12a-3a8c7b849bcb
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-14687916-vmss000000
    containers:
    - command:
      - cloud-node-manager
      - --node-name=$(NODE_NAME)
      - --wait-routes
      - --enable-deprecated-beta-topology-labels=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.28.8
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-spdqj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-spdqj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6b7df1cd095dd8ddc7a1a68cd7e09e41ec64e93c680268160801eaf42805f2e5
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.28.8
      imageID: sha256:34ee8ce6a4c28260c4acc430d0cfe3b354c31583c17b23d8996b9b33770bc261
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:15Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2024-05-02T06:56:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2024-05-02T06:56:14Z"
    generateName: cloud-node-manager-
    labels:
      controller-revision-hash: 7cb5488976
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: cloud-node-manager-vvl2w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: cloud-node-manager
      uid: cc938ef6-70eb-41d5-baf0-13756c7d4680
    resourceVersion: "777"
    uid: 6aa085ef-e050-4a1d-b395-ed1824246a05
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-14687916-vmss000001
    containers:
    - command:
      - cloud-node-manager
      - --node-name=$(NODE_NAME)
      - --wait-routes
      - --enable-deprecated-beta-topology-labels=true
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.28.8
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-225p4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-225p4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e9ecc624c9183dd2e326a8d7bd3e1f4abd3472970494df94081b518c8e3d409b
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.28.8
      imageID: sha256:34ee8ce6a4c28260c4acc430d0cfe3b354c31583c17b23d8996b9b33770bc261
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:20Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2024-05-02T06:56:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "9153"
    creationTimestamp: "2024-05-02T06:57:03Z"
    generateName: coredns-767bfbd4fb-
    labels:
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      pod-template-hash: 767bfbd4fb
      version: v20
    name: coredns-767bfbd4fb-dkx9d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-767bfbd4fb
      uid: e1777572-f6b2-4733-83f2-d7604f11a4b2
    resourceVersion: "1158"
    uid: 855ed8c0-05d0-49af-8ccb-75dd9a7e1cae
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      env:
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      image: mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240327
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "3"
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        procMount: Default
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jvcj9
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - configMap:
        defaultMode: 420
        name: coredns-custom
        optional: true
      name: custom-config-volume
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-jvcj9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:57:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:57:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:57:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:57:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c8cb2a9c0a6976263f20050882e6ac456148eeb81f2a851d82a32cc7807d89c5
      image: mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240327
      imageID: sha256:396a5ebc716a37e4e5d01ba5b28c6b6b03e1d7d8078d6adb40c1e6ce57e42570
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:57:05Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.244.0.2
    podIPs:
    - ip: 10.244.0.2
    qosClass: Burstable
    startTime: "2024-05-02T06:57:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "9153"
    creationTimestamp: "2024-05-02T06:55:59Z"
    generateName: coredns-767bfbd4fb-
    labels:
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      pod-template-hash: 767bfbd4fb
      version: v20
    name: coredns-767bfbd4fb-s8lfw
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-767bfbd4fb
      uid: e1777572-f6b2-4733-83f2-d7604f11a4b2
    resourceVersion: "1139"
    uid: 8605530c-80f8-469f-a883-de74ee7c4609
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      env:
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      image: mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240327
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "3"
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        procMount: Default
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lvtmj
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - configMap:
        defaultMode: 420
        name: coredns-custom
        optional: true
      name: custom-config-volume
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-lvtmj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:57:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:57:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:57:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:57:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f4a4dfa5369ebaf14848575bb342bbbf09a9244797a6edd7f1632ecad98dd7f3
      image: mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240327
      imageID: sha256:396a5ebc716a37e4e5d01ba5b28c6b6b03e1d7d8078d6adb40c1e6ce57e42570
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:57:02Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.244.1.4
    podIPs:
    - ip: 10.244.1.4
    qosClass: Burstable
    startTime: "2024-05-02T06:57:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-05-02T06:55:59Z"
    generateName: coredns-autoscaler-7c88465478-
    labels:
      k8s-app: coredns-autoscaler
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 7c88465478
    name: coredns-autoscaler-7c88465478-qrcft
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-autoscaler-7c88465478
      uid: baab40e2-6633-4b3f-8825-8a82c5044310
    resourceVersion: "1040"
    uid: 08604d55-25a1-4662-a2e9-d7c4a2e62ced
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=coredns-autoscaler
      - --target=deployment/coredns
      - --default-params={"ladder":{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}}
      - --logtostderr=true
      - --v=2
      env:
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /last-poll
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: autoscaler
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 20m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qq9xd
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: coredns-autoscaler
    serviceAccountName: coredns-autoscaler
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-qq9xd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:57:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:57:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:57:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:57:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2a16716e606de3209edc8cfd305df5eae9f38f8433dca2696fc86ae583eb094f
      image: mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.8
      imageID: mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler@sha256:69ec4335573f46f8c38e6926eb9403874a68d9582e2dbef1d92fd9f8bd5e0e8d
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:57:03Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.244.1.5
    podIPs:
    - ip: 10.244.1.5
    qosClass: Burstable
    startTime: "2024-05-02T06:57:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-05-02T06:56:13Z"
    generateName: csi-azuredisk-node-
    labels:
      app: csi-azuredisk-node
      controller-revision-hash: 6d8856cd49
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: csi-azuredisk-node-sbc5c
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azuredisk-node
      uid: d545aaf8-d906-4058-aa53-21d6c0ae6a83
    resourceVersion: "715"
    uid: a45871b3-50a5-4b2d-8483-8cab2f95793e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-14687916-vmss000000
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=3s
      - --health-port=29603
      - --v=2
      env:
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q52kx
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q52kx
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-perf-optimization=true
      env:
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: azuredisk
      ports:
      - containerPort: 29603
        hostPort: 29603
        name: healthz
        protocol: TCP
      resources:
        limits:
          memory: 200Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q52kx
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azuredisk-node-sa
    serviceAccountName: csi-azuredisk-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/disk.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /sys/bus/scsi/devices
        type: Directory
      name: sys-devices-dir
    - hostPath:
        path: /sys/class/scsi_host/
        type: Directory
      name: scsi-host-dir
    - name: kube-api-access-q52kx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://dd2d67b3f3d16852383c1e40dcd2b338fc8b3dd7a160a7f694b8c5426fab8094
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.3
      imageID: sha256:1e2c63369024b89c215a61a86bb8e99c57340b8e7da148ab749cb8ffb909dbc9
      lastState: {}
      name: azuredisk
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:16Z"
    - containerID: containerd://aaa2081c1e4f9b903a688442880d138a77acf0a5f4b746718456cb2d063b4a58
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0
      imageID: sha256:6f807c016d9206fef899d3d19b5597a9703215aa3d91fb4c4e72c9a990e957a2
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:15Z"
    - containerID: containerd://5404b371ddacffeb5480aed7c8b67d7d990f3443e5fb99433689a06021f7693e
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0
      imageID: sha256:70fa132cec8d53d51c7cbbf9155ce4745ea65b6409606789bb1c2105b8e553f8
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:16Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2024-05-02T06:56:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-05-02T06:56:14Z"
    generateName: csi-azuredisk-node-
    labels:
      app: csi-azuredisk-node
      controller-revision-hash: 6d8856cd49
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: csi-azuredisk-node-zrrs8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azuredisk-node
      uid: d545aaf8-d906-4058-aa53-21d6c0ae6a83
    resourceVersion: "781"
    uid: 7b2a3efc-ad94-4a5e-bcd7-1346c3055434
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-14687916-vmss000001
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=3s
      - --health-port=29603
      - --v=2
      env:
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pdc2s
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pdc2s
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-perf-optimization=true
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: azuredisk
      ports:
      - containerPort: 29603
        hostPort: 29603
        name: healthz
        protocol: TCP
      resources:
        limits:
          memory: 200Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pdc2s
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azuredisk-node-sa
    serviceAccountName: csi-azuredisk-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/disk.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /sys/bus/scsi/devices
        type: Directory
      name: sys-devices-dir
    - hostPath:
        path: /sys/class/scsi_host/
        type: Directory
      name: scsi-host-dir
    - name: kube-api-access-pdc2s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f10e1d0a59fc3e0b567ffb45fc48b5f361ee54aed44ca76be2b66ec9964e2eeb
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.3
      imageID: sha256:1e2c63369024b89c215a61a86bb8e99c57340b8e7da148ab749cb8ffb909dbc9
      lastState: {}
      name: azuredisk
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:20Z"
    - containerID: containerd://e11afc61daacacd0a70f1fc32ab6bcf5dad0c27d1166d99c8ac91f7dad607b35
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0
      imageID: sha256:6f807c016d9206fef899d3d19b5597a9703215aa3d91fb4c4e72c9a990e957a2
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:20Z"
    - containerID: containerd://cf513ad7b182f9636cb6ac6e5dfec9dddaa67a216e79802d3351ecbbc2592670
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0
      imageID: sha256:70fa132cec8d53d51c7cbbf9155ce4745ea65b6409606789bb1c2105b8e553f8
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:20Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2024-05-02T06:56:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-05-02T06:56:14Z"
    generateName: csi-azurefile-node-
    labels:
      app: csi-azurefile-node
      controller-revision-hash: 559fd9d95d
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: csi-azurefile-node-ckgs8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azurefile-node
      uid: c5776083-e123-4afb-acd0-267da491c647
    resourceVersion: "790"
    uid: 56cc81e8-f41a-4000-bb66-83cd531d7422
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-14687916-vmss000001
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=3s
      - --health-port=29613
      - --v=2
      env:
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tqpz4
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tqpz4
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-get-volume-stats=true
      - --mount-permissions=0777
      - --metrics-address=0.0.0.0:29615
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: azurefile
      ports:
      - containerPort: 29613
        hostPort: 29613
        name: healthz
        protocol: TCP
      - containerPort: 29615
        hostPort: 29615
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tqpz4
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azurefile-node-sa
    serviceAccountName: csi-azurefile-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/file.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - name: kube-api-access-tqpz4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8c674624541cd21ffd36bd1d43b52690d4ced24a839c54dfa31473a7207d4443
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.4
      imageID: sha256:208786f596918faa1b415ddb515838898631815e559d91f158bd8e9b885145ab
      lastState: {}
      name: azurefile
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:20Z"
    - containerID: containerd://68e8daeeef91345c7b4d9d70b8753d1eacaff66d0134e338c21d5baafd0f7593
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0
      imageID: sha256:6f807c016d9206fef899d3d19b5597a9703215aa3d91fb4c4e72c9a990e957a2
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:20Z"
    - containerID: containerd://effdb4a4fc809af4f902f563d32099e65e33912e2b778bba1ea493ac8f1420ec
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0
      imageID: sha256:70fa132cec8d53d51c7cbbf9155ce4745ea65b6409606789bb1c2105b8e553f8
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:20Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2024-05-02T06:56:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-05-02T06:56:13Z"
    generateName: csi-azurefile-node-
    labels:
      app: csi-azurefile-node
      controller-revision-hash: 559fd9d95d
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: csi-azurefile-node-km72f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azurefile-node
      uid: c5776083-e123-4afb-acd0-267da491c647
    resourceVersion: "719"
    uid: 1d660f09-2336-4472-a561-91a0f00efca3
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-14687916-vmss000000
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=3s
      - --health-port=29613
      - --v=2
      env:
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vn9ts
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vn9ts
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-get-volume-stats=true
      - --mount-permissions=0777
      - --metrics-address=0.0.0.0:29615
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: azurefile
      ports:
      - containerPort: 29613
        hostPort: 29613
        name: healthz
        protocol: TCP
      - containerPort: 29615
        hostPort: 29615
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vn9ts
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azurefile-node-sa
    serviceAccountName: csi-azurefile-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/file.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - name: kube-api-access-vn9ts
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f7c3b9f0929bca928b3af990b0566c22095a77d7348b9a963eebb5fbc3fbacc7
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.4
      imageID: sha256:208786f596918faa1b415ddb515838898631815e559d91f158bd8e9b885145ab
      lastState: {}
      name: azurefile
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:16Z"
    - containerID: containerd://7be7b0e7d33ac20e13d137cdaf0220a49ad16e16b8ab8afb105ecda317711d10
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0
      imageID: sha256:6f807c016d9206fef899d3d19b5597a9703215aa3d91fb4c4e72c9a990e957a2
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:15Z"
    - containerID: containerd://f59b824708014331ee9e032b652c009303d603a18b29d9e2b14292b1b957b34c
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0
      imageID: sha256:70fa132cec8d53d51c7cbbf9155ce4745ea65b6409606789bb1c2105b8e553f8
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:16Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2024-05-02T06:56:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/client-cert: 3459d57a3fa1cbe175bae4f0ad90bd5a2914de9d98da0d89050c81857fd44ff5
      checksum/service-account-key: c1f0b9bf44304f1fa336a6a02a23d4be3bca80f52d411233cb3e07beb2e954e8
    creationTimestamp: "2024-05-02T07:43:35Z"
    generateName: konnectivity-agent-b9dc5ccd9-
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: b9dc5ccd9
    name: konnectivity-agent-b9dc5ccd9-bgvw4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-b9dc5ccd9
      uid: 7b39866d-8f86-494f-95e4-e7e9e5bac6fc
    resourceVersion: "12394"
    uid: d09c8d0b-6195-4378-a337-f8fe821896bc
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - args:
      - --proxy-server-host=insights-qjv4aeod.hcp.eastus.azmk8s.io
      - --proxy-server-port=443
      - --health-server-port=8082
      - --keepalive-time=30s
      - --agent-key=/certs/client.key
      - --agent-cert=/certs/client.crt
      - --ca-cert=/certs/ca.crt
      - --agent-identifiers=default-route=true
      - --alpn-proto=konnectivity
      - -v=2
      command:
      - /proxy-agent
      env:
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 60
      name: konnectivity-agent
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 20m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: certs
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: certs
      secret:
        defaultMode: 420
        secretName: konnectivity-certs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:43:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:43:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:43:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:43:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5a40313f3a9cc8a21243d147cdee4c6ccb89fa65721053ae7c22696010cb97d2
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116
      imageID: sha256:186473cf0a31771a84572c2245ab61e4b1e26340ca151169868dc1c666d481a0
      lastState: {}
      name: konnectivity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T07:43:35Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.244.0.9
    podIPs:
    - ip: 10.244.0.9
    qosClass: Burstable
    startTime: "2024-05-02T07:43:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/client-cert: 3459d57a3fa1cbe175bae4f0ad90bd5a2914de9d98da0d89050c81857fd44ff5
      checksum/service-account-key: c1f0b9bf44304f1fa336a6a02a23d4be3bca80f52d411233cb3e07beb2e954e8
    creationTimestamp: "2024-05-02T07:43:45Z"
    generateName: konnectivity-agent-b9dc5ccd9-
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: b9dc5ccd9
    name: konnectivity-agent-b9dc5ccd9-brkmd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-b9dc5ccd9
      uid: 7b39866d-8f86-494f-95e4-e7e9e5bac6fc
    resourceVersion: "12435"
    uid: d740d315-9cba-41e7-99de-0836144b5197
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - args:
      - --proxy-server-host=insights-qjv4aeod.hcp.eastus.azmk8s.io
      - --proxy-server-port=443
      - --health-server-port=8082
      - --keepalive-time=30s
      - --agent-key=/certs/client.key
      - --agent-cert=/certs/client.crt
      - --ca-cert=/certs/ca.crt
      - --agent-identifiers=default-route=true
      - --alpn-proto=konnectivity
      - -v=2
      command:
      - /proxy-agent
      env:
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 60
      name: konnectivity-agent
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 20m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: certs
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: certs
      secret:
        defaultMode: 420
        secretName: konnectivity-certs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:43:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:43:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:43:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:43:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6c21ee7fe62c9314477336f9b156bcd6faaf6b84d5daf5df8449134dc7616f72
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116
      imageID: sha256:186473cf0a31771a84572c2245ab61e4b1e26340ca151169868dc1c666d481a0
      lastState: {}
      name: konnectivity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T07:43:46Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.244.1.12
    podIPs:
    - ip: 10.244.1.12
    qosClass: Burstable
    startTime: "2024-05-02T07:43:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-05-02T06:56:14Z"
    generateName: kube-proxy-
    labels:
      component: kube-proxy
      controller-revision-hash: 687966777d
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: kube-proxy-m5rmm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 518361a3-fb6e-4fdd-8efb-6e3c97ad0780
    resourceVersion: "797"
    uid: 1da18937-fc20-46b5-961b-2e2411e3f0f4
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-14687916-vmss000001
    containers:
    - command:
      - kube-proxy
      - --conntrack-max-per-core=0
      - --metrics-bind-address=0.0.0.0:10249
      - --cluster-cidr=10.244.0.0/16
      - --detect-local-mode=ClusterCIDR
      - --pod-interface-name-prefix=
      - --v=3
      env:
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.28.5-hotfix.20240131
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubeconfig
        readOnly: true
      - mountPath: /etc/kubernetes/certs
        name: certificates
        readOnly: true
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bp45d
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - |
        SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
        echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
        DESIRED=$(awk -F= '/net.netfilter.nf_conntrack_max/ {print $2}' /etc/sysctl.d/999-sysctl-aks.conf)
        if [ -z "$DESIRED" ]; then
          DESIRED=$((32768*$(nproc)))
          if [ $DESIRED -lt 131072 ]; then
            DESIRED=131072
          fi

          echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
          echo "Setting nf_conntrack_max to $DESIRED (32768 * $(nproc) cores, minimum 131072)."
          echo $DESIRED > $SYSCTL
        else
          echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
          echo "Setting nf_conntrack_max to $DESIRED."
          echo $DESIRED > $SYSCTL
        fi
      image: mcr.microsoft.com/mirror/docker/library/busybox:1.35
      imagePullPolicy: IfNotPresent
      name: kube-proxy-bootstrap
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bp45d
        readOnly: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: kubeconfig
    - hostPath:
        path: /etc/kubernetes/certs
        type: ""
      name: certificates
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: sysctls
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-bp45d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://05cd14520b0b46c00bfca77461359697a856bd8085c3a6ae00d32b285d1d5562
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.28.5-hotfix.20240131
      imageID: sha256:00340387ee9d90fda9b6cfcaaf491b5815f04494f41142eb3b5ac3e86be63ef3
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:21Z"
    hostIP: 10.224.0.5
    initContainerStatuses:
    - containerID: containerd://795cd1683bf091d6d756ef7627dfa3bdbe81c0bd307c13e0da7356b152236f61
      image: mcr.microsoft.com/mirror/docker/library/busybox:1.35
      imageID: sha256:1c10e93757391bd459976f6382e0c0e03a0af3f239cd745424b06d3b4737f60e
      lastState: {}
      name: kube-proxy-bootstrap
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://795cd1683bf091d6d756ef7627dfa3bdbe81c0bd307c13e0da7356b152236f61
          exitCode: 0
          finishedAt: "2024-05-02T06:56:20Z"
          reason: Completed
          startedAt: "2024-05-02T06:56:20Z"
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2024-05-02T06:56:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-05-02T06:56:13Z"
    generateName: kube-proxy-
    labels:
      component: kube-proxy
      controller-revision-hash: 687966777d
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: kube-proxy-mtwg8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 518361a3-fb6e-4fdd-8efb-6e3c97ad0780
    resourceVersion: "741"
    uid: cb9a744f-0b7c-456d-8703-e752fe0cd25a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-14687916-vmss000000
    containers:
    - command:
      - kube-proxy
      - --conntrack-max-per-core=0
      - --metrics-bind-address=0.0.0.0:10249
      - --cluster-cidr=10.244.0.0/16
      - --detect-local-mode=ClusterCIDR
      - --pod-interface-name-prefix=
      - --v=3
      env:
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.28.5-hotfix.20240131
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubeconfig
        readOnly: true
      - mountPath: /etc/kubernetes/certs
        name: certificates
        readOnly: true
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9dcph
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - |
        SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
        echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
        DESIRED=$(awk -F= '/net.netfilter.nf_conntrack_max/ {print $2}' /etc/sysctl.d/999-sysctl-aks.conf)
        if [ -z "$DESIRED" ]; then
          DESIRED=$((32768*$(nproc)))
          if [ $DESIRED -lt 131072 ]; then
            DESIRED=131072
          fi

          echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
          echo "Setting nf_conntrack_max to $DESIRED (32768 * $(nproc) cores, minimum 131072)."
          echo $DESIRED > $SYSCTL
        else
          echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
          echo "Setting nf_conntrack_max to $DESIRED."
          echo $DESIRED > $SYSCTL
        fi
      image: mcr.microsoft.com/mirror/docker/library/busybox:1.35
      imagePullPolicy: IfNotPresent
      name: kube-proxy-bootstrap
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9dcph
        readOnly: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: kubeconfig
    - hostPath:
        path: /etc/kubernetes/certs
        type: ""
      name: certificates
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: sysctls
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-9dcph
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T06:56:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f03973a1627e73bdfcc128adfc79c3694701c800d01e1d39cf3080699a48df47
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.28.5-hotfix.20240131
      imageID: sha256:00340387ee9d90fda9b6cfcaaf491b5815f04494f41142eb3b5ac3e86be63ef3
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T06:56:17Z"
    hostIP: 10.224.0.4
    initContainerStatuses:
    - containerID: containerd://b276fb4d6f20ddde8c5730c48aa8bdee3e95318eee3114027a465e45e48218f8
      image: mcr.microsoft.com/mirror/docker/library/busybox:1.35
      imageID: sha256:1c10e93757391bd459976f6382e0c0e03a0af3f239cd745424b06d3b4737f60e
      lastState: {}
      name: kube-proxy-bootstrap
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://b276fb4d6f20ddde8c5730c48aa8bdee3e95318eee3114027a465e45e48218f8
          exitCode: 0
          finishedAt: "2024-05-02T06:56:16Z"
          reason: Completed
          startedAt: "2024-05-02T06:56:15Z"
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2024-05-02T06:56:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-05-02T07:00:18Z"
    generateName: metrics-server-5f476446c6-
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 5f476446c6
    name: metrics-server-5f476446c6-jnkms
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-5f476446c6
      uid: 86283a66-bc80-4236-a4c4-67cd87867cf2
    resourceVersion: "2393"
    uid: 12adc712-1246-4c03-ba0c-9809b08a3bca
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /pod_nanny
      - --config-dir=/etc/config
      - --cpu=44m
      - --extra-cpu=0.5m
      - --memory=51Mi
      - --extra-memory=4Mi
      - --poll-period=180000
      - --threshold=5
      - --deployment=metrics-server
      - --container=metrics-server
      env:
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19
      imagePullPolicy: IfNotPresent
      name: metrics-server-vpa
      resources:
        limits:
          cpu: 100m
          memory: 300Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fdhfx
        readOnly: true
    - command:
      - /metrics-server
      - --kubelet-insecure-tls
      - --kubelet-preferred-address-types=InternalIP
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      - --cert-dir=/tmp
      - --secure-port=4443
      env:
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: metrics-server
      ports:
      - containerPort: 4443
        name: ms-https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        limits:
          cpu: 45m
          memory: 59Mi
        requests:
          cpu: 45m
          memory: 59Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fdhfx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - configMap:
        defaultMode: 420
        name: metrics-server-config
        optional: true
      name: metrics-server-config-volume
    - name: kube-api-access-fdhfx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:00:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:01:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:01:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:00:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://10316b70f8f577264c530efad5fe0d78874520146b77e7c4900709072cc6e691
      image: mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3
      imageID: mcr.microsoft.com/oss/kubernetes/metrics-server@sha256:c49553d5b948fcf5b23bed3718c797f42ebe87d7ae5f2c6f537f530b65cadaec
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T07:00:20Z"
    - containerID: containerd://473e75fddba3ed0194c83cc6ec021e75040cf55dc567c49a35011983c35d119b
      image: mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19
      imageID: mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer@sha256:f9fdc33be3d4d4d01b4c86e626e29e8e92e40ef436d1acc77caaeb95cb86b053
      lastState: {}
      name: metrics-server-vpa
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T07:00:19Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.244.0.8
    podIPs:
    - ip: 10.244.0.8
    qosClass: Burstable
    startTime: "2024-05-02T07:00:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-05-02T07:00:18Z"
    generateName: metrics-server-5f476446c6-
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 5f476446c6
    name: metrics-server-5f476446c6-k24lt
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-5f476446c6
      uid: 86283a66-bc80-4236-a4c4-67cd87867cf2
    resourceVersion: "2426"
    uid: 0c5b6120-0552-44cd-9ed8-89ae3556c038
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /pod_nanny
      - --config-dir=/etc/config
      - --cpu=44m
      - --extra-cpu=0.5m
      - --memory=51Mi
      - --extra-memory=4Mi
      - --poll-period=180000
      - --threshold=5
      - --deployment=metrics-server
      - --container=metrics-server
      env:
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19
      imagePullPolicy: IfNotPresent
      name: metrics-server-vpa
      resources:
        limits:
          cpu: 100m
          memory: 300Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-946vc
        readOnly: true
    - command:
      - /metrics-server
      - --kubelet-insecure-tls
      - --kubelet-preferred-address-types=InternalIP
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      - --cert-dir=/tmp
      - --secure-port=4443
      env:
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_SERVICE_HOST
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: insights-qjv4aeod.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://insights-qjv4aeod.hcp.eastus.azmk8s.io:443
      image: mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: metrics-server
      ports:
      - containerPort: 4443
        name: ms-https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        limits:
          cpu: 45m
          memory: 59Mi
        requests:
          cpu: 45m
          memory: 59Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-946vc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - configMap:
        defaultMode: 420
        name: metrics-server-config
        optional: true
      name: metrics-server-config-volume
    - name: kube-api-access-946vc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:00:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:01:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:01:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-02T07:00:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://01f07f71154e09d54d090525b101b7a5b6764d1c621f90281d7d873d40278b93
      image: mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3
      imageID: mcr.microsoft.com/oss/kubernetes/metrics-server@sha256:c49553d5b948fcf5b23bed3718c797f42ebe87d7ae5f2c6f537f530b65cadaec
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T07:00:20Z"
    - containerID: containerd://7442a899fd351d118440f7201c58981f0038ee39744a2bcd986dabcaa2cc4ce3
      image: mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19
      imageID: mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer@sha256:f9fdc33be3d4d4d01b4c86e626e29e8e92e40ef436d1acc77caaeb95cb86b053
      lastState: {}
      name: metrics-server-vpa
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-02T07:00:19Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.244.0.7
    podIPs:
    - ip: 10.244.0.7
    qosClass: Burstable
    startTime: "2024-05-02T07:00:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:07-05:00"
    creationTimestamp: "2024-05-03T02:44:11Z"
    generateName: mysql-64ffb75cbc-
    labels:
      app: mysql
      pod-template-hash: 64ffb75cbc
    name: mysql-64ffb75cbc-z7nqq
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mysql-64ffb75cbc
      uid: 59718cd0-8f6a-4ef3-b4d6-8890472bc270
    resourceVersion: "289800"
    uid: 229029d3-d6d4-4ea9-af57-43beb379750e
  spec:
    containers:
    - env:
      - name: MYSQL_ROOT_PASSWORD
        value: AIK9ai(wgB7Mmb!3
      - name: MYSQL_PASSWORD
        value: bakery
      - name: MYSQL_DATABASE
        value: bakery
      - name: MYSQL_USER
        value: bakery
      image: mysql:8.0
      imagePullPolicy: IfNotPresent
      name: mysql
      ports:
      - containerPort: 3306
        name: mysql
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/mysql
        name: mysql-persistent-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rj42j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: mysql-persistent-storage
      persistentVolumeClaim:
        claimName: mysql-pv-claim
    - name: kube-api-access-rj42j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4cd054d8fe273605b17415ee144df1cde455cb891d41bf6135ed73e2db6a8bd7
      image: docker.io/library/mysql:8.0
      imageID: docker.io/library/mysql@sha256:0f90283199964e9cc2a45c73ed2991da6943f416368025433932ed81007235a7
      lastState: {}
      name: mysql
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-03T02:44:12Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.244.1.74
    podIPs:
    - ip: 10.244.1.74
    qosClass: Burstable
    startTime: "2024-05-03T02:44:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:07-05:00"
    creationTimestamp: "2024-05-03T03:35:35Z"
    generateName: postgres-8f548d4b7-
    labels:
      app: postgres
      pod-template-hash: 8f548d4b7
    name: postgres-8f548d4b7-25mvp
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: postgres-8f548d4b7
      uid: 57ba4a09-daa1-4aa1-80d9-f1672a6c859d
    resourceVersion: "302356"
    uid: a49b501c-932c-45e9-95d7-4b5516679a0a
  spec:
    containers:
    - env:
      - name: POSTGRES_USER
        value: bakery
      - name: POSTGRES_PASSWORD
        value: bakery
      - name: POSTGRES_DB
        value: bakery
      image: postgres:16.1
      imagePullPolicy: IfNotPresent
      name: postgres
      ports:
      - containerPort: 5432
        name: postgres
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: postgres-persistent-storage
        subPath: bakery-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lmm4n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: postgres-persistent-storage
      persistentVolumeClaim:
        claimName: postgres-pv-claim
    - name: kube-api-access-lmm4n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T03:35:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T03:35:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T03:35:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T03:35:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cccc1a5503cc3930491ca773c2f8d946d8ca7266ff76df8851af46abff0240fc
      image: docker.io/library/postgres:16.1
      imageID: docker.io/library/postgres@sha256:09f23e02d76670d3b346a3c00aa33a27cf57aab8341eedfcdaed41459d14f5c4
      lastState: {}
      name: postgres
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-03T03:35:46Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.244.1.78
    podIPs:
    - ip: 10.244.1.78
    qosClass: Burstable
    startTime: "2024-05-03T03:35:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:08-05:00"
    creationTimestamp: "2024-05-03T02:44:11Z"
    generateName: ui-bakery-automation-769b95587-
    labels:
      app: ui-bakery-automation
      pod-template-hash: 769b95587
    name: ui-bakery-automation-769b95587-mt5jj
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ui-bakery-automation-769b95587
      uid: 23a404b9-3773-48d7-ba97-147fcbdf41f3
    resourceVersion: "289796"
    uid: 9f890030-fc8c-438c-a412-b5702482853e
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: ui-bakery-configmap
      image: cruibakeryonprem.azurecr.io/cloud/automation:latest
      imagePullPolicy: Always
      name: ui-bakery-automation
      ports:
      - containerPort: 4000
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2l2bh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-2l2bh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6097e76e75a610ed68e4546f148f54b7a40dcdae4489d998a0040c0db568d28a
      image: cruibakeryonprem.azurecr.io/cloud/automation:latest
      imageID: cruibakeryonprem.azurecr.io/cloud/automation@sha256:83837b0dac8ce54b98ac847c35f161580550132139d762a9ab1552eb72279168
      lastState: {}
      name: ui-bakery-automation
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-03T02:44:12Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.244.1.73
    podIPs:
    - ip: 10.244.1.73
    qosClass: Burstable
    startTime: "2024-05-03T02:44:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:08-05:00"
    creationTimestamp: "2024-05-03T02:44:11Z"
    generateName: ui-bakery-backend-7fd449bcb4-
    labels:
      app: ui-bakery-backend
      pod-template-hash: 7fd449bcb4
    name: ui-bakery-backend-7fd449bcb4-6th8j
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ui-bakery-backend-7fd449bcb4
      uid: 0a6c1ba3-dd4e-435d-8b0e-12e4794105d4
    resourceVersion: "291760"
    uid: 13fb71bc-b09c-4224-a34b-c9e7b441b27b
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: ui-bakery-configmap
      image: cruibakeryonprem.azurecr.io/cloud/bakery-back:latest
      imagePullPolicy: Always
      name: ui-bakery-backend
      ports:
      - containerPort: 8080
        protocol: TCP
      resources:
        limits:
          cpu: 900m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/mysql-ssl
        name: mysql-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6h6sl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: mysql-certs
      secret:
        defaultMode: 420
        secretName: mysql-tls-certs
    - name: kube-api-access-6h6sl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:51:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:51:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0db570813f92c12440a925befd70fb2d13f4d1f239398a6bb27ccaf2518a2549
      image: cruibakeryonprem.azurecr.io/cloud/bakery-back:latest
      imageID: cruibakeryonprem.azurecr.io/cloud/bakery-back@sha256:97a846b6a9c7617ff30e8378ef362db4b06eec743100d324834b91b64988dcf9
      lastState:
        terminated:
          containerID: containerd://85725c4342c5ff07c3268442cec740a2c7878255cb5a4c0758793e0b54551998
          exitCode: 1
          finishedAt: "2024-05-03T02:48:22Z"
          reason: Error
          startedAt: "2024-05-03T02:48:10Z"
      name: ui-bakery-backend
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2024-05-03T02:51:03Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.244.0.68
    podIPs:
    - ip: 10.244.0.68
    qosClass: Burstable
    startTime: "2024-05-03T02:44:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:09-05:00"
    creationTimestamp: "2024-05-03T02:44:12Z"
    generateName: ui-bakery-datasource-5bc57599d8-
    labels:
      app: ui-bakery-datasource
      pod-template-hash: 5bc57599d8
    name: ui-bakery-datasource-5bc57599d8-x6rhr
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ui-bakery-datasource-5bc57599d8
      uid: d6da4b8c-f501-4467-9ab5-402af98ba289
    resourceVersion: "289877"
    uid: 95b420cf-7468-4fb9-9876-b474997c4efc
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: ui-bakery-configmap
      image: cruibakeryonprem.azurecr.io/cloud/datasource:latest
      imagePullPolicy: Always
      name: ui-bakery-datasource
      ports:
      - containerPort: 6060
        protocol: TCP
      resources:
        limits:
          cpu: 900m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pdnct
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-pdnct
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d3df96332f4af70e7a601604c629b3c9450b9a195dcaeb4cd9a9a81548340f19
      image: cruibakeryonprem.azurecr.io/cloud/datasource:latest
      imageID: cruibakeryonprem.azurecr.io/cloud/datasource@sha256:d60468d31326a04879216b9fba6b4492805ab0431a66e182ea74d6a98e9a4bc8
      lastState: {}
      name: ui-bakery-datasource
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-03T02:44:13Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.244.1.76
    podIPs:
    - ip: 10.244.1.76
    qosClass: Burstable
    startTime: "2024-05-03T02:44:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:10-05:00"
    creationTimestamp: "2024-05-03T02:44:13Z"
    generateName: ui-bakery-front-749d47b8f-
    labels:
      app: ui-bakery-front
      pod-template-hash: 749d47b8f
    name: ui-bakery-front-749d47b8f-9c6lq
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ui-bakery-front-749d47b8f
      uid: 8ee2b4ce-59ed-4a30-b457-96f994e7ad86
    resourceVersion: "289903"
    uid: 4cf3b456-15ea-4ad8-9e89-464afb6b662a
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: ui-bakery-configmap
      image: cruibakeryonprem.azurecr.io/cloud/bakery-front:latest
      imagePullPolicy: Always
      name: ui-bakery-front
      ports:
      - containerPort: 8080
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4v5bz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-4v5bz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://01f094b95fb3262ef4032b18196273159bd0aa00253cebe2912f6aad575b4cda
      image: cruibakeryonprem.azurecr.io/cloud/bakery-front:latest
      imageID: cruibakeryonprem.azurecr.io/cloud/bakery-front@sha256:ab51850e79398d0a5a786c2a3efae49f9788c361dd4538c5d6d96eb64c3f3239
      lastState: {}
      name: ui-bakery-front
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-03T02:44:14Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.244.0.69
    podIPs:
    - ip: 10.244.0.69
    qosClass: Burstable
    startTime: "2024-05-03T02:44:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:10-05:00"
    creationTimestamp: "2024-05-03T02:44:13Z"
    generateName: ui-bakery-gateway-568887dc4c-
    labels:
      app: ui-bakery-gateway
      pod-template-hash: 568887dc4c
    name: ui-bakery-gateway-568887dc4c-7g59t
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ui-bakery-gateway-568887dc4c
      uid: 88f374a0-bf96-463a-b3b3-8acd11e8e942
    resourceVersion: "289949"
    uid: 570149ee-4902-4e83-b7de-cd2aebb90ba9
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: ui-bakery-configmap
      image: cruibakeryonprem.azurecr.io/cloud/gateway:latest
      imagePullPolicy: Always
      name: ui-bakery-gateway
      ports:
      - containerPort: 3030
        protocol: TCP
      resources:
        limits:
          cpu: 900m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8hv7s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-8hv7s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e97598898397f006fc0f43eeb0a82082a5ce174eb7c116e5fe1591637543d03f
      image: cruibakeryonprem.azurecr.io/cloud/gateway:latest
      imageID: cruibakeryonprem.azurecr.io/cloud/gateway@sha256:109cc8ed01e9cd3bbbeaaa3336148d0d25d6d9b753e6bda8c26d82f28ba97551
      lastState: {}
      name: ui-bakery-gateway
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-03T02:44:14Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.244.0.70
    podIPs:
    - ip: 10.244.0.70
    qosClass: Burstable
    startTime: "2024-05-03T02:44:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:11-05:00"
    creationTimestamp: "2024-05-03T02:44:14Z"
    generateName: ui-bakery-python-runtime-5464b578d7-
    labels:
      app: ui-bakery-python-runtime
      pod-template-hash: 5464b578d7
    name: ui-bakery-python-runtime-5464b578d7-kw785
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ui-bakery-python-runtime-5464b578d7
      uid: a334a530-657a-43f6-86a0-504d3ad2f197
    resourceVersion: "289982"
    uid: e9fb2e16-614e-4b96-9f45-45374f7d64e0
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: ui-bakery-configmap
      image: cruibakeryonprem.azurecr.io/cloud/python-runtime:latest
      imagePullPolicy: Always
      name: ui-bakery-python-runtime
      ports:
      - containerPort: 5050
        protocol: TCP
      resources:
        limits:
          cpu: 900m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sql5p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-sql5p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://73e8a762c2de55e1b12d02cff69c280a7dd0759bfd4d30421428a58f211ea5d0
      image: cruibakeryonprem.azurecr.io/cloud/python-runtime:latest
      imageID: cruibakeryonprem.azurecr.io/cloud/python-runtime@sha256:ad2c301db416424e2e5d9beaeb9aa3012fc7beb9ab5d2ff12c4e0e59e45f6994
      lastState: {}
      name: ui-bakery-python-runtime
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-03T02:44:15Z"
    hostIP: 10.224.0.4
    phase: Running
    podIP: 10.244.0.71
    podIPs:
    - ip: 10.244.0.71
    qosClass: Burstable
    startTime: "2024-05-03T02:44:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:11-05:00"
    creationTimestamp: "2024-05-03T02:44:14Z"
    generateName: ui-bakery-workbench-front-84c575d557-
    labels:
      app: ui-bakery-workbench-front
      pod-template-hash: 84c575d557
    name: ui-bakery-workbench-front-84c575d557-jjvlv
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ui-bakery-workbench-front-84c575d557
      uid: 7883a515-fa9c-42c9-87e6-ca7c82cac524
    resourceVersion: "290002"
    uid: 47610d57-1dbe-4400-9c05-7f0554e7b178
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: ui-bakery-configmap
      image: cruibakeryonprem.azurecr.io/cloud/workbench-front:latest
      imagePullPolicy: Always
      name: ui-bakery-workbench-front
      ports:
      - containerPort: 8080
        protocol: TCP
      resources:
        limits:
          cpu: 900m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mnpp8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-14687916-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-mnpp8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-05-03T02:44:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b474b653ded903aa983429e682d7e44a10578ba9f21044350b64230b9b296fc7
      image: cruibakeryonprem.azurecr.io/cloud/workbench-front:latest
      imageID: cruibakeryonprem.azurecr.io/cloud/workbench-front@sha256:b0d77b85197cedea72383996ec205f1588459494b6de23b0fcdfab176b89564a
      lastState: {}
      name: ui-bakery-workbench-front
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-05-03T02:44:15Z"
    hostIP: 10.224.0.5
    phase: Running
    podIP: 10.244.1.77
    podIPs:
    - ip: 10.244.1.77
    qosClass: Burstable
    startTime: "2024-05-03T02:44:14Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-05-02T06:55:21Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "194"
    uid: 61111ef5-d14d-41be-a1a1-2f5cd65b8572
  spec:
    clusterIP: 10.0.0.1
    clusterIPs:
    - 10.0.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-05-02T06:59:47Z"
    labels:
      app.kubernetes.io/component: ama-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ama-metrics-ksm
      app.kubernetes.io/part-of: ama-metrics-ksm
      app.kubernetes.io/version: 2.9.2
      helm.sh/chart: azure-monitor-metrics-addon-0.1.0
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 6633388117cf1c0001fa41ad
    name: ama-metrics-ksm
    namespace: kube-system
    resourceVersion: "1733"
    uid: f1e32b6a-8c6b-47f3-bedb-43e3fe0f6f5c
  spec:
    clusterIP: 10.0.241.0
    clusterIPs:
    - 10.0.241.0
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/name: ama-metrics-ksm
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-05-02T06:59:47Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-metrics-operator-targets
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 6633388117cf1c0001fa41ad
      kubernetes.azure.com/managedby: aks
    name: ama-metrics-operator-targets
    namespace: kube-system
    resourceVersion: "1734"
    uid: e1b095d4-4852-4797-8cc7-5c28d48c0c4b
  spec:
    clusterIP: 10.0.39.177
    clusterIPs:
    - 10.0.39.177
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: targetallocation
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      rsName: ama-metrics-operator-targets
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.0.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}
    creationTimestamp: "2024-05-02T06:55:59Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "413"
    uid: fb1f11a9-e728-4e7d-baa9-609543bf345a
  spec:
    clusterIP: 10.0.0.10
    clusterIPs:
    - 10.0.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/cluster-service":"true","kubernetes.io/name":"Metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":"ms-https"}],"selector":{"k8s-app":"metrics-server"}}}
    creationTimestamp: "2024-05-02T06:56:00Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "487"
    uid: 84b2ebdd-75b9-4f40-95ed-e77b0de6a1a8
  spec:
    clusterIP: 10.0.233.143
    clusterIPs:
    - 10.0.233.143
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: ms-https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"automation","namespace":"ui-bakery"},"spec":{"ports":[{"port":4000,"targetPort":4000}],"selector":{"app":"ui-bakery-automation"},"type":"ClusterIP"}}
    creationTimestamp: "2024-05-02T08:34:22Z"
    name: automation
    namespace: ui-bakery
    resourceVersion: "24393"
    uid: 4099d3d0-c2b5-4382-84fe-39997d73ca64
  spec:
    clusterIP: 10.0.105.98
    clusterIPs:
    - 10.0.105.98
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 4000
      protocol: TCP
      targetPort: 4000
    selector:
      app: ui-bakery-automation
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"bakery-back","namespace":"ui-bakery"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"app":"ui-bakery-backend"},"type":"ClusterIP"}}
    creationTimestamp: "2024-05-02T08:34:23Z"
    name: bakery-back
    namespace: ui-bakery
    resourceVersion: "24413"
    uid: b5425e75-d09d-4d6c-936d-c0307a36ce2f
  spec:
    clusterIP: 10.0.70.156
    clusterIPs:
    - 10.0.70.156
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ui-bakery-backend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"bakery-front","namespace":"ui-bakery"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"app":"ui-bakery-front"},"type":"ClusterIP"}}
    creationTimestamp: "2024-05-02T08:34:24Z"
    name: bakery-front
    namespace: ui-bakery
    resourceVersion: "24435"
    uid: 5ec44b87-f035-4e68-ac6e-ec9f7774fa43
  spec:
    clusterIP: 10.0.204.7
    clusterIPs:
    - 10.0.204.7
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ui-bakery-front
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"bakery-gateway","namespace":"ui-bakery"},"spec":{"ports":[{"name":"3030","port":3030,"targetPort":3030}],"selector":{"app":"ui-bakery-gateway"},"type":"LoadBalancer"}}
    creationTimestamp: "2024-05-02T08:34:28Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    name: bakery-gateway
    namespace: ui-bakery
    resourceVersion: "24628"
    uid: 3a9737ae-4a67-4eb1-9eb4-ac98c3a39612
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.0.96.91
    clusterIPs:
    - 10.0.96.91
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "3030"
      nodePort: 30341
      port: 3030
      protocol: TCP
      targetPort: 3030
    selector:
      app: ui-bakery-gateway
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 172.171.76.5
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"datasource","namespace":"ui-bakery"},"spec":{"ports":[{"port":6060,"targetPort":6060}],"selector":{"app":"ui-bakery-datasource"},"type":"ClusterIP"}}
    creationTimestamp: "2024-05-02T08:34:27Z"
    name: datasource
    namespace: ui-bakery
    resourceVersion: "24485"
    uid: d6052d98-1274-4ed6-b24f-f61f906493c2
  spec:
    clusterIP: 10.0.42.135
    clusterIPs:
    - 10.0.42.135
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 6060
      protocol: TCP
      targetPort: 6060
    selector:
      app: ui-bakery-datasource
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"mysql","namespace":"ui-bakery"},"spec":{"clusterIP":"None","ports":[{"port":3306}],"selector":{"app":"mysql"}}}
    creationTimestamp: "2024-05-02T08:34:25Z"
    name: mysql
    namespace: ui-bakery
    resourceVersion: "24442"
    uid: c99d8421-079d-4a40-801b-6a9e85c85fb3
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      app: mysql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"postgres","namespace":"ui-bakery"},"spec":{"clusterIP":"None","ports":[{"port":5432}],"selector":{"app":"postgres"}}}
    creationTimestamp: "2024-05-02T23:40:39Z"
    name: postgres
    namespace: ui-bakery
    resourceVersion: "241721"
    uid: ca868d59-6089-419e-adb1-a4e8c0ba82f1
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: postgres
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"python-runtime","namespace":"ui-bakery"},"spec":{"ports":[{"port":5050,"targetPort":5050}],"selector":{"app":"ui-bakery-python-runtime"},"type":"ClusterIP"}}
    creationTimestamp: "2024-05-02T08:34:31Z"
    name: python-runtime
    namespace: ui-bakery
    resourceVersion: "24575"
    uid: 9888a3ac-c28e-4fb6-913c-c6aec69b3de2
  spec:
    clusterIP: 10.0.28.75
    clusterIPs:
    - 10.0.28.75
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 5050
      protocol: TCP
      targetPort: 5050
    selector:
      app: ui-bakery-python-runtime
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"workbench-front","namespace":"ui-bakery"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"app":"ui-bakery-workbench-front"},"type":"ClusterIP"}}
    creationTimestamp: "2024-05-02T08:34:33Z"
    name: workbench-front
    namespace: ui-bakery
    resourceVersion: "24608"
    uid: 2d017a1f-f9fd-4ee3-b3d0-383f85e7924b
  spec:
    clusterIP: 10.0.239.79
    clusterIPs:
    - 10.0.239.79
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ui-bakery-workbench-front
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-logs
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-05-02T06:59:52Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-logs-agent
      helm.toolkit.fluxcd.io/name: azure-monitor-logs-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 6633388117cf1c0001fa41ad
      kubernetes.azure.com/managedby: aks
      tier: node
    name: ama-logs
    namespace: kube-system
    resourceVersion: "1932"
    uid: 2bc7fa41-28f5-4bac-82a9-453a6d973c95
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: ama-logs-agent
        tier: node
    template:
      metadata:
        annotations:
          WSID: NzBiMmI1NjktYTk5Yi00NzZiLWEwYjQtOTYzMmQ0MTMzYWUw
          agentVersion: azure-mdsd-1.29.7
          dockerProviderVersion: 18.0.1-0
          kubernetes.azure.com/no-http-proxy-vars: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          component: ama-logs-agent
          kubernetes.azure.com/managedby: aks
          tier: node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=8888
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - /addon-token-adapter
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 20m
              memory: 50Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.memory
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: FBIT_SERVICE_FLUSH_INTERVAL
            value: "15"
          - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
            value: "1"
          - name: FBIT_TAIL_BUFFER_MAX_SIZE
            value: "1"
          - name: AKS_CLUSTER_NAME
            value: dt_kubes
          - name: AKS_RESOURCE_ID
            value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
          - name: AKS_NODE_RESOURCE_GROUP
            value: MC_web_server_db_dt_kubes_eastus
          - name: AKS_REGION
            value: eastus
          - name: CONTROLLER_TYPE
            value: DaemonSet
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
          - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
            value: koreacentral,norwayeast,eastus2
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
            value: "28331"
          - name: CUSTOM_METRICS_DISABLED
            value: "false"
          - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
            value: "false"
          - name: USING_AAD_MSI_AUTH
            value: "true"
          - name: SYSLOG_HOST_PORT
            value: "28330"
          - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
            value: "false"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs
          ports:
          - containerPort: 25225
            protocol: TCP
          - containerPort: 25224
            protocol: UDP
          - containerPort: 28330
            hostPort: 28330
            name: syslog
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 750Mi
            requests:
              cpu: 75m
              memory: 325Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /hostfs
            mountPropagation: HostToContainer
            name: host-root
            readOnly: true
          - mountPath: /var/log
            name: host-log
          - mountPath: /var/run/mdsd-ci
            name: mdsd-sock
          - mountPath: /var/run/mdsd-PrometheusSidecar
            name: mdsd-prometheus-sock
          - mountPath: /var/lib/docker/containers
            name: containerlog-path
            readOnly: true
          - mountPath: /mnt/docker
            name: containerlog-path-2
            readOnly: true
          - mountPath: /mnt/containers
            name: containerlog-path-3
            readOnly: true
          - mountPath: /etc/kubernetes/host
            name: azure-json-path
          - mountPath: /etc/ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/adx
            name: ama-logs-adx-secret
            readOnly: true
        - env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs-prometheus
                divisor: "0"
                resource: limits.memory
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: AKS_CLUSTER_NAME
            value: dt_kubes
          - name: AKS_RESOURCE_ID
            value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
          - name: AKS_NODE_RESOURCE_GROUP
            value: MC_web_server_db_dt_kubes_eastus
          - name: AKS_REGION
            value: eastus
          - name: CONTROLLER_TYPE
            value: DaemonSet
          - name: CONTAINER_TYPE
            value: PrometheusSidecar
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
          - name: USING_AAD_MSI_AUTH
            value: "true"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs-prometheus
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 75m
              memory: 225Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/kubernetes/host
            name: azure-json-path
          - mountPath: /etc/ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/osm-settings
            name: osm-settings-vol-config
            readOnly: true
          - mountPath: /var/run/mdsd-PrometheusSidecar
            name: mdsd-prometheus-sock
        dnsConfig:
          options:
          - name: ndots
            value: "3"
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-logs
        serviceAccountName: ama-logs
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: PreferNoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /
            type: ""
          name: host-root
        - emptyDir: {}
          name: mdsd-prometheus-sock
        - hostPath:
            path: /etc/hostname
            type: ""
          name: container-hostname
        - hostPath:
            path: /var/log
            type: ""
          name: host-log
        - hostPath:
            path: /var/run/mdsd-ci
            type: ""
          name: mdsd-sock
        - hostPath:
            path: /var/lib/docker/containers
            type: ""
          name: containerlog-path
        - hostPath:
            path: /mnt/docker
            type: ""
          name: containerlog-path-2
        - hostPath:
            path: /mnt/containers
            type: ""
          name: containerlog-path-3
        - hostPath:
            path: /etc/kubernetes
            type: ""
          name: azure-json-path
        - name: ama-logs-secret
          secret:
            defaultMode: 420
            secretName: ama-logs-secret
        - configMap:
            defaultMode: 420
            name: container-azm-ms-agentconfig
            optional: true
          name: settings-vol-config
        - name: ama-logs-adx-secret
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-logs-adx-secret
        - configMap:
            defaultMode: 420
            name: container-azm-ms-osmconfig
            optional: true
          name: osm-settings-vol-config
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 50%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-logs
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-05-02T06:59:52Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-logs-agent-windows
      helm.toolkit.fluxcd.io/name: azure-monitor-logs-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 6633388117cf1c0001fa41ad
      kubernetes.azure.com/managedby: aks
      tier: node-win
    name: ama-logs-windows
    namespace: kube-system
    resourceVersion: "1876"
    uid: 73fb193f-8f52-4953-9a68-0dfb32312894
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: ama-logs-agent-windows
        tier: node-win
    template:
      metadata:
        annotations:
          WSID: NzBiMmI1NjktYTk5Yi00NzZiLWEwYjQtOTYzMmQ0MTMzYWUw
          agentVersion: 0.0.0-0
          dockerProviderVersion: 18.0.1-0
          kubernetes.azure.com/no-http-proxy-vars: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          component: ama-logs-agent-windows
          kubernetes.azure.com/managedby: aks
          tier: node-win
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - env:
          - name: FBIT_SERVICE_FLUSH_INTERVAL
            value: "15"
          - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
            value: "1"
          - name: FBIT_TAIL_BUFFER_MAX_SIZE
            value: "1"
          - name: AKS_RESOURCE_ID
            value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
          - name: AKS_REGION
            value: eastus
          - name: CONTROLLER_TYPE
            value: DaemonSet
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: PODNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs-windows
                divisor: "0"
                resource: limits.memory
          - name: SIDECAR_SCRAPING_ENABLED
            value: "true"
          - name: USING_AAD_MSI_AUTH
            value: "true"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
            value: "28331"
          - name: CUSTOM_METRICS_DISABLED
            value: "false"
          - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
            value: "false"
          - name: AZMON_WINDOWS_FLUENT_BIT_DISABLED
            value: "true"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:win-3.1.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - cmd
              - /c
              - C:\opt\amalogswindows\scripts\cmd\livenessprobe.exe
              - fluent-bit.exe
              - fluentdwinaks
              - C:\etc\amalogswindows\filesystemwatcher.txt
              - C:\etc\amalogswindows\renewcertificate.txt
              - MonAgentCore.exe
            failureThreshold: 3
            initialDelaySeconds: 180
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs-windows
          resources:
            limits:
              cpu: "2"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 700Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\ProgramData\docker\containers
            name: docker-windows-containers
            readOnly: true
          - mountPath: C:\var
            name: docker-windows-kuberenetes-container-logs
          - mountPath: C:\etc\config\settings
            name: settings-vol-config
            readOnly: true
          - mountPath: C:\etc\ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: C:\etc\omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: C:\etc\config\adx
            name: ama-logs-adx-secret
            readOnly: true
          - mountPath: C:\etc\kubernetes\host
            name: azure-json-path
            readOnly: true
          - mountPath: C:\etc\IMDS-access-token
            name: imds-token
            readOnly: true
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=8888
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - addon-token-adapter-win
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.240102.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter-win
          resources:
            limits:
              cpu: 400m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsConfig:
          options:
          - name: ndots
            value: "3"
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-logs
        serviceAccountName: ama-logs
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: PreferNoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: C:\var
            type: ""
          name: docker-windows-kuberenetes-container-logs
        - hostPath:
            path: C:\k
            type: ""
          name: azure-json-path
        - hostPath:
            path: C:\ProgramData\docker\containers
            type: DirectoryOrCreate
          name: docker-windows-containers
        - configMap:
            defaultMode: 420
            name: container-azm-ms-agentconfig
            optional: true
          name: settings-vol-config
        - name: ama-logs-secret
          secret:
            defaultMode: 420
            secretName: ama-logs-secret
        - name: ama-logs-adx-secret
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-logs-adx-secret
        - name: imds-token
          secret:
            defaultMode: 420
            secretName: aad-msi-auth-token
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 50%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-05-02T06:59:47Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-metrics
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 6633388117cf1c0001fa41ad
      kubernetes.azure.com/managedby: aks
    name: ama-metrics-node
    namespace: kube-system
    resourceVersion: "1854"
    uid: a1f99d55-b409-4302-aa1c-eeb7c370ae94
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        dsName: ama-metrics-node
    template:
      metadata:
        annotations:
          agentVersion: 0.0.0.1
          schema-versions: v1
        creationTimestamp: null
        labels:
          dsName: ama-metrics-node
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - env:
          - name: CLUSTER
            value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
          - name: AKSREGION
            value: eastus
          - name: MAC
            value: "true"
          - name: AZMON_COLLECT_ENV
            value: "false"
          - name: customEnvironment
            value: azurepubliccloud
          - name: OMS_TLD
            value: opinsights.azure.com
          - name: CONTROLLER_TYPE
            value: DaemonSet
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1m
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1Mi
                resource: limits.memory
          - name: KUBE_STATE_NAME
            value: ama-metrics-ksm
          - name: NODE_EXPORTER_NAME
          - name: NODE_EXPORTER_TARGETPORT
            value: "19100"
          - name: KUBE_STATE_VERSION
            value: mcr.microsoft.com/oss/kubernetes/kube-state-metrics:v2.9.2
          - name: NODE_EXPORTER_VERSION
          - name: AGENT_VERSION
            value: 6.8.7-main-04-09-2024-82adbf97
          - name: MODE
            value: advanced
          - name: WINMODE
            value: advanced
          - name: MINIMAL_INGESTION_PROFILE
            value: "true"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYMETRICS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYMETRICS_PORT
            value: "28333"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/microsoft/liveness/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: prometheus-collector
          resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 150Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/prometheus/certs
            name: ama-metrics-tls-secret-volume
            readOnly: true
          - mountPath: /etc/config/settings/prometheus
            name: prometheus-config-vol
            readOnly: true
          - mountPath: /var/log/containers
            name: host-log-containers
            readOnly: true
          - mountPath: /var/log/pods
            name: host-log-pods
            readOnly: true
          - mountPath: /anchors/mariner
            name: anchors-mariner
            readOnly: true
          - mountPath: /anchors/ubuntu
            name: anchors-ubuntu
            readOnly: true
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=7777
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - /addon-token-adapter
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 20m
              memory: 30Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-metrics-serviceaccount
        serviceAccountName: ama-metrics-serviceaccount
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: ama-metrics-settings-configmap
            optional: true
          name: settings-vol-config
        - name: ama-metrics-tls-secret-volume
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-metrics-mtls-secret
        - configMap:
            defaultMode: 420
            name: ama-metrics-prometheus-config-node
            optional: true
          name: prometheus-config-vol
        - hostPath:
            path: /var/log/containers
            type: ""
          name: host-log-containers
        - hostPath:
            path: /var/log/pods
            type: ""
          name: host-log-pods
        - hostPath:
            path: /etc/pki/ca-trust/anchors/
            type: DirectoryOrCreate
          name: anchors-mariner
        - hostPath:
            path: /usr/local/share/ca-certificates/
            type: DirectoryOrCreate
          name: anchors-ubuntu
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 50%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-05-02T06:59:47Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-metrics
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 6633388117cf1c0001fa41ad
      kubernetes.azure.com/managedby: aks
    name: ama-metrics-win-node
    namespace: kube-system
    resourceVersion: "1748"
    uid: 7e9a9b00-9920-45ba-af49-bf2a7580370f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        dsName: ama-metrics-win-node
    template:
      metadata:
        annotations:
          agentVersion: 0.0.0.1
          schema-versions: v1
        creationTimestamp: null
        labels:
          dsName: ama-metrics-win-node
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - env:
          - name: CLUSTER
            value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
          - name: AKSREGION
            value: eastus
          - name: MAC
            value: "true"
          - name: AZMON_COLLECT_ENV
            value: "false"
          - name: customEnvironment
            value: azurepubliccloud
          - name: OMS_TLD
            value: opinsights.azure.com
          - name: CONTROLLER_TYPE
            value: DaemonSet
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1m
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1Mi
                resource: limits.memory
          - name: KUBE_STATE_NAME
            value: ama-metrics-ksm
          - name: NODE_EXPORTER_NAME
          - name: NODE_EXPORTER_TARGETPORT
            value: "19100"
          - name: KUBE_STATE_VERSION
            value: mcr.microsoft.com/oss/kubernetes/kube-state-metrics:v2.9.2
          - name: NODE_EXPORTER_VERSION
          - name: AGENT_VERSION
            value: 6.8.7-main-04-09-2024-82adbf97-win
          - name: MODE
            value: advanced
          - name: WINMODE
            value: advanced
          - name: MINIMAL_INGESTION_PROFILE
            value: "true"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYMETRICS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYMETRICS_PORT
            value: "28333"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97-win
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - cmd
              - /c
              - C:\opt\microsoft\scripts\livenessprobe.cmd
            failureThreshold: 3
            initialDelaySeconds: 300
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          name: prometheus-collector
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/prometheus
            name: prometheus-config-vol
            readOnly: true
          - mountPath: /etc/prometheus/certs
            name: ama-metrics-tls-secret-volume
            readOnly: true
          - mountPath: /var/log/containers
            name: host-log-containers
            readOnly: true
          - mountPath: /var/log/pods
            name: host-log-pods
            readOnly: true
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=7777
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - addon-token-adapter-win
          image: mcr.microsoft.com/aks/hcp/addon-token-adapter:master.240102.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter-win
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-metrics-serviceaccount
        serviceAccountName: ama-metrics-serviceaccount
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: ama-metrics-settings-configmap
            optional: true
          name: settings-vol-config
        - configMap:
            defaultMode: 420
            name: ama-metrics-prometheus-config-node-windows
            optional: true
          name: prometheus-config-vol
        - hostPath:
            path: /var/log/containers
            type: ""
          name: host-log-containers
        - name: ama-metrics-tls-secret-volume
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-metrics-mtls-secret
        - hostPath:
            path: /var/log/pods
            type: ""
          name: host-log-pods
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 50%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","component":"azure-ip-masq-agent","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true","tier":"node"},"name":"azure-ip-masq-agent","namespace":"kube-system"},"spec":{"minReadySeconds":60,"selector":{"matchLabels":{"k8s-app":"azure-ip-masq-agent","tier":"node"}},"template":{"metadata":{"labels":{"k8s-app":"azure-ip-masq-agent","kubernetes.azure.com/managedby":"aks","tier":"node"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"automountServiceAccountToken":false,"containers":[{"args":["--v=2","--resync-interval=60"],"image":"mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.10","imagePullPolicy":"IfNotPresent","name":"azure-ip-masq-agent","resources":{"limits":{"cpu":"500m","memory":"250Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}},"volumeMounts":[{"mountPath":"/etc/config","name":"azure-ip-masq-agent-config-volume"},{"mountPath":"/run/xtables.lock","name":"iptableslock"}]}],"hostNetwork":true,"priorityClassName":"system-node-critical","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"name":"azure-ip-masq-agent-config-volume","projected":{"sources":[{"configMap":{"items":[{"key":"ip-masq-agent","mode":444,"path":"ip-masq-agent"}],"name":"azure-ip-masq-agent-config","optional":true}},{"configMap":{"items":[{"key":"ip-masq-agent-reconciled","mode":444,"path":"ip-masq-agent-reconciled"}],"name":"azure-ip-masq-agent-config-reconciled","optional":true}}]}},{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"iptableslock"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":"25%"},"type":"RollingUpdate"}}}
    creationTimestamp: "2024-05-02T06:55:58Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      tier: node
    name: azure-ip-masq-agent
    namespace: kube-system
    resourceVersion: "1379"
    uid: f45cf80a-1c3c-44d4-baf0-51be8a414766
  spec:
    minReadySeconds: 60
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: azure-ip-masq-agent
        tier: node
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: azure-ip-masq-agent
          kubernetes.azure.com/managedby: aks
          tier: node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: false
        containers:
        - args:
          - --v=2
          - --resync-interval=60
          image: mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.10
          imagePullPolicy: IfNotPresent
          name: azure-ip-masq-agent
          resources:
            limits:
              cpu: 500m
              memory: 250Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: azure-ip-masq-agent-config-volume
          - mountPath: /run/xtables.lock
            name: iptableslock
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - name: azure-ip-masq-agent-config-volume
          projected:
            defaultMode: 420
            sources:
            - configMap:
                items:
                - key: ip-masq-agent
                  mode: 444
                  path: ip-masq-agent
                name: azure-ip-masq-agent-config
                optional: true
            - configMap:
                items:
                - key: ip-masq-agent-reconciled
                  mode: 444
                  path: ip-masq-agent-reconciled
                name: azure-ip-masq-agent-config-reconciled
                optional: true
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: iptableslock
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 25%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"cloud-node-manager","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"cloud-node-manager","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"cloud-node-manager"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/daemonset-pod":"true"},"labels":{"k8s-app":"cloud-node-manager","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["cloud-node-manager","--node-name=$(NODE_NAME)","--wait-routes","--enable-deprecated-beta-topology-labels=true"],"env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.28.8","imagePullPolicy":"IfNotPresent","name":"cloud-node-manager","resources":{"limits":{"memory":"512Mi"},"requests":{"cpu":"50m","memory":"50Mi"}}}],"hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"cloud-node-manager","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Equal","value":"true"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2024-05-02T06:55:58Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: cloud-node-manager
    namespace: kube-system
    resourceVersion: "779"
    uid: cc938ef6-70eb-41d5-baf0-13756c7d4680
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cloud-node-manager
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
        creationTimestamp: null
        labels:
          k8s-app: cloud-node-manager
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - cloud-node-manager
          - --node-name=$(NODE_NAME)
          - --wait-routes
          - --enable-deprecated-beta-topology-labels=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.28.8
          imagePullPolicy: IfNotPresent
          name: cloud-node-manager
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cloud-node-manager
        serviceAccountName: cloud-node-manager
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: "true"
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"cloud-node-manager","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"cloud-node-manager-windows","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"cloud-node-manager-windows"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/daemonset-pod":"true"},"labels":{"k8s-app":"cloud-node-manager-windows","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"command":["/cloud-node-manager.exe","--node-name=$(NODE_NAME)"],"env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.28.8","imagePullPolicy":"IfNotPresent","name":"cloud-node-manager","resources":{"limits":{"memory":"512Mi"},"requests":{"cpu":"50m","memory":"50Mi"}}}],"priorityClassName":"system-node-critical","serviceAccountName":"cloud-node-manager","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Equal","value":"true"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2024-05-02T06:55:58Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: cloud-node-manager-windows
    namespace: kube-system
    resourceVersion: "379"
    uid: afd330f3-e8a4-4f7e-b054-e963c494fa37
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cloud-node-manager-windows
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
        creationTimestamp: null
        labels:
          k8s-app: cloud-node-manager-windows
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - command:
          - /cloud-node-manager.exe
          - --node-name=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.28.8
          imagePullPolicy: IfNotPresent
          name: cloud-node-manager
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: cloud-node-manager
        serviceAccountName: cloud-node-manager
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: "true"
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azuredisk-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azuredisk-node"}},"template":{"metadata":{"labels":{"app":"csi-azuredisk-node","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"args":["--csi-address=/csi/csi.sock","--probe-timeout=3s","--health-port=29603","--v=2"],"image":"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0","imagePullPolicy":"IfNotPresent","name":"liveness-probe","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--v=2"],"env":[{"name":"ADDRESS","value":"/csi/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock"}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/csi-node-driver-registrar","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--mode=kubelet-registration-probe"]},"initialDelaySeconds":60,"timeoutSeconds":30},"name":"node-driver-registrar","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/registration","name":"registration-dir"}]},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-perf-optimization=true"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"/etc/kubernetes/azure.json"},{"name":"CSI_ENDPOINT","value":"unix:///csi/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.3","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthz","port":"healthz"},"initialDelaySeconds":30,"periodSeconds":30,"timeoutSeconds":10},"name":"azuredisk","ports":[{"containerPort":29603,"name":"healthz","protocol":"TCP"}],"resources":{"limits":{"memory":"200Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/var/lib/kubelet/","mountPropagation":"Bidirectional","name":"mountpoint-dir"},{"mountPath":"/etc/kubernetes/","name":"azure-cred"},{"mountPath":"/dev","name":"device-dir"},{"mountPath":"/sys/bus/scsi/devices","name":"sys-devices-dir"},{"mountPath":"/sys/class/scsi_host/","name":"scsi-host-dir"}]}],"dnsPolicy":"Default","hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"csi-azuredisk-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/kubelet/plugins/disk.csi.azure.com","type":"DirectoryOrCreate"},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/","type":"DirectoryOrCreate"},"name":"mountpoint-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/etc/kubernetes/","type":"DirectoryOrCreate"},"name":"azure-cred"},{"hostPath":{"path":"/dev","type":"Directory"},"name":"device-dir"},{"hostPath":{"path":"/sys/bus/scsi/devices","type":"Directory"},"name":"sys-devices-dir"},{"hostPath":{"path":"/sys/class/scsi_host/","type":"Directory"},"name":"scsi-host-dir"}]}}}}
    creationTimestamp: "2024-05-02T06:55:59Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azuredisk-node
    namespace: kube-system
    resourceVersion: "782"
    uid: d545aaf8-d906-4058-aa53-21d6c0ae6a83
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azuredisk-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azuredisk-node
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --csi-address=/csi/csi.sock
          - --probe-timeout=3s
          - --health-port=29603
          - --v=2
          image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --v=2
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar
              - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
              - --mode=kubelet-registration-probe
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: node-driver-registrar
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-perf-optimization=true
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: /etc/kubernetes/azure.json
          - name: CSI_ENDPOINT
            value: unix:///csi/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: azuredisk
          ports:
          - containerPort: 29603
            name: healthz
            protocol: TCP
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /var/lib/kubelet/
            mountPropagation: Bidirectional
            name: mountpoint-dir
          - mountPath: /etc/kubernetes/
            name: azure-cred
          - mountPath: /dev
            name: device-dir
          - mountPath: /sys/bus/scsi/devices
            name: sys-devices-dir
          - mountPath: /sys/class/scsi_host/
            name: scsi-host-dir
        dnsPolicy: Default
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: csi-azuredisk-node-sa
        serviceAccountName: csi-azuredisk-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/disk.csi.azure.com
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /etc/kubernetes/
            type: DirectoryOrCreate
          name: azure-cred
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /sys/bus/scsi/devices
            type: Directory
          name: sys-devices-dir
        - hostPath:
            path: /sys/class/scsi_host/
            type: Directory
          name: scsi-host-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azuredisk-node-win","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azuredisk-node-win"}},"template":{"metadata":{"labels":{"app":"csi-azuredisk-node-win","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"args":["--v=2","--csi-address=$(CSI_ENDPOINT)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--plugin-registration-path=$(PLUGIN_REG_DIR)"],"command":["csi-node-driver-registrar.exe"],"env":[{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"},{"name":"PLUGIN_REG_DIR","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0","imagePullPolicy":"IfNotPresent","name":"node-driver-registrar","resources":{"limits":{"memory":"150Mi"},"requests":{"cpu":"40m","memory":"40Mi"}}},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-windows-host-process=true"],"command":["azurediskplugin.exe"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"C:\\k\\azure.json"},{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.3-windows-hp","imagePullPolicy":"IfNotPresent","name":"azuredisk"}],"hostNetwork":true,"initContainers":[{"command":["powershell.exe","-c","New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\ -Force"],"image":"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.3-windows-hp","imagePullPolicy":"IfNotPresent","name":"init"}],"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"},"windowsOptions":{"hostProcess":true,"runAsUserName":"NT AUTHORITY\\SYSTEM"}},"serviceAccountName":"csi-azuredisk-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2024-05-02T06:55:59Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azuredisk-node-win
    namespace: kube-system
    resourceVersion: "442"
    uid: c2b44541-9b9c-47cf-8d28-837659bcc7c9
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azuredisk-node-win
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azuredisk-node-win
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - args:
          - --v=2
          - --csi-address=$(CSI_ENDPOINT)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --plugin-registration-path=$(PLUGIN_REG_DIR)
          command:
          - csi-node-driver-registrar.exe
          env:
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\csi.sock
          - name: PLUGIN_REG_DIR
            value: C:\\var\\lib\\kubelet\\plugins_registry\\
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0
          imagePullPolicy: IfNotPresent
          name: node-driver-registrar
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 40m
              memory: 40Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-windows-host-process=true
          command:
          - azurediskplugin.exe
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: C:\k\azure.json
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.3-windows-hp
          imagePullPolicy: IfNotPresent
          name: azuredisk
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - powershell.exe
          - -c
          - New-Item -ItemType Directory -Path C:\var\lib\kubelet\plugins\disk.csi.azure.com\
            -Force
          image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.3-windows-hp
          imagePullPolicy: IfNotPresent
          name: init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          windowsOptions:
            hostProcess: true
            runAsUserName: NT AUTHORITY\SYSTEM
        serviceAccount: csi-azuredisk-node-sa
        serviceAccountName: csi-azuredisk-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azurefile-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azurefile-node"}},"template":{"metadata":{"labels":{"app":"csi-azurefile-node","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"args":["--csi-address=/csi/csi.sock","--probe-timeout=3s","--health-port=29613","--v=2"],"image":"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0","imagePullPolicy":"IfNotPresent","name":"liveness-probe","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--v=2"],"env":[{"name":"ADDRESS","value":"/csi/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock"}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/csi-node-driver-registrar","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--mode=kubelet-registration-probe"]},"initialDelaySeconds":60,"timeoutSeconds":30},"name":"node-driver-registrar","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/registration","name":"registration-dir"}]},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-get-volume-stats=true","--mount-permissions=0777","--metrics-address=0.0.0.0:29615"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"/etc/kubernetes/azure.json"},{"name":"CSI_ENDPOINT","value":"unix:///csi/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.4","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthz","port":"healthz"},"initialDelaySeconds":30,"periodSeconds":30,"timeoutSeconds":10},"name":"azurefile","ports":[{"containerPort":29613,"name":"healthz","protocol":"TCP"},{"containerPort":29615,"name":"metrics","protocol":"TCP"}],"resources":{"limits":{"memory":"400Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/var/lib/kubelet/","mountPropagation":"Bidirectional","name":"mountpoint-dir"},{"mountPath":"/etc/kubernetes/","name":"azure-cred"},{"mountPath":"/dev","name":"device-dir"}]}],"dnsPolicy":"Default","hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"csi-azurefile-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/kubelet/plugins/file.csi.azure.com","type":"DirectoryOrCreate"},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/","type":"DirectoryOrCreate"},"name":"mountpoint-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/etc/kubernetes/","type":"DirectoryOrCreate"},"name":"azure-cred"},{"hostPath":{"path":"/dev","type":"Directory"},"name":"device-dir"}]}}}}
    creationTimestamp: "2024-05-02T06:55:59Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azurefile-node
    namespace: kube-system
    resourceVersion: "792"
    uid: c5776083-e123-4afb-acd0-267da491c647
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azurefile-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azurefile-node
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --csi-address=/csi/csi.sock
          - --probe-timeout=3s
          - --health-port=29613
          - --v=2
          image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --v=2
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar
              - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
              - --mode=kubelet-registration-probe
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: node-driver-registrar
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-get-volume-stats=true
          - --mount-permissions=0777
          - --metrics-address=0.0.0.0:29615
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: /etc/kubernetes/azure.json
          - name: CSI_ENDPOINT
            value: unix:///csi/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: azurefile
          ports:
          - containerPort: 29613
            name: healthz
            protocol: TCP
          - containerPort: 29615
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /var/lib/kubelet/
            mountPropagation: Bidirectional
            name: mountpoint-dir
          - mountPath: /etc/kubernetes/
            name: azure-cred
          - mountPath: /dev
            name: device-dir
        dnsPolicy: Default
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: csi-azurefile-node-sa
        serviceAccountName: csi-azurefile-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/file.csi.azure.com
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /etc/kubernetes/
            type: DirectoryOrCreate
          name: azure-cred
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azurefile-node-win","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azurefile-node-win"}},"template":{"metadata":{"labels":{"app":"csi-azurefile-node-win","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"args":["--csi-address=$(CSI_ENDPOINT)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--plugin-registration-path=$(PLUGIN_REG_DIR)","--v=2"],"command":["csi-node-driver-registrar.exe"],"env":[{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"},{"name":"PLUGIN_REG_DIR","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0","imagePullPolicy":"IfNotPresent","name":"node-driver-registrar","resources":{"limits":{"memory":"150Mi"},"requests":{"cpu":"40m","memory":"40Mi"}}},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-windows-host-process=true"],"command":["azurefileplugin.exe"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"C:\\k\\azure.json"},{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.3-windows-hp","imagePullPolicy":"IfNotPresent","name":"azurefile"}],"hostNetwork":true,"initContainers":[{"command":["powershell.exe","-c","New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\ -Force"],"image":"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.3-windows-hp","imagePullPolicy":"IfNotPresent","name":"init"}],"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"},"windowsOptions":{"hostProcess":true,"runAsUserName":"NT AUTHORITY\\SYSTEM"}},"serviceAccountName":"csi-azurefile-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2024-05-02T06:55:59Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azurefile-node-win
    namespace: kube-system
    resourceVersion: "452"
    uid: 2c38b6ce-095d-4523-9950-0eaad6b60703
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azurefile-node-win
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azurefile-node-win
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - args:
          - --csi-address=$(CSI_ENDPOINT)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --plugin-registration-path=$(PLUGIN_REG_DIR)
          - --v=2
          command:
          - csi-node-driver-registrar.exe
          env:
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\csi.sock
          - name: PLUGIN_REG_DIR
            value: C:\\var\\lib\\kubelet\\plugins_registry\\
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.0
          imagePullPolicy: IfNotPresent
          name: node-driver-registrar
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 40m
              memory: 40Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-windows-host-process=true
          command:
          - azurefileplugin.exe
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: C:\k\azure.json
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.3-windows-hp
          imagePullPolicy: IfNotPresent
          name: azurefile
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - powershell.exe
          - -c
          - New-Item -ItemType Directory -Path C:\var\lib\kubelet\plugins\file.csi.azure.com\
            -Force
          image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.3-windows-hp
          imagePullPolicy: IfNotPresent
          name: init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          windowsOptions:
            hostProcess: true
            runAsUserName: NT AUTHORITY\SYSTEM
        serviceAccount: csi-azurefile-node-sa
        serviceAccountName: csi-azurefile-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","component":"kube-proxy","kubernetes.azure.com/managedby":"aks","tier":"node"},"name":"kube-proxy","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"component":"kube-proxy","tier":"node"}},"template":{"metadata":{"annotations":null,"labels":{"component":"kube-proxy","kubernetes.azure.com/managedby":"aks","tier":"node"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["kube-proxy","--conntrack-max-per-core=0","--metrics-bind-address=0.0.0.0:10249","--cluster-cidr=10.244.0.0/16","--detect-local-mode=ClusterCIDR","--pod-interface-name-prefix=","--v=3"],"image":"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.28.5-hotfix.20240131","name":"kube-proxy","resources":{"requests":{"cpu":"100m"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/var/lib/kubelet","name":"kubeconfig","readOnly":true},{"mountPath":"/etc/kubernetes/certs","name":"certificates","readOnly":true},{"mountPath":"/run/xtables.lock","name":"iptableslock"},{"mountPath":"/lib/modules","name":"modules"}]}],"hostNetwork":true,"initContainers":[{"command":["/bin/sh","-c","SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max\necho \"Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)\"\nDESIRED=$(awk -F= '/net.netfilter.nf_conntrack_max/ {print $2}' /etc/sysctl.d/999-sysctl-aks.conf)\nif [ -z \"$DESIRED\" ]; then\n  DESIRED=$((32768*$(nproc)))\n  if [ $DESIRED -lt 131072 ]; then\n    DESIRED=131072\n  fi\n\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max not set.\"\n  echo \"Setting nf_conntrack_max to $DESIRED (32768 * $(nproc) cores, minimum 131072).\"\n  echo $DESIRED \u003e $SYSCTL\nelse\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED.\"\n  echo \"Setting nf_conntrack_max to $DESIRED.\"\n  echo $DESIRED \u003e $SYSCTL\nfi\n"],"image":"mcr.microsoft.com/mirror/docker/library/busybox:1.35","name":"kube-proxy-bootstrap","resources":{"requests":{"cpu":"100m"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/etc/sysctl.d","name":"sysctls"},{"mountPath":"/lib/modules","name":"modules"}]}],"priorityClassName":"system-node-critical","serviceAccountName":"kube-proxy","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/kubelet"},"name":"kubeconfig"},{"hostPath":{"path":"/etc/kubernetes/certs"},"name":"certificates"},{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"iptableslock"},{"hostPath":{"path":"/etc/sysctl.d","type":"Directory"},"name":"sysctls"},{"hostPath":{"path":"/lib/modules","type":"Directory"},"name":"modules"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"}}}
    creationTimestamp: "2024-05-02T06:56:00Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: kube-proxy
      kubernetes.azure.com/managedby: aks
      tier: node
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "798"
    uid: 518361a3-fb6e-4fdd-8efb-6e3c97ad0780
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: kube-proxy
        tier: node
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: kube-proxy
          kubernetes.azure.com/managedby: aks
          tier: node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - kube-proxy
          - --conntrack-max-per-core=0
          - --metrics-bind-address=0.0.0.0:10249
          - --cluster-cidr=10.244.0.0/16
          - --detect-local-mode=ClusterCIDR
          - --pod-interface-name-prefix=
          - --v=3
          image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.28.5-hotfix.20240131
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet
            name: kubeconfig
            readOnly: true
          - mountPath: /etc/kubernetes/certs
            name: certificates
            readOnly: true
          - mountPath: /run/xtables.lock
            name: iptableslock
          - mountPath: /lib/modules
            name: modules
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /bin/sh
          - -c
          - |
            SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
            echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
            DESIRED=$(awk -F= '/net.netfilter.nf_conntrack_max/ {print $2}' /etc/sysctl.d/999-sysctl-aks.conf)
            if [ -z "$DESIRED" ]; then
              DESIRED=$((32768*$(nproc)))
              if [ $DESIRED -lt 131072 ]; then
                DESIRED=131072
              fi

              echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
              echo "Setting nf_conntrack_max to $DESIRED (32768 * $(nproc) cores, minimum 131072)."
              echo $DESIRED > $SYSCTL
            else
              echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
              echo "Setting nf_conntrack_max to $DESIRED."
              echo $DESIRED > $SYSCTL
            fi
          image: mcr.microsoft.com/mirror/docker/library/busybox:1.35
          imagePullPolicy: IfNotPresent
          name: kube-proxy-bootstrap
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/sysctl.d
            name: sysctls
          - mountPath: /lib/modules
            name: modules
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet
            type: ""
          name: kubeconfig
        - hostPath:
            path: /etc/kubernetes/certs
            type: ""
          name: certificates
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: iptableslock
        - hostPath:
            path: /etc/sysctl.d
            type: Directory
          name: sysctls
        - hostPath:
            path: /lib/modules
            type: Directory
          name: modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-logs
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-05-02T06:59:52Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-logs-agent
      helm.toolkit.fluxcd.io/name: azure-monitor-logs-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 6633388117cf1c0001fa41ad
      kubernetes.azure.com/managedby: aks
      tier: node
    name: ama-logs-rs
    namespace: kube-system
    resourceVersion: "1935"
    uid: 8279c541-569e-4f95-b146-f0888b4c7840
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        rsName: ama-logs-rs
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          WSID: NzBiMmI1NjktYTk5Yi00NzZiLWEwYjQtOTYzMmQ0MTMzYWUw
          agentVersion: azure-mdsd-1.29.7
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          dockerProviderVersion: 18.0.1-0
          kubernetes.azure.com/no-http-proxy-vars: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          rsName: ama-logs-rs
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: storageprofile
                  operator: NotIn
                  values:
                  - managed
              weight: 1
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=8888
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - /addon-token-adapter
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: AKS_CLUSTER_NAME
            value: dt_kubes
          - name: AKS_RESOURCE_ID
            value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
          - name: AKS_NODE_RESOURCE_GROUP
            value: MC_web_server_db_dt_kubes_eastus
          - name: AKS_REGION
            value: eastus
          - name: CONTROLLER_TYPE
            value: ReplicaSet
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
          - name: NUM_OF_FLUENTD_WORKERS
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.memory
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SIDECAR_SCRAPING_ENABLED
            value: "true"
          - name: USING_AAD_MSI_AUTH
            value: "true"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
            value: "28331"
          - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
            value: "false"
          - name: AZMON_WINDOWS_FLUENT_BIT_DISABLED
            value: "true"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs
          ports:
          - containerPort: 25225
            protocol: TCP
          - containerPort: 25224
            protocol: UDP
          - containerPort: 25227
            name: in-rs-tcp
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1536Mi
            requests:
              cpu: 150m
              memory: 250Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: host-log
          - mountPath: /etc/kubernetes/host
            name: azure-json-path
          - mountPath: /etc/ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/config
            name: ama-logs-rs-config
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/adx
            name: ama-logs-adx-secret
            readOnly: true
          - mountPath: /etc/config/osm-settings
            name: osm-settings-vol-config
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-logs
        serviceAccountName: ama-logs
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/hostname
            type: ""
          name: container-hostname
        - hostPath:
            path: /var/log
            type: ""
          name: host-log
        - hostPath:
            path: /etc/kubernetes
            type: ""
          name: azure-json-path
        - name: ama-logs-secret
          secret:
            defaultMode: 420
            secretName: ama-logs-secret
        - configMap:
            defaultMode: 420
            name: ama-logs-rs-config
          name: ama-logs-rs-config
        - configMap:
            defaultMode: 420
            name: container-azm-ms-agentconfig
            optional: true
          name: settings-vol-config
        - name: ama-logs-adx-secret
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-logs-adx-secret
        - configMap:
            defaultMode: 420
            name: container-azm-ms-osmconfig
            optional: true
          name: osm-settings-vol-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-05-02T06:59:54Z"
      lastUpdateTime: "2024-05-02T06:59:54Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-02T06:59:52Z"
      lastUpdateTime: "2024-05-02T06:59:54Z"
      message: ReplicaSet "ama-logs-rs-5fd7bf8d6c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-05-02T06:59:47Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-metrics
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 6633388117cf1c0001fa41ad
      kubernetes.azure.com/managedby: aks
    name: ama-metrics
    namespace: kube-system
    resourceVersion: "1855"
    uid: 05080fba-b034-4e56-bfb5-1daabb6fa9b1
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        rsName: ama-metrics
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          agentVersion: 0.0.0.1
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          rsName: ama-metrics
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: azuremonitor/metrics.replica.preferred
                  operator: In
                  values:
                  - "true"
              weight: 50
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - env:
          - name: CLUSTER
            value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
          - name: AKSREGION
            value: eastus
          - name: MAC
            value: "true"
          - name: AZMON_COLLECT_ENV
            value: "false"
          - name: AZMON_OPERATOR_ENABLED
            value: "true"
          - name: customEnvironment
            value: azurepubliccloud
          - name: OMS_TLD
            value: opinsights.azure.com
          - name: CONTROLLER_TYPE
            value: ReplicaSet
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1m
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1Mi
                resource: limits.memory
          - name: KUBE_STATE_NAME
            value: ama-metrics-ksm
          - name: NODE_EXPORTER_NAME
          - name: NODE_EXPORTER_TARGETPORT
            value: "19100"
          - name: KUBE_STATE_VERSION
            value: v2.9.2
          - name: OPERATOR_TARGETS_TA_IMG_VERSION
            value: 6.8.7-main-04-09-2024-82adbf97-targetallocator
          - name: OPERATOR_TARGETS_CFG_READER_IMG_VERSION
            value: 6.8.7-main-04-09-2024-82adbf97-cfg
          - name: NODE_EXPORTER_VERSION
          - name: AGENT_VERSION
            value: 6.8.7-main-04-09-2024-82adbf97
          - name: MODE
            value: advanced
          - name: WINMODE
            value: advanced
          - name: MINIMAL_INGESTION_PROFILE
            value: "true"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/microsoft/liveness/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: prometheus-collector
          resources:
            limits:
              cpu: "7"
              memory: 14Gi
            requests:
              cpu: 150m
              memory: 500Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/prometheus/certs
            name: ama-metrics-tls-secret-volume
            readOnly: true
          - mountPath: /etc/config/settings/prometheus
            name: prometheus-config-vol
            readOnly: true
          - mountPath: /var/log/containers
            name: host-log-containers
            readOnly: true
          - mountPath: /var/log/pods
            name: host-log-pods
            readOnly: true
          - mountPath: /anchors/mariner
            name: anchors-mariner
            readOnly: true
          - mountPath: /anchors/ubuntu
            name: anchors-ubuntu
            readOnly: true
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=7777
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - /addon-token-adapter
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 20m
              memory: 30Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-metrics-serviceaccount
        serviceAccountName: ama-metrics-serviceaccount
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: ama-metrics-settings-configmap
            optional: true
          name: settings-vol-config
        - configMap:
            defaultMode: 420
            name: ama-metrics-prometheus-config
            optional: true
          name: prometheus-config-vol
        - hostPath:
            path: /var/log/containers
            type: ""
          name: host-log-containers
        - hostPath:
            path: /var/log/pods
            type: ""
          name: host-log-pods
        - hostPath:
            path: /etc/pki/ca-trust/anchors/
            type: DirectoryOrCreate
          name: anchors-mariner
        - name: ama-metrics-tls-secret-volume
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-metrics-mtls-secret
        - hostPath:
            path: /usr/local/share/ca-certificates/
            type: DirectoryOrCreate
          name: anchors-ubuntu
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-05-02T06:59:50Z"
      lastUpdateTime: "2024-05-02T06:59:50Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-02T06:59:47Z"
      lastUpdateTime: "2024-05-02T06:59:50Z"
      message: ReplicaSet "ama-metrics-55b746ffcd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-05-02T06:59:47Z"
    generation: 1
    labels:
      app.kubernetes.io/component: ama-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ama-metrics-ksm
      app.kubernetes.io/part-of: ama-metrics-ksm
      app.kubernetes.io/version: 2.9.2
      helm.sh/chart: azure-monitor-metrics-addon-0.1.0
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 6633388117cf1c0001fa41ad
      kubernetes.azure.com/managedby: aks
    name: ama-metrics-ksm
    namespace: kube-system
    resourceVersion: "1956"
    uid: 0ecfd0f3-cace-4a25-b50b-cb64e2194ba2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app.kubernetes.io/name: ama-metrics-ksm
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: ama-metrics
          app.kubernetes.io/name: ama-metrics-ksm
          app.kubernetes.io/part-of: ama-metrics-ksm
          app.kubernetes.io/version: 2.9.2
          helm.sh/chart: azure-monitor-metrics-addon-0.1.0
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          - --telemetry-port=8081
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/oss/kubernetes/kube-state-metrics:v2.9.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: ama-metrics-ksm
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "1"
              memory: 5Gi
            requests:
              cpu: 5m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsUser: 65534
        serviceAccount: ama-metrics-ksm
        serviceAccountName: ama-metrics-ksm
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-05-02T06:59:58Z"
      lastUpdateTime: "2024-05-02T06:59:58Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-02T06:59:47Z"
      lastUpdateTime: "2024-05-02T06:59:58Z"
      message: ReplicaSet "ama-metrics-ksm-d9c6f475b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-05-02T06:59:47Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-metrics-operator-targets
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 6633388117cf1c0001fa41ad
      kubernetes.azure.com/managedby: aks
    name: ama-metrics-operator-targets
    namespace: kube-system
    resourceVersion: "2091"
    uid: 1d7c7250-49f4-44a3-a6d2-f2e827e198d7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        kubernetes.azure.com/managedby: aks
        rsName: ama-metrics-operator-targets
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          rsName: ama-metrics-operator-targets
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: azuremonitor/metrics.replica.preferred
                  operator: In
                  values:
                  - "true"
              weight: 50
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - args:
          - --enable-prometheus-cr-watcher
          - --reload-config
          env:
          - name: OTELCOL_NAMESPACE
            value: kube-system
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CLUSTER
            value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
          - name: PROMETHEUS_OPERATOR_V1_CUSTOM_GROUP
            value: azmonitoring.coreos.com
          - name: AGENT_VERSION
            value: 6.8.7-main-04-09-2024-82adbf97-targetallocator
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97-targetallocator
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: targetallocator
          resources:
            limits:
              cpu: "5"
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: ta-config-shared
        - env:
          - name: CLUSTER
            value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
          - name: AKSREGION
            value: eastus
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            value: kube-system
          - name: CONTAINER_TYPE
            value: ConfigReaderSidecar
          - name: MODE
            value: advanced
          - name: MAC
            value: "true"
          - name: AZMON_COLLECT_ENV
            value: "false"
          - name: KUBE_STATE_NAME
            value: ama-metrics-ksm
          - name: NODE_EXPORTER_NAME
          - name: NODE_EXPORTER_TARGETPORT
            value: "19100"
          - name: customEnvironment
            value: azurepubliccloud
          - name: WINMODE
          - name: MINIMAL_INGESTION_PROFILE
            value: "true"
          - name: AGENT_VERSION
            value: 6.8.7-main-04-09-2024-82adbf97-cfg
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97-cfg
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/microsoft/liveness/livenessprobe-configreader.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: config-reader
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 1m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/prometheus
            name: prometheus-config-vol
            readOnly: true
          - mountPath: /ta-configuration
            name: ta-config-shared
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-metrics-serviceaccount
        serviceAccountName: ama-metrics-serviceaccount
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: ama-metrics-settings-configmap
            optional: true
          name: settings-vol-config
        - configMap:
            defaultMode: 420
            name: ama-metrics-prometheus-config
            optional: true
          name: prometheus-config-vol
        - emptyDir: {}
          name: ta-config-shared
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-05-02T06:59:47Z"
      lastUpdateTime: "2024-05-02T06:59:49Z"
      message: ReplicaSet "ama-metrics-operator-targets-59fbc96f46" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-05-02T07:00:18Z"
      lastUpdateTime: "2024-05-02T07:00:18Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS","version":"v20"},"name":"coredns","namespace":"kube-system"},"spec":{"paused":false,"revisionHistoryLimit":2,"selector":{"matchLabels":{"k8s-app":"kube-dns","version":"v20"}},"strategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"prometheus.io/port":"9153"},"labels":{"k8s-app":"kube-dns","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true","version":"v20"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["kube-dns"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":10},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["kube-dns"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["-conf","/etc/coredns/Corefile"],"image":"mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240327","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"coredns","ports":[{"containerPort":53,"name":"dns","protocol":"UDP"},{"containerPort":53,"name":"dns-tcp","protocol":"TCP"},{"containerPort":9153,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/ready","port":8181,"scheme":"HTTP"}},"resources":{"limits":{"cpu":3,"memory":"500Mi"},"requests":{"cpu":"100m","memory":"70Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"add":["NET_BIND_SERVICE"],"drop":["all"]},"procMount":"Default","readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/etc/coredns","name":"config-volume","readOnly":true},{"mountPath":"/etc/coredns/custom","name":"custom-config-volume","readOnly":true},{"mountPath":"/tmp","name":"tmp"}]}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"coredns","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"},{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}],"volumes":[{"configMap":{"items":[{"key":"Corefile","path":"Corefile"}],"name":"coredns"},"name":"config-volume"},{"configMap":{"name":"coredns-custom","optional":true},"name":"custom-config-volume"},{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2024-05-02T06:55:59Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      version: v20
    name: coredns
    namespace: kube-system
    resourceVersion: "1163"
    uid: 75d2310b-8ee4-4ae7-b776-5c736d308f5a
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        version: v20
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "9153"
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          kubernetes.azure.com/managedby: aks
          kubernetes.io/cluster-service: "true"
          version: v20
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240327
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "3"
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            procMount: Default
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
          - mountPath: /etc/coredns/custom
            name: custom-config-volume
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
        - configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
          name: custom-config-volume
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2024-05-02T06:57:20Z"
      lastUpdateTime: "2024-05-02T06:57:20Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-02T06:55:59Z"
      lastUpdateTime: "2024-05-02T06:57:23Z"
      message: ReplicaSet "coredns-767bfbd4fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"coredns-autoscaler","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"coredns-autoscaler","namespace":"kube-system"},"spec":{"paused":false,"revisionHistoryLimit":2,"selector":{"matchLabels":{"k8s-app":"coredns-autoscaler"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/safe-to-evict":"true","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"k8s-app":"coredns-autoscaler","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["/cluster-proportional-autoscaler","--namespace=kube-system","--configmap=coredns-autoscaler","--target=deployment/coredns","--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}","--logtostderr=true","--v=2"],"image":"mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.8","livenessProbe":{"httpGet":{"path":"/last-poll","port":8080},"initialDelaySeconds":10,"periodSeconds":10},"name":"autoscaler","resources":{"limits":{"cpu":"200m","memory":"500Mi"},"requests":{"cpu":"20m","memory":"10Mi"}}}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"coredns-autoscaler","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}]}}}}
    creationTimestamp: "2024-05-02T06:55:59Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: coredns-autoscaler
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: coredns-autoscaler
    namespace: kube-system
    resourceVersion: "1044"
    uid: 886c6190-09c2-40f6-8314-575de20b9e74
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: coredns-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: coredns-autoscaler
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=coredns-autoscaler
          - --target=deployment/coredns
          - --default-params={"ladder":{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}}
          - --logtostderr=true
          - --v=2
          image: mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /last-poll
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: autoscaler
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 20m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns-autoscaler
        serviceAccountName: coredns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-05-02T06:57:03Z"
      lastUpdateTime: "2024-05-02T06:57:03Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-02T06:55:59Z"
      lastUpdateTime: "2024-05-02T06:57:03Z"
      message: ReplicaSet "coredns-autoscaler-7c88465478" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"konnectivity-agent","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"konnectivity-agent","namespace":"kube-system"},"spec":{"paused":false,"replicas":2,"revisionHistoryLimit":2,"selector":{"matchLabels":{"app":"konnectivity-agent"}},"strategy":{"rollingUpdate":{"maxSurge":0,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"checksum/client-cert":"3459d57a3fa1cbe175bae4f0ad90bd5a2914de9d98da0d89050c81857fd44ff5"},"labels":{"app":"konnectivity-agent","component":"tunnel","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["konnectivity-agent"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":10},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["konnectivity-agent"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"automountServiceAccountToken":false,"containers":[{"args":["--proxy-server-host=insights-qjv4aeod.hcp.eastus.azmk8s.io","--proxy-server-port=443","--health-server-port=8082","--keepalive-time=30s","--agent-key=/certs/client.key","--agent-cert=/certs/client.crt","--ca-cert=/certs/ca.crt","--agent-identifiers=default-route=true","--alpn-proto=konnectivity","-v=2"],"command":["/proxy-agent"],"image":"mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/ready","port":8082,"scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":60,"timeoutSeconds":60},"name":"konnectivity-agent","readinessProbe":{"httpGet":{"path":"/ready","port":8082,"scheme":"HTTP"}},"resources":{"limits":{"cpu":"1000m","memory":"1Gi"},"requests":{"cpu":"20m","memory":"20Mi"}},"volumeMounts":[{"mountPath":"/certs","name":"certs"}]}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","serviceAccountName":"konnectivity-agent","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}],"volumes":[{"name":"certs","secret":{"secretName":"konnectivity-certs"}}]}}}}
    creationTimestamp: "2024-05-02T06:55:59Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: konnectivity-agent
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: konnectivity-agent
    namespace: kube-system
    resourceVersion: "12438"
    uid: 7cc8574d-0627-46a8-824a-c0cd5f8ff361
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: konnectivity-agent
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/client-cert: 3459d57a3fa1cbe175bae4f0ad90bd5a2914de9d98da0d89050c81857fd44ff5
          checksum/service-account-key: c1f0b9bf44304f1fa336a6a02a23d4be3bca80f52d411233cb3e07beb2e954e8
        creationTimestamp: null
        labels:
          app: konnectivity-agent
          component: tunnel
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - args:
          - --proxy-server-host=insights-qjv4aeod.hcp.eastus.azmk8s.io
          - --proxy-server-port=443
          - --health-server-port=8082
          - --keepalive-time=30s
          - --agent-key=/certs/client.key
          - --agent-cert=/certs/client.crt
          - --ca-cert=/certs/ca.crt
          - --agent-identifiers=default-route=true
          - --alpn-proto=konnectivity
          - -v=2
          command:
          - /proxy-agent
          image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          name: konnectivity-agent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: certs
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: konnectivity-certs
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2024-05-02T06:57:10Z"
      lastUpdateTime: "2024-05-02T06:57:10Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-02T06:55:59Z"
      lastUpdateTime: "2024-05-02T07:43:47Z"
      message: ReplicaSet "konnectivity-agent-b9dc5ccd9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"metrics-server","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"metrics-server","namespace":"kube-system"},"spec":{"paused":false,"replicas":2,"revisionHistoryLimit":2,"selector":{"matchLabels":{"k8s-app":"metrics-server"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"k8s-app":"metrics-server","kubernetes.azure.com/managedby":"aks"},"name":"metrics-server"},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["metrics-server"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":10},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["metrics-server"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["/pod_nanny","--config-dir=/etc/config","--cpu=44m","--extra-cpu=0.5m","--memory=51Mi","--extra-memory=4Mi","--poll-period=180000","--threshold=5","--deployment=metrics-server","--container=metrics-server"],"env":[{"name":"MY_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19","imagePullPolicy":"IfNotPresent","name":"metrics-server-vpa","resources":{"limits":{"cpu":"100m","memory":"300Mi"},"requests":{"cpu":"5m","memory":"30Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":65532},"volumeMounts":[{"mountPath":"/etc/config","name":"metrics-server-config-volume"}]},{"command":["/metrics-server","--kubelet-insecure-tls","--kubelet-preferred-address-types=InternalIP","--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","--cert-dir=/tmp","--secure-port=4443"],"image":"mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/livez","port":"ms-https","scheme":"HTTPS"},"initialDelaySeconds":20,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":10},"name":"metrics-server","ports":[{"containerPort":4443,"name":"ms-https","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/readyz","port":"ms-https","scheme":"HTTPS"},"initialDelaySeconds":60,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":65532},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-dir"}]}],"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"metrics-server","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}],"volumes":[{"emptyDir":{},"name":"tmp-dir"},{"configMap":{"name":"metrics-server-config","optional":true},"name":"metrics-server-config-volume"}]}}}}
    creationTimestamp: "2024-05-02T06:56:00Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: metrics-server
    namespace: kube-system
    resourceVersion: "2432"
    uid: 8e9b1745-a1ff-4096-8a24-3c15a1664ccb
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          kubernetes.azure.com/managedby: aks
        name: metrics-server
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=44m
          - --extra-cpu=0.5m
          - --memory=51Mi
          - --extra-memory=4Mi
          - --poll-period=180000
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19
          imagePullPolicy: IfNotPresent
          name: metrics-server-vpa
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - /metrics-server
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - --cert-dir=/tmp
          - --secure-port=4443
          image: mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: metrics-server
          ports:
          - containerPort: 4443
            name: ms-https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 45m
              memory: 59Mi
            requests:
              cpu: 45m
              memory: 59Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
        - configMap:
            defaultMode: 420
            name: metrics-server-config
            optional: true
          name: metrics-server-config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2024-05-02T06:58:10Z"
      lastUpdateTime: "2024-05-02T06:58:10Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-02T06:56:00Z"
      lastUpdateTime: "2024-05-02T07:01:29Z"
      message: ReplicaSet "metrics-server-5f476446c6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "20"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"mysql","namespace":"ui-bakery"},"spec":{"selector":{"matchLabels":{"app":"mysql"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"app":"mysql"}},"spec":{"containers":[{"env":[{"name":"MYSQL_ROOT_PASSWORD","value":"AIK9ai(wgB7Mmb!3"},{"name":"MYSQL_PASSWORD","value":"bakery"},{"name":"MYSQL_DATABASE","value":"bakery"},{"name":"MYSQL_USER","value":"bakery"}],"image":"mysql:8.0","name":"mysql","ports":[{"containerPort":3306,"name":"mysql"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"volumeMounts":[{"mountPath":"/var/lib/mysql","name":"mysql-persistent-storage"}]}],"volumes":[{"name":"mysql-persistent-storage","persistentVolumeClaim":{"claimName":"mysql-pv-claim"}}]}}}}
    creationTimestamp: "2024-05-02T08:34:25Z"
    generation: 20
    name: mysql
    namespace: ui-bakery
    resourceVersion: "289814"
    uid: 507dbe49-b464-44f4-968b-dd3d794d2211
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: mysql
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:07-05:00"
        creationTimestamp: null
        labels:
          app: mysql
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            value: AIK9ai(wgB7Mmb!3
          - name: MYSQL_PASSWORD
            value: bakery
          - name: MYSQL_DATABASE
            value: bakery
          - name: MYSQL_USER
            value: bakery
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-05-03T02:44:12Z"
      lastUpdateTime: "2024-05-03T02:44:12Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-03T01:12:10Z"
      lastUpdateTime: "2024-05-03T02:44:12Z"
      message: ReplicaSet "mysql-64ffb75cbc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 20
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "10"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"postgres","namespace":"ui-bakery"},"spec":{"selector":{"matchLabels":{"app":"postgres"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"app":"postgres"}},"spec":{"containers":[{"env":[{"name":"POSTGRES_USER","value":"bakery"},{"name":"POSTGRES_PASSWORD","value":"bakery"},{"name":"POSTGRES_DB","value":"bakery"}],"image":"postgres:16.1","name":"postgres","ports":[{"containerPort":5432,"name":"postgres"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"0.5","memory":"512Mi"}},"volumeMounts":[{"mountPath":"/var/lib/postgresql/data","name":"postgres-persistent-storage","subPath":"bakery-data"}]}],"volumes":[{"name":"postgres-persistent-storage","persistentVolumeClaim":{"claimName":"postgres-pv-claim"}}]}}}}
    creationTimestamp: "2024-05-02T23:40:39Z"
    generation: 10
    name: postgres
    namespace: ui-bakery
    resourceVersion: "302360"
    uid: 43d4e890-65df-4765-8ab7-6ded0a258dce
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: postgres
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:07-05:00"
        creationTimestamp: null
        labels:
          app: postgres
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: bakery
          - name: POSTGRES_PASSWORD
            value: bakery
          - name: POSTGRES_DB
            value: bakery
          image: postgres:16.1
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-persistent-storage
            subPath: bakery-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-05-03T03:35:46Z"
      lastUpdateTime: "2024-05-03T03:35:46Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-03T02:44:10Z"
      lastUpdateTime: "2024-05-03T03:35:46Z"
      message: ReplicaSet "postgres-8f548d4b7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 10
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "13"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"ui-bakery-automation","namespace":"ui-bakery"},"spec":{"selector":{"matchLabels":{"app":"ui-bakery-automation"}},"template":{"metadata":{"labels":{"app":"ui-bakery-automation"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"ui-bakery-configmap"}}],"image":"cruibakeryonprem.azurecr.io/cloud/automation:latest","name":"ui-bakery-automation","ports":[{"containerPort":4000}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"100m","memory":"256Mi"}}}]}}}}
    creationTimestamp: "2024-05-02T08:34:22Z"
    generation: 13
    name: ui-bakery-automation
    namespace: ui-bakery
    resourceVersion: "289817"
    uid: 80ad5826-7fa4-4956-b608-7832dd46b5b1
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ui-bakery-automation
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:08-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-automation
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/automation:latest
          imagePullPolicy: Always
          name: ui-bakery-automation
          ports:
          - containerPort: 4000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-05-02T08:39:05Z"
      lastUpdateTime: "2024-05-02T08:39:05Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-02T08:34:22Z"
      lastUpdateTime: "2024-05-03T02:44:12Z"
      message: ReplicaSet "ui-bakery-automation-769b95587" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 13
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"ui-bakery-backend","namespace":"ui-bakery"},"spec":{"selector":{"matchLabels":{"app":"ui-bakery-backend"}},"template":{"metadata":{"labels":{"app":"ui-bakery-backend"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"ui-bakery-configmap"}}],"image":"cruibakeryonprem.azurecr.io/cloud/bakery-back:latest","name":"ui-bakery-backend","ports":[{"containerPort":8080}],"resources":{"limits":{"cpu":"900m","memory":"512Mi"},"requests":{"cpu":"500m","memory":"256Mi"}},"volumeMounts":[{"mountPath":"/etc/mysql-ssl","name":"mysql-certs","readOnly":true}]}],"volumes":[{"name":"mysql-certs","secret":{"secretName":"mysql-tls-certs"}}]}}}}
    creationTimestamp: "2024-05-03T02:33:48Z"
    generation: 2
    name: ui-bakery-backend
    namespace: ui-bakery
    resourceVersion: "291764"
    uid: 8440d05f-04d5-43b6-bc9c-52ee0f9ff33b
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ui-bakery-backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:08-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-backend
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-back:latest
          imagePullPolicy: Always
          name: ui-bakery-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/mysql-ssl
            name: mysql-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-certs
          secret:
            defaultMode: 420
            secretName: mysql-tls-certs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-05-03T02:33:48Z"
      lastUpdateTime: "2024-05-03T02:44:13Z"
      message: ReplicaSet "ui-bakery-backend-7fd449bcb4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-05-03T02:51:04Z"
      lastUpdateTime: "2024-05-03T02:51:04Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "13"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"ui-bakery-datasource","namespace":"ui-bakery"},"spec":{"selector":{"matchLabels":{"app":"ui-bakery-datasource"}},"template":{"metadata":{"labels":{"app":"ui-bakery-datasource"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"ui-bakery-configmap"}}],"image":"cruibakeryonprem.azurecr.io/cloud/datasource:latest","name":"ui-bakery-datasource","ports":[{"containerPort":6060}],"resources":{"limits":{"cpu":"900m","memory":"512Mi"},"requests":{"cpu":"500m","memory":"256Mi"}}}]}}}}
    creationTimestamp: "2024-05-02T08:34:27Z"
    generation: 13
    name: ui-bakery-datasource
    namespace: ui-bakery
    resourceVersion: "289896"
    uid: 91368f6e-9d4f-4da2-9b8a-a2b06db32aad
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ui-bakery-datasource
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:09-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-datasource
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/datasource:latest
          imagePullPolicy: Always
          name: ui-bakery-datasource
          ports:
          - containerPort: 6060
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-05-02T08:39:07Z"
      lastUpdateTime: "2024-05-02T08:39:07Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-02T08:34:27Z"
      lastUpdateTime: "2024-05-03T02:44:14Z"
      message: ReplicaSet "ui-bakery-datasource-5bc57599d8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 13
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "13"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"ui-bakery-front","namespace":"ui-bakery"},"spec":{"selector":{"matchLabels":{"app":"ui-bakery-front"}},"template":{"metadata":{"labels":{"app":"ui-bakery-front"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"ui-bakery-configmap"}}],"image":"cruibakeryonprem.azurecr.io/cloud/bakery-front:latest","name":"ui-bakery-front","ports":[{"containerPort":8080}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"100m","memory":"256Mi"}}}]}}}}
    creationTimestamp: "2024-05-02T08:34:24Z"
    generation: 13
    name: ui-bakery-front
    namespace: ui-bakery
    resourceVersion: "289945"
    uid: eb5a861d-6e63-481e-bb94-006a3984e9e2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ui-bakery-front
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:10-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-front
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-front:latest
          imagePullPolicy: Always
          name: ui-bakery-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-05-02T08:39:11Z"
      lastUpdateTime: "2024-05-02T08:39:11Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-02T08:34:24Z"
      lastUpdateTime: "2024-05-03T02:44:15Z"
      message: ReplicaSet "ui-bakery-front-749d47b8f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 13
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "13"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"ui-bakery-gateway","namespace":"ui-bakery"},"spec":{"selector":{"matchLabels":{"app":"ui-bakery-gateway"}},"template":{"metadata":{"labels":{"app":"ui-bakery-gateway"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"ui-bakery-configmap"}}],"image":"cruibakeryonprem.azurecr.io/cloud/gateway:latest","name":"ui-bakery-gateway","ports":[{"containerPort":3030}],"resources":{"limits":{"cpu":"900m","memory":"512Mi"},"requests":{"cpu":"500m","memory":"256Mi"}}}]}}}}
    creationTimestamp: "2024-05-02T08:34:28Z"
    generation: 13
    name: ui-bakery-gateway
    namespace: ui-bakery
    resourceVersion: "289980"
    uid: 86475be8-071a-48e8-aab5-908dfb281790
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ui-bakery-gateway
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:10-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-gateway
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/gateway:latest
          imagePullPolicy: Always
          name: ui-bakery-gateway
          ports:
          - containerPort: 3030
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-05-02T08:39:03Z"
      lastUpdateTime: "2024-05-02T08:39:03Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-02T08:34:28Z"
      lastUpdateTime: "2024-05-03T02:44:16Z"
      message: ReplicaSet "ui-bakery-gateway-568887dc4c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 13
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "13"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"ui-bakery-python-runtime","namespace":"ui-bakery"},"spec":{"selector":{"matchLabels":{"app":"ui-bakery-python-runtime"}},"template":{"metadata":{"labels":{"app":"ui-bakery-python-runtime"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"ui-bakery-configmap"}}],"image":"cruibakeryonprem.azurecr.io/cloud/python-runtime:latest","name":"ui-bakery-python-runtime","ports":[{"containerPort":5050}],"resources":{"limits":{"cpu":"900m","memory":"512Mi"},"requests":{"cpu":"500m","memory":"256Mi"}}}]}}}}
    creationTimestamp: "2024-05-02T08:34:31Z"
    generation: 13
    name: ui-bakery-python-runtime
    namespace: ui-bakery
    resourceVersion: "289998"
    uid: 76b1873c-2551-4a5e-b58a-35f53455f084
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ui-bakery-python-runtime
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:11-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-python-runtime
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/python-runtime:latest
          imagePullPolicy: Always
          name: ui-bakery-python-runtime
          ports:
          - containerPort: 5050
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-05-02T08:39:05Z"
      lastUpdateTime: "2024-05-02T08:39:05Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-02T08:34:31Z"
      lastUpdateTime: "2024-05-03T02:44:16Z"
      message: ReplicaSet "ui-bakery-python-runtime-5464b578d7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 13
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "13"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"ui-bakery-workbench-front","namespace":"ui-bakery"},"spec":{"selector":{"matchLabels":{"app":"ui-bakery-workbench-front"}},"template":{"metadata":{"labels":{"app":"ui-bakery-workbench-front"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"ui-bakery-configmap"}}],"image":"cruibakeryonprem.azurecr.io/cloud/workbench-front:latest","name":"ui-bakery-workbench-front","ports":[{"containerPort":8080}],"resources":{"limits":{"cpu":"900m","memory":"512Mi"},"requests":{"cpu":"500m","memory":"256Mi"}}}]}}}}
    creationTimestamp: "2024-05-02T08:34:32Z"
    generation: 13
    name: ui-bakery-workbench-front
    namespace: ui-bakery
    resourceVersion: "290019"
    uid: eed53fbf-99c6-4e70-83d0-f7c0fb405656
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ui-bakery-workbench-front
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:11-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-workbench-front
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/workbench-front:latest
          imagePullPolicy: Always
          name: ui-bakery-workbench-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-05-02T08:39:06Z"
      lastUpdateTime: "2024-05-02T08:39:06Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-05-02T08:34:32Z"
      lastUpdateTime: "2024-05-03T02:44:17Z"
      message: ReplicaSet "ui-bakery-workbench-front-84c575d557" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 13
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-logs
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-05-02T06:59:52Z"
    generation: 1
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 5fd7bf8d6c
      rsName: ama-logs-rs
    name: ama-logs-rs-5fd7bf8d6c
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ama-logs-rs
      uid: 8279c541-569e-4f95-b146-f0888b4c7840
    resourceVersion: "1934"
    uid: c66e4c9b-9513-4728-9ab4-414548c08574
  spec:
    replicas: 1
    selector:
      matchLabels:
        pod-template-hash: 5fd7bf8d6c
        rsName: ama-logs-rs
    template:
      metadata:
        annotations:
          WSID: NzBiMmI1NjktYTk5Yi00NzZiLWEwYjQtOTYzMmQ0MTMzYWUw
          agentVersion: azure-mdsd-1.29.7
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          dockerProviderVersion: 18.0.1-0
          kubernetes.azure.com/no-http-proxy-vars: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 5fd7bf8d6c
          rsName: ama-logs-rs
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: storageprofile
                  operator: NotIn
                  values:
                  - managed
              weight: 1
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=8888
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - /addon-token-adapter
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: AKS_CLUSTER_NAME
            value: dt_kubes
          - name: AKS_RESOURCE_ID
            value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
          - name: AKS_NODE_RESOURCE_GROUP
            value: MC_web_server_db_dt_kubes_eastus
          - name: AKS_REGION
            value: eastus
          - name: CONTROLLER_TYPE
            value: ReplicaSet
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
          - name: NUM_OF_FLUENTD_WORKERS
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.memory
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SIDECAR_SCRAPING_ENABLED
            value: "true"
          - name: USING_AAD_MSI_AUTH
            value: "true"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
            value: "28331"
          - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
            value: "false"
          - name: AZMON_WINDOWS_FLUENT_BIT_DISABLED
            value: "true"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs
          ports:
          - containerPort: 25225
            protocol: TCP
          - containerPort: 25224
            protocol: UDP
          - containerPort: 25227
            name: in-rs-tcp
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1536Mi
            requests:
              cpu: 150m
              memory: 250Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: host-log
          - mountPath: /etc/kubernetes/host
            name: azure-json-path
          - mountPath: /etc/ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/config
            name: ama-logs-rs-config
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/adx
            name: ama-logs-adx-secret
            readOnly: true
          - mountPath: /etc/config/osm-settings
            name: osm-settings-vol-config
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-logs
        serviceAccountName: ama-logs
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/hostname
            type: ""
          name: container-hostname
        - hostPath:
            path: /var/log
            type: ""
          name: host-log
        - hostPath:
            path: /etc/kubernetes
            type: ""
          name: azure-json-path
        - name: ama-logs-secret
          secret:
            defaultMode: 420
            secretName: ama-logs-secret
        - configMap:
            defaultMode: 420
            name: ama-logs-rs-config
          name: ama-logs-rs-config
        - configMap:
            defaultMode: 420
            name: container-azm-ms-agentconfig
            optional: true
          name: settings-vol-config
        - name: ama-logs-adx-secret
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-logs-adx-secret
        - configMap:
            defaultMode: 420
            name: container-azm-ms-osmconfig
            optional: true
          name: osm-settings-vol-config
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-05-02T06:59:47Z"
    generation: 1
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 55b746ffcd
      rsName: ama-metrics
    name: ama-metrics-55b746ffcd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ama-metrics
      uid: 05080fba-b034-4e56-bfb5-1daabb6fa9b1
    resourceVersion: "1852"
    uid: 28b41d2c-f01b-467b-9758-1d650e842cc9
  spec:
    replicas: 1
    selector:
      matchLabels:
        pod-template-hash: 55b746ffcd
        rsName: ama-metrics
    template:
      metadata:
        annotations:
          agentVersion: 0.0.0.1
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 55b746ffcd
          rsName: ama-metrics
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: azuremonitor/metrics.replica.preferred
                  operator: In
                  values:
                  - "true"
              weight: 50
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - env:
          - name: CLUSTER
            value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
          - name: AKSREGION
            value: eastus
          - name: MAC
            value: "true"
          - name: AZMON_COLLECT_ENV
            value: "false"
          - name: AZMON_OPERATOR_ENABLED
            value: "true"
          - name: customEnvironment
            value: azurepubliccloud
          - name: OMS_TLD
            value: opinsights.azure.com
          - name: CONTROLLER_TYPE
            value: ReplicaSet
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1m
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1Mi
                resource: limits.memory
          - name: KUBE_STATE_NAME
            value: ama-metrics-ksm
          - name: NODE_EXPORTER_NAME
          - name: NODE_EXPORTER_TARGETPORT
            value: "19100"
          - name: KUBE_STATE_VERSION
            value: v2.9.2
          - name: OPERATOR_TARGETS_TA_IMG_VERSION
            value: 6.8.7-main-04-09-2024-82adbf97-targetallocator
          - name: OPERATOR_TARGETS_CFG_READER_IMG_VERSION
            value: 6.8.7-main-04-09-2024-82adbf97-cfg
          - name: NODE_EXPORTER_VERSION
          - name: AGENT_VERSION
            value: 6.8.7-main-04-09-2024-82adbf97
          - name: MODE
            value: advanced
          - name: WINMODE
            value: advanced
          - name: MINIMAL_INGESTION_PROFILE
            value: "true"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/microsoft/liveness/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: prometheus-collector
          resources:
            limits:
              cpu: "7"
              memory: 14Gi
            requests:
              cpu: 150m
              memory: 500Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/prometheus/certs
            name: ama-metrics-tls-secret-volume
            readOnly: true
          - mountPath: /etc/config/settings/prometheus
            name: prometheus-config-vol
            readOnly: true
          - mountPath: /var/log/containers
            name: host-log-containers
            readOnly: true
          - mountPath: /var/log/pods
            name: host-log-pods
            readOnly: true
          - mountPath: /anchors/mariner
            name: anchors-mariner
            readOnly: true
          - mountPath: /anchors/ubuntu
            name: anchors-ubuntu
            readOnly: true
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=7777
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - /addon-token-adapter
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.230804.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 20m
              memory: 30Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-metrics-serviceaccount
        serviceAccountName: ama-metrics-serviceaccount
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: ama-metrics-settings-configmap
            optional: true
          name: settings-vol-config
        - configMap:
            defaultMode: 420
            name: ama-metrics-prometheus-config
            optional: true
          name: prometheus-config-vol
        - hostPath:
            path: /var/log/containers
            type: ""
          name: host-log-containers
        - hostPath:
            path: /var/log/pods
            type: ""
          name: host-log-pods
        - hostPath:
            path: /etc/pki/ca-trust/anchors/
            type: DirectoryOrCreate
          name: anchors-mariner
        - name: ama-metrics-tls-secret-volume
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-metrics-mtls-secret
        - hostPath:
            path: /usr/local/share/ca-certificates/
            type: DirectoryOrCreate
          name: anchors-ubuntu
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-05-02T06:59:47Z"
    generation: 1
    labels:
      app.kubernetes.io/component: ama-metrics
      app.kubernetes.io/name: ama-metrics-ksm
      app.kubernetes.io/part-of: ama-metrics-ksm
      app.kubernetes.io/version: 2.9.2
      helm.sh/chart: azure-monitor-metrics-addon-0.1.0
      kubernetes.azure.com/managedby: aks
      pod-template-hash: d9c6f475b
    name: ama-metrics-ksm-d9c6f475b
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ama-metrics-ksm
      uid: 0ecfd0f3-cace-4a25-b50b-cb64e2194ba2
    resourceVersion: "1954"
    uid: 8b67a831-76fa-4f1f-8337-701c38ec3bc4
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: ama-metrics-ksm
        pod-template-hash: d9c6f475b
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: ama-metrics
          app.kubernetes.io/name: ama-metrics-ksm
          app.kubernetes.io/part-of: ama-metrics-ksm
          app.kubernetes.io/version: 2.9.2
          helm.sh/chart: azure-monitor-metrics-addon-0.1.0
          kubernetes.azure.com/managedby: aks
          pod-template-hash: d9c6f475b
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          - --telemetry-port=8081
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/oss/kubernetes/kube-state-metrics:v2.9.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: ama-metrics-ksm
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "1"
              memory: 5Gi
            requests:
              cpu: 5m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsUser: 65534
        serviceAccount: ama-metrics-ksm
        serviceAccountName: ama-metrics-ksm
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-05-02T06:59:47Z"
    generation: 1
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 59fbc96f46
      rsName: ama-metrics-operator-targets
    name: ama-metrics-operator-targets-59fbc96f46
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ama-metrics-operator-targets
      uid: 1d7c7250-49f4-44a3-a6d2-f2e827e198d7
    resourceVersion: "2087"
    uid: c85332c7-32ed-4934-b3bc-82a2289b0ace
  spec:
    replicas: 1
    selector:
      matchLabels:
        kubernetes.azure.com/managedby: aks
        pod-template-hash: 59fbc96f46
        rsName: ama-metrics-operator-targets
    template:
      metadata:
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 59fbc96f46
          rsName: ama-metrics-operator-targets
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: azuremonitor/metrics.replica.preferred
                  operator: In
                  values:
                  - "true"
              weight: 50
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - args:
          - --enable-prometheus-cr-watcher
          - --reload-config
          env:
          - name: OTELCOL_NAMESPACE
            value: kube-system
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CLUSTER
            value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
          - name: PROMETHEUS_OPERATOR_V1_CUSTOM_GROUP
            value: azmonitoring.coreos.com
          - name: AGENT_VERSION
            value: 6.8.7-main-04-09-2024-82adbf97-targetallocator
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97-targetallocator
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: targetallocator
          resources:
            limits:
              cpu: "5"
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: ta-config-shared
        - env:
          - name: CLUSTER
            value: /subscriptions/de894649-dd7c-4197-b9db-c5d4bc872cd4/resourceGroups/web_server_db/providers/Microsoft.ContainerService/managedClusters/dt_kubes
          - name: AKSREGION
            value: eastus
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            value: kube-system
          - name: CONTAINER_TYPE
            value: ConfigReaderSidecar
          - name: MODE
            value: advanced
          - name: MAC
            value: "true"
          - name: AZMON_COLLECT_ENV
            value: "false"
          - name: KUBE_STATE_NAME
            value: ama-metrics-ksm
          - name: NODE_EXPORTER_NAME
          - name: NODE_EXPORTER_TARGETPORT
            value: "19100"
          - name: customEnvironment
            value: azurepubliccloud
          - name: WINMODE
          - name: MINIMAL_INGESTION_PROFILE
            value: "true"
          - name: AGENT_VERSION
            value: 6.8.7-main-04-09-2024-82adbf97-cfg
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.7-main-04-09-2024-82adbf97-cfg
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/microsoft/liveness/livenessprobe-configreader.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: config-reader
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 1m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/prometheus
            name: prometheus-config-vol
            readOnly: true
          - mountPath: /ta-configuration
            name: ta-config-shared
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-metrics-serviceaccount
        serviceAccountName: ama-metrics-serviceaccount
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: ama-metrics-settings-configmap
            optional: true
          name: settings-vol-config
        - configMap:
            defaultMode: 420
            name: ama-metrics-prometheus-config
            optional: true
          name: prometheus-config-vol
        - emptyDir: {}
          name: ta-config-shared
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-05-02T06:55:59Z"
    generation: 2
    labels:
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      pod-template-hash: 767bfbd4fb
      version: v20
    name: coredns-767bfbd4fb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 75d2310b-8ee4-4ae7-b776-5c736d308f5a
    resourceVersion: "1161"
    uid: e1777572-f6b2-4733-83f2-d7604f11a4b2
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 767bfbd4fb
        version: v20
    template:
      metadata:
        annotations:
          prometheus.io/port: "9153"
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          kubernetes.azure.com/managedby: aks
          kubernetes.io/cluster-service: "true"
          pod-template-hash: 767bfbd4fb
          version: v20
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240327
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "3"
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            procMount: Default
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
          - mountPath: /etc/coredns/custom
            name: custom-config-volume
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
        - configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
          name: custom-config-volume
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-05-02T06:55:59Z"
    generation: 1
    labels:
      k8s-app: coredns-autoscaler
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 7c88465478
    name: coredns-autoscaler-7c88465478
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns-autoscaler
      uid: 886c6190-09c2-40f6-8314-575de20b9e74
    resourceVersion: "1042"
    uid: baab40e2-6633-4b3f-8825-8a82c5044310
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: coredns-autoscaler
        pod-template-hash: 7c88465478
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: coredns-autoscaler
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 7c88465478
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=coredns-autoscaler
          - --target=deployment/coredns
          - --default-params={"ladder":{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}}
          - --logtostderr=true
          - --v=2
          image: mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /last-poll
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: autoscaler
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 20m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns-autoscaler
        serviceAccountName: coredns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-05-02T06:55:59Z"
    generation: 3
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 5f6569d976
    name: konnectivity-agent-5f6569d976
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent
      uid: 7cc8574d-0627-46a8-824a-c0cd5f8ff361
    resourceVersion: "12406"
    uid: 147de322-4306-488a-a054-66fc46c423e2
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: konnectivity-agent
        pod-template-hash: 5f6569d976
    template:
      metadata:
        annotations:
          checksum/client-cert: 3459d57a3fa1cbe175bae4f0ad90bd5a2914de9d98da0d89050c81857fd44ff5
        creationTimestamp: null
        labels:
          app: konnectivity-agent
          component: tunnel
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 5f6569d976
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - args:
          - --proxy-server-host=insights-qjv4aeod.hcp.eastus.azmk8s.io
          - --proxy-server-port=443
          - --health-server-port=8082
          - --keepalive-time=30s
          - --agent-key=/certs/client.key
          - --agent-cert=/certs/client.crt
          - --ca-cert=/certs/ca.crt
          - --agent-identifiers=default-route=true
          - --alpn-proto=konnectivity
          - -v=2
          command:
          - /proxy-agent
          image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          name: konnectivity-agent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: certs
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: konnectivity-certs
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2024-05-02T07:43:35Z"
    generation: 3
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: b9dc5ccd9
    name: konnectivity-agent-b9dc5ccd9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent
      uid: 7cc8574d-0627-46a8-824a-c0cd5f8ff361
    resourceVersion: "12437"
    uid: 7b39866d-8f86-494f-95e4-e7e9e5bac6fc
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: konnectivity-agent
        pod-template-hash: b9dc5ccd9
    template:
      metadata:
        annotations:
          checksum/client-cert: 3459d57a3fa1cbe175bae4f0ad90bd5a2914de9d98da0d89050c81857fd44ff5
          checksum/service-account-key: c1f0b9bf44304f1fa336a6a02a23d4be3bca80f52d411233cb3e07beb2e954e8
        creationTimestamp: null
        labels:
          app: konnectivity-agent
          component: tunnel
          kubernetes.azure.com/managedby: aks
          pod-template-hash: b9dc5ccd9
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - args:
          - --proxy-server-host=insights-qjv4aeod.hcp.eastus.azmk8s.io
          - --proxy-server-port=443
          - --health-server-port=8082
          - --keepalive-time=30s
          - --agent-key=/certs/client.key
          - --agent-cert=/certs/client.crt
          - --ca-cert=/certs/ca.crt
          - --agent-identifiers=default-route=true
          - --alpn-proto=konnectivity
          - -v=2
          command:
          - /proxy-agent
          image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          name: konnectivity-agent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: certs
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: konnectivity-certs
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 3
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2024-05-02T07:00:18Z"
    generation: 2
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 5f476446c6
    name: metrics-server-5f476446c6
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 8e9b1745-a1ff-4096-8a24-3c15a1664ccb
    resourceVersion: "2430"
    uid: 86283a66-bc80-4236-a4c4-67cd87867cf2
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 5f476446c6
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 5f476446c6
        name: metrics-server
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=44m
          - --extra-cpu=0.5m
          - --memory=51Mi
          - --extra-memory=4Mi
          - --poll-period=180000
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19
          imagePullPolicy: IfNotPresent
          name: metrics-server-vpa
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - /metrics-server
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - --cert-dir=/tmp
          - --secure-port=4443
          image: mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: metrics-server
          ports:
          - containerPort: 4443
            name: ms-https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 45m
              memory: 59Mi
            requests:
              cpu: 45m
              memory: 59Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
        - configMap:
            defaultMode: 420
            name: metrics-server-config
            optional: true
          name: metrics-server-config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-05-02T06:56:00Z"
    generation: 3
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 69574bbf8
    name: metrics-server-69574bbf8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 8e9b1745-a1ff-4096-8a24-3c15a1664ccb
    resourceVersion: "2410"
    uid: 3b65c61a-a79b-43a3-8c6b-39e7e214e93a
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 69574bbf8
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 69574bbf8
        name: metrics-server
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=44m
          - --extra-cpu=0.5m
          - --memory=51Mi
          - --extra-memory=4Mi
          - --poll-period=180000
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19
          imagePullPolicy: IfNotPresent
          name: metrics-server-vpa
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - /metrics-server
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - --cert-dir=/tmp
          - --secure-port=4443
          image: mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: metrics-server
          ports:
          - containerPort: 4443
            name: ms-https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
        - configMap:
            defaultMode: 420
            name: metrics-server-config
            optional: true
          name: metrics-server-config-volume
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "15"
    creationTimestamp: "2024-05-03T01:12:28Z"
    generation: 2
    labels:
      app: mysql
      pod-template-hash: 5f7bf97bcc
    name: mysql-5f7bf97bcc
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql
      uid: 507dbe49-b464-44f4-968b-dd3d794d2211
    resourceVersion: "266022"
    uid: 8eeebfeb-2e1f-4ff1-a5ce-af50b8505d4b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mysql
        pod-template-hash: 5f7bf97bcc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:12:07-05:00"
        creationTimestamp: null
        labels:
          app: mysql
          pod-template-hash: 5f7bf97bcc
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            value: AIK9ai(wgB7Mmb!3
          - name: MYSQL_PASSWORD
            value: bakery
          - name: MYSQL_DATABASE
            value: bakery
          - name: MYSQL_USER
            value: bakery
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2024-05-03T01:50:30Z"
    generation: 2
    labels:
      app: mysql
      pod-template-hash: 644d6f66b7
    name: mysql-644d6f66b7
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql
      uid: 507dbe49-b464-44f4-968b-dd3d794d2211
    resourceVersion: "286239"
    uid: 6299612d-4404-43dc-9e43-59b402630a2f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mysql
        pod-template-hash: 644d6f66b7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:50:25-05:00"
        creationTimestamp: null
        labels:
          app: mysql
          pod-template-hash: 644d6f66b7
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            value: AIK9ai(wgB7Mmb!3
          - name: MYSQL_PASSWORD
            value: bakery
          - name: MYSQL_DATABASE
            value: bakery
          - name: MYSQL_USER
            value: bakery
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2024-05-03T02:44:11Z"
    generation: 1
    labels:
      app: mysql
      pod-template-hash: 64ffb75cbc
    name: mysql-64ffb75cbc
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql
      uid: 507dbe49-b464-44f4-968b-dd3d794d2211
    resourceVersion: "289805"
    uid: 59718cd0-8f6a-4ef3-b4d6-8890472bc270
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: mysql
        pod-template-hash: 64ffb75cbc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:07-05:00"
        creationTimestamp: null
        labels:
          app: mysql
          pod-template-hash: 64ffb75cbc
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            value: AIK9ai(wgB7Mmb!3
          - name: MYSQL_PASSWORD
            value: bakery
          - name: MYSQL_DATABASE
            value: bakery
          - name: MYSQL_USER
            value: bakery
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "11"
    creationTimestamp: "2024-05-03T00:51:01Z"
    generation: 2
    labels:
      app: mysql
      pod-template-hash: 68574946d
    name: mysql-68574946d
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql
      uid: 507dbe49-b464-44f4-968b-dd3d794d2211
    resourceVersion: "260740"
    uid: 2ea7e4dc-7293-474c-b86f-00ace62c0603
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mysql
        pod-template-hash: 68574946d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:46:11-05:00"
        creationTimestamp: null
        labels:
          app: mysql
          pod-template-hash: 68574946d
      spec:
        containers:
        - args:
          - -c
          - if [ -f /scripts/init-script.sh ]; then /scripts/init-script.sh; fi &&
            docker-entrypoint.sh mysqld
          command:
          - /bin/sh
          env:
          - name: MYSQL_ROOT_PASSWORD
            value: AIK9ai(wgB7Mmb!3
          - name: MYSQL_PASSWORD
            value: bakery
          - name: MYSQL_DATABASE
            value: bakery
          - name: MYSQL_USER
            value: bakery
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
          - mountPath: /scripts
            name: init-script-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        - configMap:
            defaultMode: 420
            name: mysql-init-script
          name: init-script-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2024-05-03T00:51:19Z"
    generation: 2
    labels:
      app: mysql
      pod-template-hash: 6b8555f956
    name: mysql-6b8555f956
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql
      uid: 507dbe49-b464-44f4-968b-dd3d794d2211
    resourceVersion: "261620"
    uid: 2b9b7ef6-4579-4abe-9345-05ff8288a368
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mysql
        pod-template-hash: 6b8555f956
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:51:15-05:00"
        creationTimestamp: null
        labels:
          app: mysql
          pod-template-hash: 6b8555f956
      spec:
        containers:
        - args:
          - -c
          - if [ -f /scripts/init-script.sh ]; then /scripts/init-script.sh; fi &&
            docker-entrypoint.sh mysqld
          command:
          - /bin/sh
          env:
          - name: MYSQL_ROOT_PASSWORD
            value: AIK9ai(wgB7Mmb!3
          - name: MYSQL_PASSWORD
            value: bakery
          - name: MYSQL_DATABASE
            value: bakery
          - name: MYSQL_USER
            value: bakery
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
          - mountPath: /scripts
            name: init-script-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        - configMap:
            defaultMode: 420
            name: mysql-init-script
          name: init-script-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2024-05-03T02:31:49Z"
    generation: 2
    labels:
      app: mysql
      pod-template-hash: 6d45d768c6
    name: mysql-6d45d768c6
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql
      uid: 507dbe49-b464-44f4-968b-dd3d794d2211
    resourceVersion: "289683"
    uid: 06addb61-9de5-470b-84ad-1b7ece6a86ee
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mysql
        pod-template-hash: 6d45d768c6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:31:44-05:00"
        creationTimestamp: null
        labels:
          app: mysql
          pod-template-hash: 6d45d768c6
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            value: AIK9ai(wgB7Mmb!3
          - name: MYSQL_PASSWORD
            value: bakery
          - name: MYSQL_DATABASE
            value: bakery
          - name: MYSQL_USER
            value: bakery
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2024-05-03T01:18:23Z"
    generation: 2
    labels:
      app: mysql
      pod-template-hash: 6f6dcf46c9
    name: mysql-6f6dcf46c9
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql
      uid: 507dbe49-b464-44f4-968b-dd3d794d2211
    resourceVersion: "275946"
    uid: a03ca14e-1d8f-4333-ae12-487c890fadc3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mysql
        pod-template-hash: 6f6dcf46c9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:18:18-05:00"
        creationTimestamp: null
        labels:
          app: mysql
          pod-template-hash: 6f6dcf46c9
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            value: AIK9ai(wgB7Mmb!3
          - name: MYSQL_PASSWORD
            value: bakery
          - name: MYSQL_DATABASE
            value: bakery
          - name: MYSQL_USER
            value: bakery
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2024-05-03T00:54:42Z"
    generation: 2
    labels:
      app: mysql
      pod-template-hash: 74b75755fb
    name: mysql-74b75755fb
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql
      uid: 507dbe49-b464-44f4-968b-dd3d794d2211
    resourceVersion: "265877"
    uid: fa040e6c-0a45-4426-922e-5a707f1d6f49
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mysql
        pod-template-hash: 74b75755fb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:54:38-05:00"
        creationTimestamp: null
        labels:
          app: mysql
          pod-template-hash: 74b75755fb
      spec:
        containers:
        - args:
          - -c
          - if [ -f /scripts/init-script.sh ]; then /scripts/init-script.sh; fi &&
            docker-entrypoint.sh mysqld
          command:
          - /bin/sh
          env:
          - name: MYSQL_ROOT_PASSWORD
            value: AIK9ai(wgB7Mmb!3
          - name: MYSQL_PASSWORD
            value: bakery
          - name: MYSQL_DATABASE
            value: bakery
          - name: MYSQL_USER
            value: bakery
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
          - mountPath: /scripts
            name: init-script-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        - configMap:
            defaultMode: 420
            name: mysql-init-script
          name: init-script-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2024-05-03T00:46:15Z"
    generation: 2
    labels:
      app: mysql
      pod-template-hash: 7b56557798
    name: mysql-7b56557798
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql
      uid: 507dbe49-b464-44f4-968b-dd3d794d2211
    resourceVersion: "260631"
    uid: ff88bcd9-ae92-4bf0-b205-ae5fde59de78
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mysql
        pod-template-hash: 7b56557798
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:46:11-05:00"
        creationTimestamp: null
        labels:
          app: mysql
          pod-template-hash: 7b56557798
      spec:
        containers:
        - args:
          - -c
          - /scripts/init-script.sh && docker-entrypoint.sh mysqld
          command:
          - /bin/sh
          env:
          - name: MYSQL_ROOT_PASSWORD
            value: AIK9ai(wgB7Mmb!3
          - name: MYSQL_PASSWORD
            value: bakery
          - name: MYSQL_DATABASE
            value: bakery
          - name: MYSQL_USER
            value: bakery
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "16"
    creationTimestamp: "2024-05-03T01:12:33Z"
    generation: 2
    labels:
      app: mysql
      pod-template-hash: c8788f64f
    name: mysql-c8788f64f
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql
      uid: 507dbe49-b464-44f4-968b-dd3d794d2211
    resourceVersion: "267454"
    uid: 6647f12c-159d-4cc5-bb1a-87e80bb33f8c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mysql
        pod-template-hash: c8788f64f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:12:29-05:00"
        creationTimestamp: null
        labels:
          app: mysql
          pod-template-hash: c8788f64f
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            value: AIK9ai(wgB7Mmb!3
          - name: MYSQL_PASSWORD
            value: bakery
          - name: MYSQL_DATABASE
            value: bakery
          - name: MYSQL_USER
            value: bakery
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "14"
    creationTimestamp: "2024-05-03T01:12:11Z"
    generation: 2
    labels:
      app: mysql
      pod-template-hash: f4674cc48
    name: mysql-f4674cc48
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql
      uid: 507dbe49-b464-44f4-968b-dd3d794d2211
    resourceVersion: "265965"
    uid: 22eec382-0ec1-41fb-8cbd-d978be67a05b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mysql
        pod-template-hash: f4674cc48
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:12:07-05:00"
        creationTimestamp: null
        labels:
          app: mysql
          pod-template-hash: f4674cc48
      spec:
        containers:
        - args:
          - -c
          - if [ -f /scripts/init-script.sh ]; then /scripts/init-script.sh; fi &&
            docker-entrypoint.sh mysqld
          command:
          - /bin/sh
          env:
          - name: MYSQL_ROOT_PASSWORD
            value: AIK9ai(wgB7Mmb!3
          - name: MYSQL_PASSWORD
            value: bakery
          - name: MYSQL_DATABASE
            value: bakery
          - name: MYSQL_USER
            value: bakery
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
          - mountPath: /scripts
            name: init-script-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        - configMap:
            defaultMode: 420
            name: mysql-init-script
          name: init-script-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2024-05-03T02:31:48Z"
    generation: 2
    labels:
      app: postgres
      pod-template-hash: 579bd88654
    name: postgres-579bd88654
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: 43d4e890-65df-4765-8ab7-6ded0a258dce
    resourceVersion: "289697"
    uid: 01938698-82a9-4b70-aa92-61a42c635bf1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: 579bd88654
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:31:45-05:00"
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: 579bd88654
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: bakery
          - name: POSTGRES_PASSWORD
            value: bakery
          - name: POSTGRES_DB
            value: bakery
          image: postgres:16.1
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2024-05-02T23:58:05Z"
    generation: 2
    labels:
      app: postgres
      pod-template-hash: 5dbdc87f9
    name: postgres-5dbdc87f9
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: 43d4e890-65df-4765-8ab7-6ded0a258dce
    resourceVersion: "251871"
    uid: 9c642c01-98d5-4914-b5e9-d73a8b1f921c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: 5dbdc87f9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T18:58:01-05:00"
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: 5dbdc87f9
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: bakery
          - name: POSTGRES_PASSWORD
            value: bakery
          - name: POSTGRES_DB
            value: bakery
          image: postgres:16.1
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2024-05-03T00:33:13Z"
    generation: 2
    labels:
      app: postgres
      pod-template-hash: 645956bf45
    name: postgres-645956bf45
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: 43d4e890-65df-4765-8ab7-6ded0a258dce
    resourceVersion: "259047"
    uid: 786a8e7f-d4e6-4998-bb65-4a837a203edf
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: 645956bf45
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:33:09-05:00"
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: 645956bf45
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: bakery
          - name: POSTGRES_PASSWORD
            value: bakery
          - name: POSTGRES_DB
            value: bakery
          image: postgres:16.1
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2024-05-03T01:18:22Z"
    generation: 2
    labels:
      app: postgres
      pod-template-hash: 6488c4d677
    name: postgres-6488c4d677
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: 43d4e890-65df-4765-8ab7-6ded0a258dce
    resourceVersion: "275966"
    uid: c8e600f3-211d-4c76-ad98-5a7337ad33de
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: 6488c4d677
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:18:19-05:00"
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: 6488c4d677
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: bakery
          - name: POSTGRES_PASSWORD
            value: bakery
          - name: POSTGRES_DB
            value: bakery
          image: postgres:16.1
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2024-05-03T01:50:29Z"
    generation: 2
    labels:
      app: postgres
      pod-template-hash: 67f5bd76c9
    name: postgres-67f5bd76c9
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: 43d4e890-65df-4765-8ab7-6ded0a258dce
    resourceVersion: "286253"
    uid: 64eee275-338c-477d-a10e-627724f6749b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: 67f5bd76c9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:50:26-05:00"
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: 67f5bd76c9
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: bakery
          - name: POSTGRES_PASSWORD
            value: bakery
          - name: POSTGRES_DB
            value: bakery
          image: postgres:16.1
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-05-02T23:40:39Z"
    generation: 2
    labels:
      app: postgres
      pod-template-hash: 69776f5986
    name: postgres-69776f5986
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: 43d4e890-65df-4765-8ab7-6ded0a258dce
    resourceVersion: "246033"
    uid: 22a8e9f8-2668-49dd-bdb8-6fe7e55178a6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: 69776f5986
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: 69776f5986
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: bakery
          - name: POSTGRES_PASSWORD
            value: bakery
          - name: POSTGRES_DB
            value: bakery
          image: postgres:16.1
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "9"
    creationTimestamp: "2024-05-03T02:44:11Z"
    generation: 2
    labels:
      app: postgres
      pod-template-hash: 6f5484475b
    name: postgres-6f5484475b
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: 43d4e890-65df-4765-8ab7-6ded0a258dce
    resourceVersion: "302285"
    uid: 449d5c67-503a-492b-ad63-1509d05f500a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: 6f5484475b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:07-05:00"
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: 6f5484475b
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: bakery
          - name: POSTGRES_PASSWORD
            value: bakery
          - name: POSTGRES_DB
            value: bakery
          image: postgres:16.1
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2024-05-03T00:46:15Z"
    generation: 2
    labels:
      app: postgres
      pod-template-hash: 8645968d49
    name: postgres-8645968d49
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: 43d4e890-65df-4765-8ab7-6ded0a258dce
    resourceVersion: "267467"
    uid: 7ef931e2-654a-49c1-9cfd-f16f722945c7
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: 8645968d49
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:46:12-05:00"
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: 8645968d49
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: bakery
          - name: POSTGRES_PASSWORD
            value: bakery
          - name: POSTGRES_DB
            value: bakery
          image: postgres:16.1
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2024-05-03T03:35:35Z"
    generation: 1
    labels:
      app: postgres
      pod-template-hash: 8f548d4b7
    name: postgres-8f548d4b7
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: 43d4e890-65df-4765-8ab7-6ded0a258dce
    resourceVersion: "302359"
    uid: 57ba4a09-daa1-4aa1-80d9-f1672a6c859d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: 8f548d4b7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:07-05:00"
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: 8f548d4b7
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: bakery
          - name: POSTGRES_PASSWORD
            value: bakery
          - name: POSTGRES_DB
            value: bakery
          image: postgres:16.1
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-persistent-storage
            subPath: bakery-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2024-05-03T00:20:18Z"
    generation: 2
    labels:
      app: postgres
      pod-template-hash: dd986bbbb
    name: postgres-dd986bbbb
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: 43d4e890-65df-4765-8ab7-6ded0a258dce
    resourceVersion: "255374"
    uid: 48cfba4b-c1d9-4d23-a7f6-0888cdceafe1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: dd986bbbb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:20:15-05:00"
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: dd986bbbb
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: bakery
          - name: POSTGRES_PASSWORD
            value: bakery
          - name: POSTGRES_DB
            value: bakery
          image: postgres:16.1
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2024-05-03T02:31:48Z"
    generation: 2
    labels:
      app: ui-bakery-automation
      pod-template-hash: 55f49cd5fb
    name: ui-bakery-automation-55f49cd5fb
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-automation
      uid: 80ad5826-7fa4-4956-b608-7832dd46b5b1
    resourceVersion: "289816"
    uid: 59c0f85d-8ed1-415b-ae8c-aa2d51163bad
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-automation
        pod-template-hash: 55f49cd5fb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:31:45-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-automation
          pod-template-hash: 55f49cd5fb
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/automation:latest
          imagePullPolicy: Always
          name: ui-bakery-automation
          ports:
          - containerPort: 4000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2024-05-03T00:20:19Z"
    generation: 2
    labels:
      app: ui-bakery-automation
      pod-template-hash: 575b695c7
    name: ui-bakery-automation-575b695c7
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-automation
      uid: 80ad5826-7fa4-4956-b608-7832dd46b5b1
    resourceVersion: "255605"
    uid: 68a99073-1e1f-44d1-8784-acabbd5cd4c5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-automation
        pod-template-hash: 575b695c7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:20:16-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-automation
          pod-template-hash: 575b695c7
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/automation:latest
          imagePullPolicy: Always
          name: ui-bakery-automation
          ports:
          - containerPort: 4000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
    creationTimestamp: "2024-05-03T00:46:15Z"
    generation: 2
    labels:
      app: ui-bakery-automation
      pod-template-hash: 5f6bff9d5c
    name: ui-bakery-automation-5f6bff9d5c
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-automation
      uid: 80ad5826-7fa4-4956-b608-7832dd46b5b1
    resourceVersion: "267569"
    uid: 37ded45c-6683-4dc9-a372-fe573a4312a3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-automation
        pod-template-hash: 5f6bff9d5c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:46:12-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-automation
          pod-template-hash: 5f6bff9d5c
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/automation:latest
          imagePullPolicy: Always
          name: ui-bakery-automation
          ports:
          - containerPort: 4000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
    creationTimestamp: "2024-05-03T01:50:29Z"
    generation: 2
    labels:
      app: ui-bakery-automation
      pod-template-hash: 697985db7f
    name: ui-bakery-automation-697985db7f
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-automation
      uid: 80ad5826-7fa4-4956-b608-7832dd46b5b1
    resourceVersion: "286394"
    uid: 667489bb-5eec-4eed-a321-78afd9637cd0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-automation
        pod-template-hash: 697985db7f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:50:26-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-automation
          pod-template-hash: 697985db7f
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/automation:latest
          imagePullPolicy: Always
          name: ui-bakery-automation
          ports:
          - containerPort: 4000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2024-05-03T02:44:11Z"
    generation: 1
    labels:
      app: ui-bakery-automation
      pod-template-hash: 769b95587
    name: ui-bakery-automation-769b95587
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-automation
      uid: 80ad5826-7fa4-4956-b608-7832dd46b5b1
    resourceVersion: "289799"
    uid: 23a404b9-3773-48d7-ba97-147fcbdf41f3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ui-bakery-automation
        pod-template-hash: 769b95587
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:08-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-automation
          pod-template-hash: 769b95587
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/automation:latest
          imagePullPolicy: Always
          name: ui-bakery-automation
          ports:
          - containerPort: 4000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2024-05-03T00:33:13Z"
    generation: 2
    labels:
      app: ui-bakery-automation
      pod-template-hash: 774f944d7f
    name: ui-bakery-automation-774f944d7f
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-automation
      uid: 80ad5826-7fa4-4956-b608-7832dd46b5b1
    resourceVersion: "259183"
    uid: c67ec2db-4465-41b5-be05-b51225dc888c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-automation
        pod-template-hash: 774f944d7f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:33:10-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-automation
          pod-template-hash: 774f944d7f
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/automation:latest
          imagePullPolicy: Always
          name: ui-bakery-automation
          ports:
          - containerPort: 4000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2024-05-02T23:58:05Z"
    generation: 2
    labels:
      app: ui-bakery-automation
      pod-template-hash: 795fcb474b
    name: ui-bakery-automation-795fcb474b
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-automation
      uid: 80ad5826-7fa4-4956-b608-7832dd46b5b1
    resourceVersion: "252007"
    uid: 61c2cfe6-b836-4be1-8a0a-f4794e65bd41
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-automation
        pod-template-hash: 795fcb474b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T18:58:02-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-automation
          pod-template-hash: 795fcb474b
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/automation:latest
          imagePullPolicy: Always
          name: ui-bakery-automation
          ports:
          - containerPort: 4000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2024-05-03T01:18:22Z"
    generation: 2
    labels:
      app: ui-bakery-automation
      pod-template-hash: 8547ccd977
    name: ui-bakery-automation-8547ccd977
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-automation
      uid: 80ad5826-7fa4-4956-b608-7832dd46b5b1
    resourceVersion: "276244"
    uid: 2417f827-4338-4d78-ac92-1a261495b46f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-automation
        pod-template-hash: 8547ccd977
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:18:19-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-automation
          pod-template-hash: 8547ccd977
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/automation:latest
          imagePullPolicy: Always
          name: ui-bakery-automation
          ports:
          - containerPort: 4000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2024-05-02T15:30:47Z"
    generation: 2
    labels:
      app: ui-bakery-automation
      pod-template-hash: 86b4768bb9
    name: ui-bakery-automation-86b4768bb9
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-automation
      uid: 80ad5826-7fa4-4956-b608-7832dd46b5b1
    resourceVersion: "131121"
    uid: 0aa72e5c-5148-4b48-93e9-61745ff58da1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-automation
        pod-template-hash: 86b4768bb9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T10:30:45-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-automation
          pod-template-hash: 86b4768bb9
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/automation:latest
          imagePullPolicy: Always
          name: ui-bakery-automation
          ports:
          - containerPort: 4000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2024-05-02T15:56:51Z"
    generation: 2
    labels:
      app: ui-bakery-automation
      pod-template-hash: b8b4bdfc7
    name: ui-bakery-automation-b8b4bdfc7
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-automation
      uid: 80ad5826-7fa4-4956-b608-7832dd46b5b1
    resourceVersion: "241396"
    uid: 6be011d6-d587-4a82-a4e6-92c4fdf4ffb4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-automation
        pod-template-hash: b8b4bdfc7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T10:56:49-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-automation
          pod-template-hash: b8b4bdfc7
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/automation:latest
          imagePullPolicy: Always
          name: ui-bakery-automation
          ports:
          - containerPort: 4000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2024-05-02T23:40:04Z"
    generation: 2
    labels:
      app: ui-bakery-automation
      pod-template-hash: bfd5667dd
    name: ui-bakery-automation-bfd5667dd
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-automation
      uid: 80ad5826-7fa4-4956-b608-7832dd46b5b1
    resourceVersion: "246170"
    uid: 39ea1bac-95db-4fc1-8277-22cc9ac0b316
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-automation
        pod-template-hash: bfd5667dd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T18:40:01-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-automation
          pod-template-hash: bfd5667dd
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/automation:latest
          imagePullPolicy: Always
          name: ui-bakery-automation
          ports:
          - containerPort: 4000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-05-03T02:33:48Z"
    generation: 2
    labels:
      app: ui-bakery-backend
      pod-template-hash: 5845fd866c
    name: ui-bakery-backend-5845fd866c
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-backend
      uid: 8440d05f-04d5-43b6-bc9c-52ee0f9ff33b
    resourceVersion: "289851"
    uid: 833d98a3-0cf9-42a1-a9a7-085c3012cbc1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-backend
        pod-template-hash: 5845fd866c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ui-bakery-backend
          pod-template-hash: 5845fd866c
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-back:latest
          imagePullPolicy: Always
          name: ui-bakery-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/mysql-ssl
            name: mysql-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-certs
          secret:
            defaultMode: 420
            secretName: mysql-tls-certs
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2024-05-03T02:44:11Z"
    generation: 1
    labels:
      app: ui-bakery-backend
      pod-template-hash: 7fd449bcb4
    name: ui-bakery-backend-7fd449bcb4
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-backend
      uid: 8440d05f-04d5-43b6-bc9c-52ee0f9ff33b
    resourceVersion: "291761"
    uid: 0a6c1ba3-dd4e-435d-8b0e-12e4794105d4
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ui-bakery-backend
        pod-template-hash: 7fd449bcb4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:08-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-backend
          pod-template-hash: 7fd449bcb4
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-back:latest
          imagePullPolicy: Always
          name: ui-bakery-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/mysql-ssl
            name: mysql-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-certs
          secret:
            defaultMode: 420
            secretName: mysql-tls-certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
    creationTimestamp: "2024-05-03T01:50:30Z"
    generation: 2
    labels:
      app: ui-bakery-datasource
      pod-template-hash: 544d8b46dd
    name: ui-bakery-datasource-544d8b46dd
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-datasource
      uid: 91368f6e-9d4f-4da2-9b8a-a2b06db32aad
    resourceVersion: "286444"
    uid: 09ce325b-33b0-4caf-8b1a-e6884a78996c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-datasource
        pod-template-hash: 544d8b46dd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:50:27-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-datasource
          pod-template-hash: 544d8b46dd
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/datasource:latest
          imagePullPolicy: Always
          name: ui-bakery-datasource
          ports:
          - containerPort: 6060
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2024-05-02T23:58:06Z"
    generation: 2
    labels:
      app: ui-bakery-datasource
      pod-template-hash: 5647fdb897
    name: ui-bakery-datasource-5647fdb897
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-datasource
      uid: 91368f6e-9d4f-4da2-9b8a-a2b06db32aad
    resourceVersion: "252083"
    uid: 2c46b358-7093-42e3-9749-3f06b39ada2d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-datasource
        pod-template-hash: 5647fdb897
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T18:58:03-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-datasource
          pod-template-hash: 5647fdb897
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/datasource:latest
          imagePullPolicy: Always
          name: ui-bakery-datasource
          ports:
          - containerPort: 6060
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2024-05-02T15:56:52Z"
    generation: 2
    labels:
      app: ui-bakery-datasource
      pod-template-hash: 584c8d8c99
    name: ui-bakery-datasource-584c8d8c99
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-datasource
      uid: 91368f6e-9d4f-4da2-9b8a-a2b06db32aad
    resourceVersion: "241433"
    uid: 9551e106-c801-47d9-a867-734a3ca01e26
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-datasource
        pod-template-hash: 584c8d8c99
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T10:56:50-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-datasource
          pod-template-hash: 584c8d8c99
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/datasource:latest
          imagePullPolicy: Always
          name: ui-bakery-datasource
          ports:
          - containerPort: 6060
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2024-05-03T00:20:20Z"
    generation: 2
    labels:
      app: ui-bakery-datasource
      pod-template-hash: 59f8fd5886
    name: ui-bakery-datasource-59f8fd5886
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-datasource
      uid: 91368f6e-9d4f-4da2-9b8a-a2b06db32aad
    resourceVersion: "255640"
    uid: 33c0e303-8d96-4db2-a03c-e44ee4e7eee5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-datasource
        pod-template-hash: 59f8fd5886
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:20:17-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-datasource
          pod-template-hash: 59f8fd5886
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/datasource:latest
          imagePullPolicy: Always
          name: ui-bakery-datasource
          ports:
          - containerPort: 6060
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2024-05-03T02:44:12Z"
    generation: 1
    labels:
      app: ui-bakery-datasource
      pod-template-hash: 5bc57599d8
    name: ui-bakery-datasource-5bc57599d8
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-datasource
      uid: 91368f6e-9d4f-4da2-9b8a-a2b06db32aad
    resourceVersion: "289880"
    uid: d6da4b8c-f501-4467-9ab5-402af98ba289
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ui-bakery-datasource
        pod-template-hash: 5bc57599d8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:09-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-datasource
          pod-template-hash: 5bc57599d8
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/datasource:latest
          imagePullPolicy: Always
          name: ui-bakery-datasource
          ports:
          - containerPort: 6060
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2024-05-03T02:31:49Z"
    generation: 2
    labels:
      app: ui-bakery-datasource
      pod-template-hash: 758bff8bd9
    name: ui-bakery-datasource-758bff8bd9
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-datasource
      uid: 91368f6e-9d4f-4da2-9b8a-a2b06db32aad
    resourceVersion: "289895"
    uid: 7f4864d9-4371-4b38-80ef-bcc128b06801
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-datasource
        pod-template-hash: 758bff8bd9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:31:46-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-datasource
          pod-template-hash: 758bff8bd9
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/datasource:latest
          imagePullPolicy: Always
          name: ui-bakery-datasource
          ports:
          - containerPort: 6060
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2024-05-03T01:18:23Z"
    generation: 2
    labels:
      app: ui-bakery-datasource
      pod-template-hash: 857dd475bf
    name: ui-bakery-datasource-857dd475bf
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-datasource
      uid: 91368f6e-9d4f-4da2-9b8a-a2b06db32aad
    resourceVersion: "276247"
    uid: 09fc6d56-9d71-49f4-819b-fd1737ffb01e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-datasource
        pod-template-hash: 857dd475bf
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:18:20-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-datasource
          pod-template-hash: 857dd475bf
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/datasource:latest
          imagePullPolicy: Always
          name: ui-bakery-datasource
          ports:
          - containerPort: 6060
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2024-05-02T23:40:05Z"
    generation: 2
    labels:
      app: ui-bakery-datasource
      pod-template-hash: d48c5d5
    name: ui-bakery-datasource-d48c5d5
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-datasource
      uid: 91368f6e-9d4f-4da2-9b8a-a2b06db32aad
    resourceVersion: "246215"
    uid: e7c42433-e0cc-40c4-af33-67d75efcfaec
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-datasource
        pod-template-hash: d48c5d5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T18:40:02-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-datasource
          pod-template-hash: d48c5d5
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/datasource:latest
          imagePullPolicy: Always
          name: ui-bakery-datasource
          ports:
          - containerPort: 6060
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2024-05-02T15:30:48Z"
    generation: 2
    labels:
      app: ui-bakery-datasource
      pod-template-hash: df87b985b
    name: ui-bakery-datasource-df87b985b
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-datasource
      uid: 91368f6e-9d4f-4da2-9b8a-a2b06db32aad
    resourceVersion: "131206"
    uid: 74c7492b-d4be-491d-823d-fc2b644467c2
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-datasource
        pod-template-hash: df87b985b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T10:30:46-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-datasource
          pod-template-hash: df87b985b
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/datasource:latest
          imagePullPolicy: Always
          name: ui-bakery-datasource
          ports:
          - containerPort: 6060
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
    creationTimestamp: "2024-05-03T00:46:16Z"
    generation: 2
    labels:
      app: ui-bakery-datasource
      pod-template-hash: f44f8f7fd
    name: ui-bakery-datasource-f44f8f7fd
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-datasource
      uid: 91368f6e-9d4f-4da2-9b8a-a2b06db32aad
    resourceVersion: "267628"
    uid: 29c01f81-0794-41a1-9972-c28d7342d598
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-datasource
        pod-template-hash: f44f8f7fd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:46:13-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-datasource
          pod-template-hash: f44f8f7fd
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/datasource:latest
          imagePullPolicy: Always
          name: ui-bakery-datasource
          ports:
          - containerPort: 6060
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2024-05-03T00:33:14Z"
    generation: 2
    labels:
      app: ui-bakery-datasource
      pod-template-hash: f74b5d584
    name: ui-bakery-datasource-f74b5d584
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-datasource
      uid: 91368f6e-9d4f-4da2-9b8a-a2b06db32aad
    resourceVersion: "259224"
    uid: f8a912df-1826-468f-9ca1-b347c369c1fd
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-datasource
        pod-template-hash: f74b5d584
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:33:11-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-datasource
          pod-template-hash: f74b5d584
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/datasource:latest
          imagePullPolicy: Always
          name: ui-bakery-datasource
          ports:
          - containerPort: 6060
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2024-05-03T00:20:20Z"
    generation: 2
    labels:
      app: ui-bakery-front
      pod-template-hash: 5c4b7bdf4f
    name: ui-bakery-front-5c4b7bdf4f
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-front
      uid: eb5a861d-6e63-481e-bb94-006a3984e9e2
    resourceVersion: "255641"
    uid: ab39dcdf-a0c0-4474-a0d4-d309cae7db44
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-front
        pod-template-hash: 5c4b7bdf4f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:20:17-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-front
          pod-template-hash: 5c4b7bdf4f
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-front:latest
          imagePullPolicy: Always
          name: ui-bakery-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2024-05-02T15:30:49Z"
    generation: 2
    labels:
      app: ui-bakery-front
      pod-template-hash: 644799cf7f
    name: ui-bakery-front-644799cf7f
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-front
      uid: eb5a861d-6e63-481e-bb94-006a3984e9e2
    resourceVersion: "131214"
    uid: 327e3cb2-3c5c-4c26-9c9a-e48a06798708
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-front
        pod-template-hash: 644799cf7f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T10:30:46-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-front
          pod-template-hash: 644799cf7f
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-front:latest
          imagePullPolicy: Always
          name: ui-bakery-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2024-05-03T00:33:15Z"
    generation: 2
    labels:
      app: ui-bakery-front
      pod-template-hash: 64fc95b464
    name: ui-bakery-front-64fc95b464
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-front
      uid: eb5a861d-6e63-481e-bb94-006a3984e9e2
    resourceVersion: "259290"
    uid: 17431d3d-c781-4ede-9779-b09a259d1ddb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-front
        pod-template-hash: 64fc95b464
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:33:12-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-front
          pod-template-hash: 64fc95b464
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-front:latest
          imagePullPolicy: Always
          name: ui-bakery-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2024-05-03T02:31:50Z"
    generation: 2
    labels:
      app: ui-bakery-front
      pod-template-hash: 6865f44df7
    name: ui-bakery-front-6865f44df7
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-front
      uid: eb5a861d-6e63-481e-bb94-006a3984e9e2
    resourceVersion: "289944"
    uid: a8535bdd-55f1-4c6e-b507-bcd9d0191876
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-front
        pod-template-hash: 6865f44df7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:31:47-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-front
          pod-template-hash: 6865f44df7
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-front:latest
          imagePullPolicy: Always
          name: ui-bakery-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2024-05-02T23:40:06Z"
    generation: 2
    labels:
      app: ui-bakery-front
      pod-template-hash: 68fd776c5c
    name: ui-bakery-front-68fd776c5c
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-front
      uid: eb5a861d-6e63-481e-bb94-006a3984e9e2
    resourceVersion: "246320"
    uid: 7d25d50e-3417-47d6-9af7-8603a88c7ac7
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-front
        pod-template-hash: 68fd776c5c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T18:40:03-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-front
          pod-template-hash: 68fd776c5c
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-front:latest
          imagePullPolicy: Always
          name: ui-bakery-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
    creationTimestamp: "2024-05-03T01:50:31Z"
    generation: 2
    labels:
      app: ui-bakery-front
      pod-template-hash: 6ff6987cb
    name: ui-bakery-front-6ff6987cb
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-front
      uid: eb5a861d-6e63-481e-bb94-006a3984e9e2
    resourceVersion: "286479"
    uid: c26b4bad-49ff-4c12-a720-0c86b2e7b6bd
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-front
        pod-template-hash: 6ff6987cb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:50:28-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-front
          pod-template-hash: 6ff6987cb
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-front:latest
          imagePullPolicy: Always
          name: ui-bakery-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2024-05-03T02:44:13Z"
    generation: 1
    labels:
      app: ui-bakery-front
      pod-template-hash: 749d47b8f
    name: ui-bakery-front-749d47b8f
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-front
      uid: eb5a861d-6e63-481e-bb94-006a3984e9e2
    resourceVersion: "289913"
    uid: 8ee2b4ce-59ed-4a30-b457-96f994e7ad86
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ui-bakery-front
        pod-template-hash: 749d47b8f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:10-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-front
          pod-template-hash: 749d47b8f
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-front:latest
          imagePullPolicy: Always
          name: ui-bakery-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
    creationTimestamp: "2024-05-03T00:46:17Z"
    generation: 2
    labels:
      app: ui-bakery-front
      pod-template-hash: 7748b49f78
    name: ui-bakery-front-7748b49f78
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-front
      uid: eb5a861d-6e63-481e-bb94-006a3984e9e2
    resourceVersion: "267693"
    uid: 3946fe15-cc67-4dc0-bf7a-9d6fcc2da77a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-front
        pod-template-hash: 7748b49f78
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:46:14-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-front
          pod-template-hash: 7748b49f78
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-front:latest
          imagePullPolicy: Always
          name: ui-bakery-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2024-05-02T15:56:53Z"
    generation: 2
    labels:
      app: ui-bakery-front
      pod-template-hash: 7756999dfd
    name: ui-bakery-front-7756999dfd
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-front
      uid: eb5a861d-6e63-481e-bb94-006a3984e9e2
    resourceVersion: "241495"
    uid: 3a1dfc3e-deb8-4da3-b78f-99a46b912dc4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-front
        pod-template-hash: 7756999dfd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T10:56:50-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-front
          pod-template-hash: 7756999dfd
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-front:latest
          imagePullPolicy: Always
          name: ui-bakery-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2024-05-03T01:18:24Z"
    generation: 2
    labels:
      app: ui-bakery-front
      pod-template-hash: 7bf44d8b5
    name: ui-bakery-front-7bf44d8b5
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-front
      uid: eb5a861d-6e63-481e-bb94-006a3984e9e2
    resourceVersion: "276282"
    uid: aedf0a1c-8b31-46d2-805e-53c5182e0026
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-front
        pod-template-hash: 7bf44d8b5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:18:21-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-front
          pod-template-hash: 7bf44d8b5
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-front:latest
          imagePullPolicy: Always
          name: ui-bakery-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2024-05-02T23:58:07Z"
    generation: 2
    labels:
      app: ui-bakery-front
      pod-template-hash: f7d5f7b87
    name: ui-bakery-front-f7d5f7b87
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-front
      uid: eb5a861d-6e63-481e-bb94-006a3984e9e2
    resourceVersion: "252091"
    uid: f886a8be-c480-46a0-bd0b-c5e210da916e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-front
        pod-template-hash: f7d5f7b87
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T18:58:04-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-front
          pod-template-hash: f7d5f7b87
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/bakery-front:latest
          imagePullPolicy: Always
          name: ui-bakery-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2024-05-03T02:44:13Z"
    generation: 1
    labels:
      app: ui-bakery-gateway
      pod-template-hash: 568887dc4c
    name: ui-bakery-gateway-568887dc4c
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-gateway
      uid: 86475be8-071a-48e8-aab5-908dfb281790
    resourceVersion: "289961"
    uid: 88f374a0-bf96-463a-b3b3-8acd11e8e942
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ui-bakery-gateway
        pod-template-hash: 568887dc4c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:10-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-gateway
          pod-template-hash: 568887dc4c
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/gateway:latest
          imagePullPolicy: Always
          name: ui-bakery-gateway
          ports:
          - containerPort: 3030
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2024-05-02T15:56:53Z"
    generation: 2
    labels:
      app: ui-bakery-gateway
      pod-template-hash: 5b4c748bd5
    name: ui-bakery-gateway-5b4c748bd5
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-gateway
      uid: 86475be8-071a-48e8-aab5-908dfb281790
    resourceVersion: "241518"
    uid: 0a3e191e-1bb3-42cf-879f-55e5f332f430
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-gateway
        pod-template-hash: 5b4c748bd5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T10:56:51-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-gateway
          pod-template-hash: 5b4c748bd5
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/gateway:latest
          imagePullPolicy: Always
          name: ui-bakery-gateway
          ports:
          - containerPort: 3030
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2024-05-02T15:30:49Z"
    generation: 2
    labels:
      app: ui-bakery-gateway
      pod-template-hash: 68f74bd498
    name: ui-bakery-gateway-68f74bd498
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-gateway
      uid: 86475be8-071a-48e8-aab5-908dfb281790
    resourceVersion: "131278"
    uid: 839548c6-bf52-4d37-9361-b54d9010ee73
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-gateway
        pod-template-hash: 68f74bd498
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T10:30:47-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-gateway
          pod-template-hash: 68f74bd498
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/gateway:latest
          imagePullPolicy: Always
          name: ui-bakery-gateway
          ports:
          - containerPort: 3030
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2024-05-03T01:18:25Z"
    generation: 2
    labels:
      app: ui-bakery-gateway
      pod-template-hash: 6b8dd5b6bb
    name: ui-bakery-gateway-6b8dd5b6bb
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-gateway
      uid: 86475be8-071a-48e8-aab5-908dfb281790
    resourceVersion: "276177"
    uid: 33091236-3eca-4e54-8c24-0b99de1f8c21
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-gateway
        pod-template-hash: 6b8dd5b6bb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:18:22-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-gateway
          pod-template-hash: 6b8dd5b6bb
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/gateway:latest
          imagePullPolicy: Always
          name: ui-bakery-gateway
          ports:
          - containerPort: 3030
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
    creationTimestamp: "2024-05-03T00:46:17Z"
    generation: 2
    labels:
      app: ui-bakery-gateway
      pod-template-hash: 76479d9f5c
    name: ui-bakery-gateway-76479d9f5c
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-gateway
      uid: 86475be8-071a-48e8-aab5-908dfb281790
    resourceVersion: "267773"
    uid: 07eb4ae9-9fa1-4791-8b85-a5695537a600
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-gateway
        pod-template-hash: 76479d9f5c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:46:15-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-gateway
          pod-template-hash: 76479d9f5c
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/gateway:latest
          imagePullPolicy: Always
          name: ui-bakery-gateway
          ports:
          - containerPort: 3030
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2024-05-03T00:20:21Z"
    generation: 2
    labels:
      app: ui-bakery-gateway
      pod-template-hash: 76b5ff77c8
    name: ui-bakery-gateway-76b5ff77c8
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-gateway
      uid: 86475be8-071a-48e8-aab5-908dfb281790
    resourceVersion: "255577"
    uid: 5bb726a6-4755-44cb-995c-6d09c99c673e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-gateway
        pod-template-hash: 76b5ff77c8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:20:18-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-gateway
          pod-template-hash: 76b5ff77c8
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/gateway:latest
          imagePullPolicy: Always
          name: ui-bakery-gateway
          ports:
          - containerPort: 3030
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2024-05-03T00:33:15Z"
    generation: 2
    labels:
      app: ui-bakery-gateway
      pod-template-hash: 7bc4d678fb
    name: ui-bakery-gateway-7bc4d678fb
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-gateway
      uid: 86475be8-071a-48e8-aab5-908dfb281790
    resourceVersion: "259272"
    uid: 28b4e046-2b7e-468e-b4b1-a31fa26159b5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-gateway
        pod-template-hash: 7bc4d678fb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:33:12-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-gateway
          pod-template-hash: 7bc4d678fb
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/gateway:latest
          imagePullPolicy: Always
          name: ui-bakery-gateway
          ports:
          - containerPort: 3030
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2024-05-03T02:31:51Z"
    generation: 2
    labels:
      app: ui-bakery-gateway
      pod-template-hash: 7cb8f75b5d
    name: ui-bakery-gateway-7cb8f75b5d
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-gateway
      uid: 86475be8-071a-48e8-aab5-908dfb281790
    resourceVersion: "289979"
    uid: ef4aa414-f05e-4605-b344-fd617b0494b7
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-gateway
        pod-template-hash: 7cb8f75b5d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:31:48-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-gateway
          pod-template-hash: 7cb8f75b5d
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/gateway:latest
          imagePullPolicy: Always
          name: ui-bakery-gateway
          ports:
          - containerPort: 3030
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
    creationTimestamp: "2024-05-03T01:50:32Z"
    generation: 2
    labels:
      app: ui-bakery-gateway
      pod-template-hash: 7d4dcd6755
    name: ui-bakery-gateway-7d4dcd6755
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-gateway
      uid: 86475be8-071a-48e8-aab5-908dfb281790
    resourceVersion: "286590"
    uid: 0a1f720a-fcae-4ba5-a6bd-634e9e85f606
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-gateway
        pod-template-hash: 7d4dcd6755
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:50:29-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-gateway
          pod-template-hash: 7d4dcd6755
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/gateway:latest
          imagePullPolicy: Always
          name: ui-bakery-gateway
          ports:
          - containerPort: 3030
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2024-05-02T23:58:07Z"
    generation: 2
    labels:
      app: ui-bakery-gateway
      pod-template-hash: 7df97bccfc
    name: ui-bakery-gateway-7df97bccfc
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-gateway
      uid: 86475be8-071a-48e8-aab5-908dfb281790
    resourceVersion: "252131"
    uid: f680438b-eedf-44bd-8343-c276dfbd8278
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-gateway
        pod-template-hash: 7df97bccfc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T18:58:04-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-gateway
          pod-template-hash: 7df97bccfc
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/gateway:latest
          imagePullPolicy: Always
          name: ui-bakery-gateway
          ports:
          - containerPort: 3030
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2024-05-02T23:40:06Z"
    generation: 2
    labels:
      app: ui-bakery-gateway
      pod-template-hash: dc4654f75
    name: ui-bakery-gateway-dc4654f75
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-gateway
      uid: 86475be8-071a-48e8-aab5-908dfb281790
    resourceVersion: "246313"
    uid: 972f5f07-0a4b-4379-ad71-6e9e9e5bee22
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-gateway
        pod-template-hash: dc4654f75
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T18:40:03-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-gateway
          pod-template-hash: dc4654f75
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/gateway:latest
          imagePullPolicy: Always
          name: ui-bakery-gateway
          ports:
          - containerPort: 3030
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2024-05-03T02:44:14Z"
    generation: 1
    labels:
      app: ui-bakery-python-runtime
      pod-template-hash: 5464b578d7
    name: ui-bakery-python-runtime-5464b578d7
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-python-runtime
      uid: 76b1873c-2551-4a5e-b58a-35f53455f084
    resourceVersion: "289985"
    uid: a334a530-657a-43f6-86a0-504d3ad2f197
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ui-bakery-python-runtime
        pod-template-hash: 5464b578d7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:11-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-python-runtime
          pod-template-hash: 5464b578d7
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/python-runtime:latest
          imagePullPolicy: Always
          name: ui-bakery-python-runtime
          ports:
          - containerPort: 5050
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2024-05-02T23:58:08Z"
    generation: 2
    labels:
      app: ui-bakery-python-runtime
      pod-template-hash: 557665ddbf
    name: ui-bakery-python-runtime-557665ddbf
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-python-runtime
      uid: 76b1873c-2551-4a5e-b58a-35f53455f084
    resourceVersion: "252154"
    uid: 8eda9fe9-f2f0-49a5-ba65-ca27582cec68
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-python-runtime
        pod-template-hash: 557665ddbf
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T18:58:05-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-python-runtime
          pod-template-hash: 557665ddbf
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/python-runtime:latest
          imagePullPolicy: Always
          name: ui-bakery-python-runtime
          ports:
          - containerPort: 5050
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
    creationTimestamp: "2024-05-03T01:50:32Z"
    generation: 2
    labels:
      app: ui-bakery-python-runtime
      pod-template-hash: "5759855488"
    name: ui-bakery-python-runtime-5759855488
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-python-runtime
      uid: 76b1873c-2551-4a5e-b58a-35f53455f084
    resourceVersion: "286585"
    uid: e39e0a3a-16fa-47fb-b91b-e2b5198aafb6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-python-runtime
        pod-template-hash: "5759855488"
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:50:29-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-python-runtime
          pod-template-hash: "5759855488"
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/python-runtime:latest
          imagePullPolicy: Always
          name: ui-bakery-python-runtime
          ports:
          - containerPort: 5050
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
    creationTimestamp: "2024-05-03T00:46:18Z"
    generation: 2
    labels:
      app: ui-bakery-python-runtime
      pod-template-hash: 57bd5bb74b
    name: ui-bakery-python-runtime-57bd5bb74b
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-python-runtime
      uid: 76b1873c-2551-4a5e-b58a-35f53455f084
    resourceVersion: "267731"
    uid: e479c9ff-8ac6-4b86-8740-41bba95573b7
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-python-runtime
        pod-template-hash: 57bd5bb74b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:46:15-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-python-runtime
          pod-template-hash: 57bd5bb74b
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/python-runtime:latest
          imagePullPolicy: Always
          name: ui-bakery-python-runtime
          ports:
          - containerPort: 5050
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2024-05-03T00:33:16Z"
    generation: 2
    labels:
      app: ui-bakery-python-runtime
      pod-template-hash: 58dd74c6d
    name: ui-bakery-python-runtime-58dd74c6d
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-python-runtime
      uid: 76b1873c-2551-4a5e-b58a-35f53455f084
    resourceVersion: "259383"
    uid: b2e012ae-8598-473f-ba56-d189034d6b27
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-python-runtime
        pod-template-hash: 58dd74c6d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:33:13-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-python-runtime
          pod-template-hash: 58dd74c6d
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/python-runtime:latest
          imagePullPolicy: Always
          name: ui-bakery-python-runtime
          ports:
          - containerPort: 5050
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2024-05-02T15:56:54Z"
    generation: 2
    labels:
      app: ui-bakery-python-runtime
      pod-template-hash: 5946f6578
    name: ui-bakery-python-runtime-5946f6578
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-python-runtime
      uid: 76b1873c-2551-4a5e-b58a-35f53455f084
    resourceVersion: "241546"
    uid: a2365f93-df8c-4ea1-b337-00bf60d48a1d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-python-runtime
        pod-template-hash: 5946f6578
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T10:56:51-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-python-runtime
          pod-template-hash: 5946f6578
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/python-runtime:latest
          imagePullPolicy: Always
          name: ui-bakery-python-runtime
          ports:
          - containerPort: 5050
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2024-05-03T01:18:25Z"
    generation: 2
    labels:
      app: ui-bakery-python-runtime
      pod-template-hash: 659597f7b5
    name: ui-bakery-python-runtime-659597f7b5
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-python-runtime
      uid: 76b1873c-2551-4a5e-b58a-35f53455f084
    resourceVersion: "276287"
    uid: c51ebecc-a06a-473e-98a5-32c227183e67
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-python-runtime
        pod-template-hash: 659597f7b5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:18:22-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-python-runtime
          pod-template-hash: 659597f7b5
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/python-runtime:latest
          imagePullPolicy: Always
          name: ui-bakery-python-runtime
          ports:
          - containerPort: 5050
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2024-05-03T00:20:21Z"
    generation: 2
    labels:
      app: ui-bakery-python-runtime
      pod-template-hash: 7bdbf4c48b
    name: ui-bakery-python-runtime-7bdbf4c48b
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-python-runtime
      uid: 76b1873c-2551-4a5e-b58a-35f53455f084
    resourceVersion: "255800"
    uid: 4f7ba93c-5f66-4896-bc90-0bfc5e0fe72c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-python-runtime
        pod-template-hash: 7bdbf4c48b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:20:19-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-python-runtime
          pod-template-hash: 7bdbf4c48b
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/python-runtime:latest
          imagePullPolicy: Always
          name: ui-bakery-python-runtime
          ports:
          - containerPort: 5050
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2024-05-02T15:30:50Z"
    generation: 2
    labels:
      app: ui-bakery-python-runtime
      pod-template-hash: 7f866f867c
    name: ui-bakery-python-runtime-7f866f867c
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-python-runtime
      uid: 76b1873c-2551-4a5e-b58a-35f53455f084
    resourceVersion: "131267"
    uid: a8731eb8-cd19-4a0d-b701-6ac2bbd803cc
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-python-runtime
        pod-template-hash: 7f866f867c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T10:30:47-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-python-runtime
          pod-template-hash: 7f866f867c
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/python-runtime:latest
          imagePullPolicy: Always
          name: ui-bakery-python-runtime
          ports:
          - containerPort: 5050
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2024-05-02T23:40:07Z"
    generation: 2
    labels:
      app: ui-bakery-python-runtime
      pod-template-hash: d69b45897
    name: ui-bakery-python-runtime-d69b45897
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-python-runtime
      uid: 76b1873c-2551-4a5e-b58a-35f53455f084
    resourceVersion: "246347"
    uid: 6149c12f-5570-4057-999b-3e59c4f2ed99
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-python-runtime
        pod-template-hash: d69b45897
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T18:40:04-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-python-runtime
          pod-template-hash: d69b45897
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/python-runtime:latest
          imagePullPolicy: Always
          name: ui-bakery-python-runtime
          ports:
          - containerPort: 5050
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2024-05-03T02:31:51Z"
    generation: 2
    labels:
      app: ui-bakery-python-runtime
      pod-template-hash: d6b46dc4f
    name: ui-bakery-python-runtime-d6b46dc4f
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-python-runtime
      uid: 76b1873c-2551-4a5e-b58a-35f53455f084
    resourceVersion: "289997"
    uid: 4ffdc917-b178-4d58-a064-5b8cf7819f31
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-python-runtime
        pod-template-hash: d6b46dc4f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:31:48-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-python-runtime
          pod-template-hash: d6b46dc4f
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/python-runtime:latest
          imagePullPolicy: Always
          name: ui-bakery-python-runtime
          ports:
          - containerPort: 5050
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2024-05-02T15:56:54Z"
    generation: 2
    labels:
      app: ui-bakery-workbench-front
      pod-template-hash: 5b588bdc57
    name: ui-bakery-workbench-front-5b588bdc57
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-workbench-front
      uid: eed53fbf-99c6-4e70-83d0-f7c0fb405656
    resourceVersion: "241561"
    uid: ef8bcbe7-7cfc-4af9-8fe6-e3b8d86c8d42
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-workbench-front
        pod-template-hash: 5b588bdc57
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T10:56:52-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-workbench-front
          pod-template-hash: 5b588bdc57
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/workbench-front:latest
          imagePullPolicy: Always
          name: ui-bakery-workbench-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2024-05-03T00:33:17Z"
    generation: 2
    labels:
      app: ui-bakery-workbench-front
      pod-template-hash: 5df88494c9
    name: ui-bakery-workbench-front-5df88494c9
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-workbench-front
      uid: eed53fbf-99c6-4e70-83d0-f7c0fb405656
    resourceVersion: "259329"
    uid: 9a2f3963-9cdb-4500-bb25-80889089e43e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-workbench-front
        pod-template-hash: 5df88494c9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:33:14-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-workbench-front
          pod-template-hash: 5df88494c9
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/workbench-front:latest
          imagePullPolicy: Always
          name: ui-bakery-workbench-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2024-05-03T00:20:22Z"
    generation: 2
    labels:
      app: ui-bakery-workbench-front
      pod-template-hash: 5fc76dd4f6
    name: ui-bakery-workbench-front-5fc76dd4f6
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-workbench-front
      uid: eed53fbf-99c6-4e70-83d0-f7c0fb405656
    resourceVersion: "255743"
    uid: 7065804d-f6ea-4c51-bac6-a1737818c649
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-workbench-front
        pod-template-hash: 5fc76dd4f6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:20:19-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-workbench-front
          pod-template-hash: 5fc76dd4f6
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/workbench-front:latest
          imagePullPolicy: Always
          name: ui-bakery-workbench-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
    creationTimestamp: "2024-05-03T01:50:33Z"
    generation: 2
    labels:
      app: ui-bakery-workbench-front
      pod-template-hash: 6b66949f84
    name: ui-bakery-workbench-front-6b66949f84
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-workbench-front
      uid: eed53fbf-99c6-4e70-83d0-f7c0fb405656
    resourceVersion: "286527"
    uid: 3d5c9c65-8708-4400-bfb8-090da4da2047
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-workbench-front
        pod-template-hash: 6b66949f84
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:50:30-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-workbench-front
          pod-template-hash: 6b66949f84
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/workbench-front:latest
          imagePullPolicy: Always
          name: ui-bakery-workbench-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2024-05-02T23:58:08Z"
    generation: 2
    labels:
      app: ui-bakery-workbench-front
      pod-template-hash: 6d9c8c8b9f
    name: ui-bakery-workbench-front-6d9c8c8b9f
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-workbench-front
      uid: eed53fbf-99c6-4e70-83d0-f7c0fb405656
    resourceVersion: "252171"
    uid: 9768e378-e3a4-4b88-b850-ef81058efa7b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-workbench-front
        pod-template-hash: 6d9c8c8b9f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T18:58:05-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-workbench-front
          pod-template-hash: 6d9c8c8b9f
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/workbench-front:latest
          imagePullPolicy: Always
          name: ui-bakery-workbench-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2024-05-03T01:18:26Z"
    generation: 2
    labels:
      app: ui-bakery-workbench-front
      pod-template-hash: 7789dbd7cb
    name: ui-bakery-workbench-front-7789dbd7cb
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-workbench-front
      uid: eed53fbf-99c6-4e70-83d0-f7c0fb405656
    resourceVersion: "276199"
    uid: 855621a5-a0d3-4639-b08f-33f4a4404b37
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-workbench-front
        pod-template-hash: 7789dbd7cb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T20:18:23-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-workbench-front
          pod-template-hash: 7789dbd7cb
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/workbench-front:latest
          imagePullPolicy: Always
          name: ui-bakery-workbench-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2024-05-02T15:30:50Z"
    generation: 2
    labels:
      app: ui-bakery-workbench-front
      pod-template-hash: 78c6f46874
    name: ui-bakery-workbench-front-78c6f46874
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-workbench-front
      uid: eed53fbf-99c6-4e70-83d0-f7c0fb405656
    resourceVersion: "131295"
    uid: 8fa21d84-b71f-4844-9161-c6bc1248f88b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-workbench-front
        pod-template-hash: 78c6f46874
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T10:30:48-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-workbench-front
          pod-template-hash: 78c6f46874
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/workbench-front:latest
          imagePullPolicy: Always
          name: ui-bakery-workbench-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2024-05-02T23:40:07Z"
    generation: 2
    labels:
      app: ui-bakery-workbench-front
      pod-template-hash: 79d589bf67
    name: ui-bakery-workbench-front-79d589bf67
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-workbench-front
      uid: eed53fbf-99c6-4e70-83d0-f7c0fb405656
    resourceVersion: "246272"
    uid: 7874a649-f561-44aa-9679-e38d4549551b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-workbench-front
        pod-template-hash: 79d589bf67
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T18:40:04-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-workbench-front
          pod-template-hash: 79d589bf67
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/workbench-front:latest
          imagePullPolicy: Always
          name: ui-bakery-workbench-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
    creationTimestamp: "2024-05-03T00:46:19Z"
    generation: 2
    labels:
      app: ui-bakery-workbench-front
      pod-template-hash: 79ffd5c697
    name: ui-bakery-workbench-front-79ffd5c697
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-workbench-front
      uid: eed53fbf-99c6-4e70-83d0-f7c0fb405656
    resourceVersion: "267758"
    uid: 21d111ba-8ba7-4329-a871-0ddbb1637635
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-workbench-front
        pod-template-hash: 79ffd5c697
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T19:46:16-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-workbench-front
          pod-template-hash: 79ffd5c697
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/workbench-front:latest
          imagePullPolicy: Always
          name: ui-bakery-workbench-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2024-05-03T02:44:14Z"
    generation: 1
    labels:
      app: ui-bakery-workbench-front
      pod-template-hash: 84c575d557
    name: ui-bakery-workbench-front-84c575d557
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-workbench-front
      uid: eed53fbf-99c6-4e70-83d0-f7c0fb405656
    resourceVersion: "290005"
    uid: 7883a515-fa9c-42c9-87e6-ca7c82cac524
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ui-bakery-workbench-front
        pod-template-hash: 84c575d557
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:44:11-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-workbench-front
          pod-template-hash: 84c575d557
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/workbench-front:latest
          imagePullPolicy: Always
          name: ui-bakery-workbench-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2024-05-03T02:31:52Z"
    generation: 2
    labels:
      app: ui-bakery-workbench-front
      pod-template-hash: f596d7f76
    name: ui-bakery-workbench-front-f596d7f76
    namespace: ui-bakery
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ui-bakery-workbench-front
      uid: eed53fbf-99c6-4e70-83d0-f7c0fb405656
    resourceVersion: "290018"
    uid: 09a9e70b-739f-498e-a661-bc03ea84da7b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ui-bakery-workbench-front
        pod-template-hash: f596d7f76
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-05-02T21:31:49-05:00"
        creationTimestamp: null
        labels:
          app: ui-bakery-workbench-front
          pod-template-hash: f596d7f76
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: ui-bakery-configmap
          image: cruibakeryonprem.azurecr.io/cloud/workbench-front:latest
          imagePullPolicy: Always
          name: ui-bakery-workbench-front
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 900m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
kind: List
metadata:
  resourceVersion: ""
